{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0","program":"C:\\Users\\tubak\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","ssri","--edition=2018","C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","-C","metadata=b639cae62e09e8de","-C","extra-filename=-b639cae62e09e8de","--out-dir","c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps","--extern","base64=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libbase64-9337127b08d34468.rmeta","--extern","digest=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libdigest-5b87bedd5504e56a.rmeta","--extern","hex=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libhex-3e90446a0ee1ee21.rmeta","--extern","serde=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libserde-98c75b97e0ef48d4.rmeta","--extern","sha1=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libsha1-9d55eb25fd188366.rmeta","--extern","sha2=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libsha2-e36f10f37a9ad3aa.rmeta","--extern","thiserror=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libthiserror-b6cae7525fe35559.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\tubak\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libssri-b639cae62e09e8de.rmeta"},"prelude":{"crate_id":{"name":"ssri","disambiguator":[7012346882436296776,0]},"crate_root":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src","external_crates":[{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\errors.rs","num":16,"id":{"name":"thiserror","disambiguator":[6983191696143677211,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\errors.rs","num":17,"id":{"name":"thiserror_impl","disambiguator":[5552769159968391373,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","num":18,"id":{"name":"serde","disambiguator":[5903678648452519157,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","num":19,"id":{"name":"serde_derive","disambiguator":[9040626164636612207,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","num":20,"id":{"name":"base64","disambiguator":[9393054483608740811,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","num":21,"id":{"name":"byteorder","disambiguator":[7485636545642705259,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","num":22,"id":{"name":"digest","disambiguator":[15686529797730670785,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","num":23,"id":{"name":"generic_array","disambiguator":[12283599131553755808,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","num":24,"id":{"name":"typenum","disambiguator":[5371539035448183228,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","num":25,"id":{"name":"sha1","disambiguator":[7614640610879311542,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","num":26,"id":{"name":"block_buffer","disambiguator":[11536257078422592023,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","num":27,"id":{"name":"block_padding","disambiguator":[5614481761038721138,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","num":28,"id":{"name":"byte_tools","disambiguator":[259142096615137507,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","num":29,"id":{"name":"opaque_debug","disambiguator":[8741766904379489802,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","num":30,"id":{"name":"fake_simd","disambiguator":[13267237998350250813,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","num":31,"id":{"name":"sha2","disambiguator":[818357432634781080,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","num":32,"id":{"name":"hex","disambiguator":[14383003841728715371,0]}}],"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","byte_start":0,"byte_end":1547,"line_start":1,"line_end":51,"column_start":1,"column_end":29}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","byte_start":1389,"byte_end":1398,"line_start":46,"line_end":46,"column_start":20,"column_end":29},"alias_span":null,"name":"Algorithm","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","byte_start":1407,"byte_end":1408,"line_start":46,"line_end":46,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","byte_start":1428,"byte_end":1444,"line_start":47,"line_end":47,"column_start":18,"column_end":34},"alias_span":null,"name":"IntegrityChecker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","byte_start":1462,"byte_end":1467,"line_start":48,"line_end":48,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","byte_start":1483,"byte_end":1487,"line_start":49,"line_end":49,"column_start":15,"column_end":19},"alias_span":null,"name":"Hash","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","byte_start":1508,"byte_end":1517,"line_start":50,"line_end":50,"column_start":20,"column_end":29},"alias_span":null,"name":"Integrity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","byte_start":1533,"byte_end":1546,"line_start":51,"line_end":51,"column_start":15,"column_end":28},"alias_span":null,"name":"IntegrityOpts","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","byte_start":0,"byte_end":1547,"line_start":1,"line_end":51,"column_start":1,"column_end":29},"name":"","qualname":"::","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":15},{"krate":0,"index":42},{"krate":0,"index":49},{"krate":0,"index":72},{"krate":0,"index":146},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205}],"decl_id":null,"docs":"[`ssri`](https://github.com/zkat/ssri-rs), short for Standard Subresource\nIntegrity, is a Rust library for parsing, manipulating, serializing,\ngenerating, and verifying [Subresource Integrity](https://w3c.github.io/webappsec/specs/subresourceintegrity/)\nhashes.","sig":null,"attributes":[{"value":"*\n[`ssri`](https://github.com/zkat/ssri-rs), short for Standard Subresource\nIntegrity, is a Rust library for parsing, manipulating, serializing,\ngenerating, and verifying [Subresource Integrity](https://w3c.github.io/webappsec/specs/subresourceintegrity/)\nhashes.\n\n# Examples\n\nParse a string as [`Integrity`](struct.Integrity.html) to convert it to a struct:\n```\n# use ssri::Integrity;\nlet source = \"sha256-uU0nuZNNPgilLlLX2n2r+sSE7+N6U4DukIj3rOLvzek=\";\n\nlet parsed: Integrity = source.parse().unwrap();\nassert_eq!(parsed.to_string(), source)\n```\n\nGenerating a new hash from file data:\n```\n# use ssri::Integrity;\n// By default, generates Integrity as Sha256.\n// Use IntegrityOpts to pick the algorithm yourself.\nlet sri = Integrity::from(b\"hello world\");\nassert_eq!(sri.to_string(), \"sha256-uU0nuZNNPgilLlLX2n2r+sSE7+N6U4DukIj3rOLvzek=\");\n```\n\nVerifying data against an SRI:\n```\n# use ssri::{Integrity, Algorithm};\nlet sri = Integrity::from(b\"hello world\");\nassert_eq!(sri.check(b\"hello world\").unwrap(), Algorithm::Sha256);\n```\n\nYou can also use [`IntegrityOpts`](struct.IntegrityOpts.html) and [`IntegrityChecker`](struct.IntegrityChecker.html) to generate\nand check subresource integrity, respectively. These allow things like multiple algorithms, and\nincremental/streamed data input.\n*/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\lib.rs","byte_start":0,"byte_end":1292,"line_start":1,"line_end":37,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\algorithm.rs","byte_start":2032,"byte_end":2038,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Sha512","qualname":"::algorithm::Algorithm::Sha512","value":"Algorithm::Sha512","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\algorithm.rs","byte_start":2044,"byte_end":2050,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Sha384","qualname":"::algorithm::Algorithm::Sha384","value":"Algorithm::Sha384","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\algorithm.rs","byte_start":2056,"byte_end":2062,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Sha256","qualname":"::algorithm::Algorithm::Sha256","value":"Algorithm::Sha256","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\algorithm.rs","byte_start":2068,"byte_end":2072,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Sha1","qualname":"::algorithm::Algorithm::Sha1","value":"Algorithm::Sha1","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\algorithm.rs","byte_start":2016,"byte_end":2025,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"Algorithm","qualname":"::algorithm::Algorithm","value":"pub enum Algorithm { Sha512, Sha384, Sha256, Sha1, }","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215}],"decl_id":null,"docs":"Valid algorithms for integrity strings.","sig":null,"attributes":[{"value":"*\nValid algorithms for integrity strings.\n\n`Sha1` is a special case in this library -- it's not allowed by the\ncurrent SRI spec, but it's useful enough that having first-class support\nmakes sense. It should also be completely harmless to have in your strings\nif you do use it in a browser context.\n*/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\algorithm.rs","byte_start":1642,"byte_end":1944,"line_start":5,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":3641,"byte_end":3657,"line_start":19,"line_end":19,"column_start":12,"column_end":28},"name":"IntegrityChecker","qualname":"::checker::IntegrityChecker","value":"IntegrityChecker {  }","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":"Check data against an [`Integrity`](struct.Integrity.html).","sig":null,"attributes":[{"value":"*\nCheck data against an [`Integrity`](struct.Integrity.html).\n\n# Examples\n\n```\n# use ssri::{Algorithm, Integrity, IntegrityChecker};\nlet data = b\"hello world\";\nlet sri = Integrity::from(&data);\nlet checker = IntegrityChecker::new(sri).chain(&data);\nassert_eq!(checker.result().unwrap(), Algorithm::Sha256);\n```\n*/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":3314,"byte_end":3629,"line_start":6,"line_end":18,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":3837,"byte_end":3840,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<IntegrityChecker>::new","value":"pub fn new(Integrity) -> IntegrityChecker","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `IntegrityChecker` builder. Use this to verify chunked\n data.\n","sig":null,"attributes":[{"value":"/ Creates a new `IntegrityChecker` builder. Use this to verify chunked","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":3739,"byte_end":3811,"line_start":25,"line_end":25,"column_start":5,"column_end":77}},{"value":"/ data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":3816,"byte_end":3825,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":4060,"byte_end":4065,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"input","qualname":"<IntegrityChecker>::input","value":"pub fn input<B: AsRef<[u8]>>(&mut Self, B)","parent":null,"children":[],"decl_id":null,"docs":" Add some data to the running checker.\n","sig":null,"attributes":[{"value":"/ Add some data to the running checker.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":4007,"byte_end":4048,"line_start":31,"line_end":31,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":4224,"byte_end":4229,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"chain","qualname":"<IntegrityChecker>::chain","value":"pub fn chain<B: AsRef<[u8]>>(Self, B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same as `IntegrityChecker::input`, but allows chained calls.\n","sig":null,"attributes":[{"value":"/ Same as `IntegrityChecker::input`, but allows chained calls.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":4148,"byte_end":4212,"line_start":35,"line_end":35,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":4430,"byte_end":4436,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"result","qualname":"<IntegrityChecker>::result","value":"pub fn result(Self) -> Result<Algorithm, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matching algorithm if the inputted data matches the input `Integrity`.\n","sig":null,"attributes":[{"value":"/ Returns the matching algorithm if the inputted data matches the input `Integrity`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":4332,"byte_end":4418,"line_start":40,"line_end":40,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\errors.rs","byte_start":5868,"byte_end":5887,"line_start":10,"line_end":10,"column_start":5,"column_end":24},"name":"ParseIntegrityError","qualname":"::errors::Error::ParseIntegrityError","value":"Error::ParseIntegrityError(String)","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Error parsing an SRI string into an Integrity object.\n","sig":null,"attributes":[{"value":"/ Error parsing an SRI string into an Integrity object.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\errors.rs","byte_start":5740,"byte_end":5797,"line_start":8,"line_end":8,"column_start":5,"column_end":62}},{"value":"error(\"Failed to parse subresource integrity string: {0}\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\errors.rs","byte_start":5802,"byte_end":5863,"line_start":9,"line_end":9,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\errors.rs","byte_start":6016,"byte_end":6035,"line_start":13,"line_end":13,"column_start":5,"column_end":24},"name":"IntegrityCheckError","qualname":"::errors::Error::IntegrityCheckError","value":"Error::IntegrityCheckError(Integrity, Integrity)","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Error matching two Integrity values.\n","sig":null,"attributes":[{"value":"/ Error matching two Integrity values.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\errors.rs","byte_start":5901,"byte_end":5941,"line_start":11,"line_end":11,"column_start":5,"column_end":45}},{"value":"error(\"Integrity check failed.\\n\\tWanted: {0}\\n\\tActual: {1}\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\errors.rs","byte_start":5946,"byte_end":6011,"line_start":12,"line_end":12,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\errors.rs","byte_start":5728,"byte_end":5733,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"pub enum Error {\n    ParseIntegrityError(String),\n    IntegrityCheckError(Integrity, Integrity),\n}","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":248}],"decl_id":null,"docs":" Integrity-related error values.\n","sig":null,"attributes":[{"value":"/ Integrity-related error values.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\errors.rs","byte_start":5659,"byte_end":5694,"line_start":5,"line_end":5,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\hash.rs","byte_start":6361,"byte_end":6365,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Hash","qualname":"::hash::Hash","value":"Hash { algorithm, digest }","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"decl_id":null,"docs":"Represents a single algorithm/digest pair.","sig":null,"attributes":[{"value":"*\nRepresents a single algorithm/digest pair.\n\nThis is mostly internal, although users might interact with it directly on\noccasion.\n*/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\hash.rs","byte_start":6175,"byte_end":6310,"line_start":7,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Field","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\hash.rs","byte_start":6376,"byte_end":6385,"line_start":15,"line_end":15,"column_start":9,"column_end":18},"name":"algorithm","qualname":"::hash::Hash::algorithm","value":"algorithm::Algorithm","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\hash.rs","byte_start":6406,"byte_end":6412,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"digest","qualname":"::hash::Hash::digest","value":"std::string::String","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":10379,"byte_end":10388,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"Integrity","qualname":"::integrity::Integrity","value":"Integrity { hashes }","parent":null,"children":[{"krate":0,"index":267}],"decl_id":null,"docs":"Representation of a full [Subresource Integrity string](https://w3c.github.io/webappsec/specs/subresourceintegrity/).","sig":null,"attributes":[{"value":"*\nRepresentation of a full [Subresource Integrity string](https://w3c.github.io/webappsec/specs/subresourceintegrity/).\n\n`Integrity` can be used for parsing and also includes convenience methods\nfor shorthand versions of [`IntegrityOpts`](struct.IntegrityOpts.html) and\n[`IntegrityChecker`](struct.IntegrityChecker.html).\n\n# Example\n\n```\n# use ssri::Integrity;\nlet source = \"sha256-uU0nuZNNPgilLlLX2n2r+sSE7+N6U4DukIj3rOLvzek=\";\n\nlet parsed: Integrity = source.parse().unwrap();\nassert_eq!(parsed.to_string(), source);\n```\n*/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":9801,"byte_end":10328,"line_start":14,"line_end":30,"column_start":1,"column_end":3}}]},{"kind":"Field","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":10399,"byte_end":10405,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"name":"hashes","qualname":"::integrity::Integrity::hashes","value":"std::vec::Vec<hash::Hash>","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12737,"byte_end":12751,"line_start":119,"line_end":119,"column_start":12,"column_end":26},"name":"pick_algorithm","qualname":"<Integrity>::pick_algorithm","value":"pub fn pick_algorithm(&Self) -> Algorithm","parent":null,"children":[],"decl_id":null,"docs":" Pick the most secure available `Algorithm` in this `Integrity`.","sig":null,"attributes":[{"value":"/ Pick the most secure available `Algorithm` in this `Integrity`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12382,"byte_end":12449,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12454,"byte_end":12457,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12462,"byte_end":12475,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12480,"byte_end":12487,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use ssri::{Integrity, Algorithm};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12492,"byte_end":12529,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12534,"byte_end":12537,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let sri: Integrity = \"sha1-deadbeef sha256-badc0ffee\".parse().unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12542,"byte_end":12617,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ let algorithm = sri.pick_algorithm();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12622,"byte_end":12663,"line_start":116,"line_end":116,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(algorithm, Algorithm::Sha256);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12668,"byte_end":12713,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12718,"byte_end":12725,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13177,"byte_end":13181,"line_start":132,"line_end":132,"column_start":12,"column_end":16},"name":"from","qualname":"<Integrity>::from","value":"pub fn from<B: AsRef<[u8]>>(B) -> Integrity","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Integrity` based on `data`. Use\n [`IntegrityOpts`](struct.IntegrityOpts.html) for more options.","sig":null,"attributes":[{"value":"/ Create a new `Integrity` based on `data`. Use","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12818,"byte_end":12867,"line_start":123,"line_end":123,"column_start":5,"column_end":54}},{"value":"/ [`IntegrityOpts`](struct.IntegrityOpts.html) for more options.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12872,"byte_end":12938,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12943,"byte_end":12946,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12951,"byte_end":12964,"line_start":126,"line_end":126,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12969,"byte_end":12976,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ use ssri::Integrity;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12981,"byte_end":13005,"line_start":128,"line_end":128,"column_start":5,"column_end":29}},{"value":"/ let sri = Integrity::from(b\"hello\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13010,"byte_end":13050,"line_start":129,"line_end":129,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(sri.to_string(), \"sha256-LPJNul+wow4m6DsqxbninhsWHlwfp0JecwQzYpOLmCQ=\".to_owned());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13055,"byte_end":13153,"line_start":130,"line_end":130,"column_start":5,"column_end":103}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13158,"byte_end":13165,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13836,"byte_end":13842,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"concat","qualname":"<Integrity>::concat","value":"pub fn concat(&Self, Integrity) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Join together two `Integrity` instances. Hashes will be grouped and\n sorted by algorithm but otherwise kept in the same order.","sig":null,"attributes":[{"value":"/ Join together two `Integrity` instances. Hashes will be grouped and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13352,"byte_end":13423,"line_start":139,"line_end":139,"column_start":5,"column_end":76}},{"value":"/ sorted by algorithm but otherwise kept in the same order.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13428,"byte_end":13489,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13494,"byte_end":13497,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13502,"byte_end":13515,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13520,"byte_end":13527,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use ssri::Integrity;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13532,"byte_end":13556,"line_start":144,"line_end":144,"column_start":5,"column_end":29}},{"value":"/ let sri1: Integrity = \"sha256-deadbeef\".parse().unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13561,"byte_end":13622,"line_start":145,"line_end":145,"column_start":5,"column_end":66}},{"value":"/ let sri2: Integrity = \"sha256-badc0ffee\".parse().unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13627,"byte_end":13689,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/ let sri3 = sri1.concat(sri2);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13694,"byte_end":13727,"line_start":147,"line_end":147,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(sri3.to_string(), \"sha256-deadbeef sha256-badc0ffee\".to_owned());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13732,"byte_end":13812,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":13817,"byte_end":13824,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14406,"byte_end":14411,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"name":"check","qualname":"<Integrity>::check","value":"pub fn check<B: AsRef<[u8]>>(&Self, B) -> Result<Algorithm, Error>","parent":null,"children":[],"decl_id":null,"docs":" Check some data against this `Integrity`. For more options, use\n [`Checker`](struct.Checker.html).","sig":null,"attributes":[{"value":"/ Check some data against this `Integrity`. For more options, use","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14036,"byte_end":14103,"line_start":157,"line_end":157,"column_start":5,"column_end":72}},{"value":"/ [`Checker`](struct.Checker.html).","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14108,"byte_end":14145,"line_start":158,"line_end":158,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14150,"byte_end":14153,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14158,"byte_end":14171,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14176,"byte_end":14183,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ use ssri::{Algorithm, Integrity};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14188,"byte_end":14225,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14230,"byte_end":14233,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let sri = Integrity::from(b\"hello\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14238,"byte_end":14278,"line_start":164,"line_end":164,"column_start":5,"column_end":45}},{"value":"/ let algorithm = sri.check(b\"hello\").unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14283,"byte_end":14332,"line_start":165,"line_end":165,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(algorithm, Algorithm::Sha256);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14337,"byte_end":14382,"line_start":166,"line_end":166,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14387,"byte_end":14394,"line_start":167,"line_end":167,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15034,"byte_end":15040,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<Integrity>::to_hex","value":"pub fn to_hex(&Self) -> (Algorithm, String)","parent":null,"children":[],"decl_id":null,"docs":" Converts the first `Hash` in this `Integrity` into its hex string\n format.","sig":null,"attributes":[{"value":"/ Converts the first `Hash` in this `Integrity` into its hex string","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14603,"byte_end":14672,"line_start":174,"line_end":174,"column_start":5,"column_end":74}},{"value":"/ format.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14677,"byte_end":14688,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14693,"byte_end":14696,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14701,"byte_end":14714,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14719,"byte_end":14726,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use ssri::{Algorithm, Integrity};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14731,"byte_end":14768,"line_start":179,"line_end":179,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14773,"byte_end":14776,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let sri = Integrity::from(b\"hello\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14781,"byte_end":14821,"line_start":181,"line_end":181,"column_start":5,"column_end":45}},{"value":"/ let (algo, hex) = sri.to_hex();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14826,"byte_end":14861,"line_start":182,"line_end":182,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(algo, Algorithm::Sha256);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14866,"byte_end":14906,"line_start":183,"line_end":183,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(hex, \"2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824\".to_owned());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":14911,"byte_end":15010,"line_start":184,"line_end":184,"column_start":5,"column_end":104}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15015,"byte_end":15022,"line_start":185,"line_end":185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15690,"byte_end":15697,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"matches","qualname":"<Integrity>::matches","value":"pub fn matches(&Self, &Self) -> Option<Algorithm>","parent":null,"children":[],"decl_id":null,"docs":" Compares `self` against a given SRI to see if there's a match. The\n deciding algorithm is determined by `other`.","sig":null,"attributes":[{"value":"/ Compares `self` against a given SRI to see if there's a match. The","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15244,"byte_end":15314,"line_start":194,"line_end":194,"column_start":5,"column_end":75}},{"value":"/ deciding algorithm is determined by `other`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15319,"byte_end":15367,"line_start":195,"line_end":195,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15372,"byte_end":15375,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15380,"byte_end":15393,"line_start":197,"line_end":197,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15398,"byte_end":15405,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ use ssri::{Algorithm, Integrity};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15410,"byte_end":15447,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15452,"byte_end":15455,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ let sri1 = Integrity::from(b\"hello\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15460,"byte_end":15501,"line_start":201,"line_end":201,"column_start":5,"column_end":46}},{"value":"/ let sri2 = Integrity::from(b\"hello\").concat(Integrity::from(b\"world\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15506,"byte_end":15581,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ let m = sri1.matches(&sri2);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15586,"byte_end":15618,"line_start":203,"line_end":203,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(m, Some(Algorithm::Sha256));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15623,"byte_end":15666,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":15671,"byte_end":15678,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":19172,"byte_end":19185,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"IntegrityOpts","qualname":"::opts::IntegrityOpts","value":"IntegrityOpts {  }","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297}],"decl_id":null,"docs":"Builds a new [`Integrity`](struct.Integrity.html), allowing multiple algorithms and incremental input.","sig":null,"attributes":[{"value":"*\nBuilds a new [`Integrity`](struct.Integrity.html), allowing multiple algorithms and incremental input.\n\n# Examples\n\n```\nuse ssri::{Algorithm, IntegrityOpts};\nlet contents = b\"hello world\";\nlet sri = IntegrityOpts::new()\n    .algorithm(Algorithm::Sha512)\n    .algorithm(Algorithm::Sha1)\n    .chain(&contents)\n    .result();\n```\n\n*/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":18800,"byte_end":19134,"line_start":19,"line_end":34,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":19315,"byte_end":19318,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<IntegrityOpts>::new","value":"pub fn new() -> IntegrityOpts","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hashing IntegrityOpts.\n","sig":null,"attributes":[{"value":"/ Creates a new hashing IntegrityOpts.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":19263,"byte_end":19303,"line_start":42,"line_end":42,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":19581,"byte_end":19590,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<IntegrityOpts>::algorithm","value":"pub fn algorithm(Self, Algorithm) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a hash for this algorithm. Can be called multiple times to generate an `Integrity` string with multiple entries.\n","sig":null,"attributes":[{"value":"/ Generate a hash for this algorithm. Can be called multiple times to generate an `Integrity` string with multiple entries.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":19444,"byte_end":19569,"line_start":50,"line_end":50,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":20235,"byte_end":20240,"line_start":65,"line_end":65,"column_start":12,"column_end":17},"name":"input","qualname":"<IntegrityOpts>::input","value":"pub fn input<B: AsRef<[u8]>>(&mut Self, B)","parent":null,"children":[],"decl_id":null,"docs":" Add some data to this IntegrityOpts. All internal hashers will be updated for all configured `Algorithm`s.\n","sig":null,"attributes":[{"value":"/ Add some data to this IntegrityOpts. All internal hashers will be updated for all configured `Algorithm`s.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":20113,"byte_end":20223,"line_start":64,"line_end":64,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":20771,"byte_end":20776,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"chain","qualname":"<IntegrityOpts>::chain","value":"pub fn chain<B: AsRef<[u8]>>(Self, B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same as `IntegrityOpts::input`, but allows chaining.\n","sig":null,"attributes":[{"value":"/ Same as `IntegrityOpts::input`, but allows chaining.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":20703,"byte_end":20759,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":20936,"byte_end":20941,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"reset","qualname":"<IntegrityOpts>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets internal state for this IntegrityOpts.\n","sig":null,"attributes":[{"value":"/ Resets internal state for this IntegrityOpts.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":20875,"byte_end":20924,"line_start":83,"line_end":83,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":21121,"byte_end":21127,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"result","qualname":"<IntegrityOpts>::result","value":"pub fn result(Self) -> Integrity","parent":null,"children":[],"decl_id":null,"docs":" Generate a new `Integrity` from the inputted data and configured algorithms.\n","sig":null,"attributes":[{"value":"/ Generate a new `Integrity` from the inputted data and configured algorithms.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":21029,"byte_end":21109,"line_start":89,"line_end":89,"column_start":5,"column_end":85}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\algorithm.rs","byte_start":2099,"byte_end":2108,"line_start":21,"line_end":21,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\algorithm.rs","byte_start":2268,"byte_end":2277,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":3716,"byte_end":3732,"line_start":24,"line_end":24,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\hash.rs","byte_start":6445,"byte_end":6449,"line_start":19,"line_end":19,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\hash.rs","byte_start":6566,"byte_end":6570,"line_start":25,"line_end":25,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\hash.rs","byte_start":6694,"byte_end":6698,"line_start":30,"line_end":30,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\hash.rs","byte_start":6852,"byte_end":6856,"line_start":36,"line_end":36,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":10443,"byte_end":10452,"line_start":36,"line_end":36,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":10766,"byte_end":10775,"line_start":50,"line_end":50,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":11398,"byte_end":11407,"line_start":72,"line_end":72,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":11634,"byte_end":11643,"line_start":82,"line_end":82,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":11839,"byte_end":11855,"line_start":89,"line_end":89,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12366,"byte_end":12375,"line_start":108,"line_end":108,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":19243,"byte_end":19256,"line_start":41,"line_end":41,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":21919,"byte_end":21932,"line_start":112,"line_end":112,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":22132,"byte_end":22145,"line_start":121,"line_end":121,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":22228,"byte_end":22241,"line_start":127,"line_end":127,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\algorithm.rs","byte_start":2099,"byte_end":2108,"line_start":21,"line_end":21,"column_start":23,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":208},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\algorithm.rs","byte_start":2268,"byte_end":2277,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":208},"to":{"krate":2,"index":12324}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\checker.rs","byte_start":3716,"byte_end":3732,"line_start":24,"line_end":24,"column_start":6,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":28},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\hash.rs","byte_start":6445,"byte_end":6449,"line_start":19,"line_end":19,"column_start":21,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\hash.rs","byte_start":6566,"byte_end":6570,"line_start":25,"line_end":25,"column_start":14,"column_end":18},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":2745}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\hash.rs","byte_start":6694,"byte_end":6698,"line_start":30,"line_end":30,"column_start":23,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\hash.rs","byte_start":6852,"byte_end":6856,"line_start":36,"line_end":36,"column_start":28,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":12324}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":10443,"byte_end":10452,"line_start":36,"line_end":36,"column_start":23,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":10766,"byte_end":10775,"line_start":50,"line_end":50,"column_start":28,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":12324}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":11398,"byte_end":11407,"line_start":72,"line_end":72,"column_start":20,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":266},"to":{"krate":18,"index":2101}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":11634,"byte_end":11643,"line_start":82,"line_end":82,"column_start":32,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":266},"to":{"krate":18,"index":1560}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":11839,"byte_end":11855,"line_start":89,"line_end":89,"column_start":36,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":124},"to":{"krate":18,"index":1646}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\integrity.rs","byte_start":12366,"byte_end":12375,"line_start":108,"line_end":108,"column_start":6,"column_end":15},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":19243,"byte_end":19256,"line_start":41,"line_end":41,"column_start":6,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":21919,"byte_end":21932,"line_start":112,"line_end":112,"column_start":24,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":295},"to":{"krate":22,"index":116}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":22132,"byte_end":22145,"line_start":121,"line_end":121,"column_start":24,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":295},"to":{"krate":22,"index":139}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ssri-7.0.0\\src\\opts.rs","byte_start":22228,"byte_end":22241,"line_start":127,"line_end":127,"column_start":25,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":295},"to":{"krate":1,"index":4780}}]}
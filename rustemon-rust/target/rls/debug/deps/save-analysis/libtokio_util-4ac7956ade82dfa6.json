{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3","program":"C:\\Users\\tubak\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"tracing\"","-C","metadata=4ac7956ade82dfa6","-C","extra-filename=-4ac7956ade82dfa6","--out-dir","c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libbytes-68c44aea9a0fa3ea.rmeta","--extern","futures_core=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libfutures_core-e34f210f395a45b5.rmeta","--extern","futures_sink=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libfutures_sink-8c29533238f7a4d0.rmeta","--extern","pin_project_lite=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libpin_project_lite-e22eb2e62c630ccc.rmeta","--extern","tokio=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libtokio-c14ff78be7b59c8b.rmeta","--extern","tracing=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libtracing-7eef4ae40152549b.rmeta","--cap-lints","allow","-L","native=C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.36.1\\lib","--error-format=json","--sysroot","C:\\Users\\tubak\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libtokio_util-4ac7956ade82dfa6.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[3623118711753462106,0]},"crate_root":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src","external_crates":[{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[11650812661830545456,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":17,"id":{"name":"futures_sink","disambiguator":[1247065067350179424,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":18,"id":{"name":"tokio","disambiguator":[3675779228642876918,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":19,"id":{"name":"parking_lot","disambiguator":[6507228201218676406,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":20,"id":{"name":"lock_api","disambiguator":[2157842252132152726,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":21,"id":{"name":"scopeguard","disambiguator":[14791793103096291185,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":22,"id":{"name":"parking_lot_core","disambiguator":[12876777786032301755,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":23,"id":{"name":"smallvec","disambiguator":[10277631765112003654,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":24,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":25,"id":{"name":"windows_sys","disambiguator":[7517967937015650826,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":26,"id":{"name":"winapi","disambiguator":[6636251777768477428,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":27,"id":{"name":"mio","disambiguator":[2415544669475798074,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":28,"id":{"name":"log","disambiguator":[2187126350315469323,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":29,"id":{"name":"value_bag","disambiguator":[11136801585953617220,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":30,"id":{"name":"ctor","disambiguator":[7771317596828049422,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","num":31,"id":{"name":"bytes","disambiguator":[14130041510002590541,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":32,"id":{"name":"once_cell","disambiguator":[2720024562785292442,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":33,"id":{"name":"tokio_macros","disambiguator":[2561837923613365336,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":34,"id":{"name":"memchr","disambiguator":[11795001318777741512,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":35,"id":{"name":"socket2","disambiguator":[4076625419840325450,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","num":36,"id":{"name":"num_cpus","disambiguator":[9680463424726089930,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","num":37,"id":{"name":"futures_core","disambiguator":[11080074677927752119,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","num":38,"id":{"name":"tracing","disambiguator":[2523797520002711195,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","num":39,"id":{"name":"tracing_core","disambiguator":[2033363701727296675,0]}}],"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":0,"byte_end":5507,"line_start":1,"line_end":204,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212162,"byte_end":17212172,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212211,"byte_end":17212218,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212257,"byte_end":17212264,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212426,"byte_end":17212432,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212434,"byte_end":17212445,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212493,"byte_end":17212503,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212552,"byte_end":17212563,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212625,"byte_end":17212645,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212647,"byte_end":17212672,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212721,"byte_end":17212731,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212733,"byte_end":17212748,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212813,"byte_end":17212830,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212832,"byte_end":17212854,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7099,"byte_end":7108,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7110,"byte_end":7127,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7129,"byte_end":7154,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7183,"byte_end":7196,"line_start":7,"line_end":7,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7198,"byte_end":7208,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7256,"byte_end":7269,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7312,"byte_end":7329,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":0,"byte_end":5507,"line_start":1,"line_end":204,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":458},{"krate":0,"index":14},{"krate":0,"index":340},{"krate":0,"index":409}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1162}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\cfg.rs","byte_start":5583,"byte_end":5608,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17201890,"byte_end":17201943,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17201944,"byte_end":17201947,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17201948,"byte_end":17202023,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202024,"byte_end":17202089,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202090,"byte_end":17202093,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202094,"byte_end":17202174,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202175,"byte_end":17202250,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202251,"byte_end":17202299,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202300,"byte_end":17202303,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202304,"byte_end":17202327,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202328,"byte_end":17202331,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202332,"byte_end":17202411,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202412,"byte_end":17202491,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202492,"byte_end":17202563,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202564,"byte_end":17202634,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202635,"byte_end":17202713,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202714,"byte_end":17202790,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202791,"byte_end":17202824,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202825,"byte_end":17202828,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202829,"byte_end":17202909,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202910,"byte_end":17202990,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17202991,"byte_end":17203041,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203042,"byte_end":17203045,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203046,"byte_end":17203097,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203098,"byte_end":17203147,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203148,"byte_end":17203199,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203200,"byte_end":17203203,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203204,"byte_end":17203269,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203270,"byte_end":17203273,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203274,"byte_end":17203351,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203352,"byte_end":17203393,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203394,"byte_end":17203397,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203398,"byte_end":17203478,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203479,"byte_end":17203558,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203559,"byte_end":17203637,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203638,"byte_end":17203717,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203718,"byte_end":17203732,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203733,"byte_end":17203736,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203737,"byte_end":17203816,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203817,"byte_end":17203896,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203897,"byte_end":17203914,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203915,"byte_end":17203918,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203919,"byte_end":17203996,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17203997,"byte_end":17204076,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204077,"byte_end":17204154,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204155,"byte_end":17204225,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204226,"byte_end":17204275,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204276,"byte_end":17204279,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204280,"byte_end":17204293,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204294,"byte_end":17204326,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204327,"byte_end":17204394,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204395,"byte_end":17204509,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204510,"byte_end":17204547,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204548,"byte_end":17204609,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204610,"byte_end":17204659,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204660,"byte_end":17204663,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204664,"byte_end":17204705,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204706,"byte_end":17204716,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204717,"byte_end":17204801,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204802,"byte_end":17204858,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204859,"byte_end":17204862,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204863,"byte_end":17204884,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204885,"byte_end":17204952,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204953,"byte_end":17204981,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204982,"byte_end":17204995,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17204996,"byte_end":17205014,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205015,"byte_end":17205024,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205025,"byte_end":17205028,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205029,"byte_end":17205088,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205089,"byte_end":17205113,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205114,"byte_end":17205123,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205124,"byte_end":17205129,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205130,"byte_end":17205138,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205139,"byte_end":17205146,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205147,"byte_end":17205221,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205222,"byte_end":17205225,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205226,"byte_end":17205248,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205249,"byte_end":17205252,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205253,"byte_end":17205330,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205331,"byte_end":17205407,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205408,"byte_end":17205487,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205488,"byte_end":17205542,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205543,"byte_end":17205546,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205547,"byte_end":17205591,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205592,"byte_end":17205599,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205600,"byte_end":17205635,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205636,"byte_end":17205667,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205668,"byte_end":17205671,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205672,"byte_end":17205701,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205702,"byte_end":17205705,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205706,"byte_end":17205745,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205746,"byte_end":17205749,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205750,"byte_end":17205788,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205789,"byte_end":17205816,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205817,"byte_end":17205853,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205854,"byte_end":17205857,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205858,"byte_end":17205876,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205877,"byte_end":17205899,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205900,"byte_end":17205930,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205931,"byte_end":17205985,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17205986,"byte_end":17206016,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206017,"byte_end":17206074,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206075,"byte_end":17206107,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206108,"byte_end":17206121,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206122,"byte_end":17206125,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206126,"byte_end":17206160,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206161,"byte_end":17206205,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206206,"byte_end":17206258,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206259,"byte_end":17206326,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206327,"byte_end":17206330,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206331,"byte_end":17206405,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206406,"byte_end":17206472,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206473,"byte_end":17206502,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206503,"byte_end":17206550,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206551,"byte_end":17206603,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206604,"byte_end":17206675,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206676,"byte_end":17206695,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206696,"byte_end":17206709,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206710,"byte_end":17206713,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206714,"byte_end":17206753,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206754,"byte_end":17206809,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206810,"byte_end":17206828,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206829,"byte_end":17206905,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206906,"byte_end":17206972,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17206973,"byte_end":17207025,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207026,"byte_end":17207029,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207030,"byte_end":17207110,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207111,"byte_end":17207136,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207137,"byte_end":17207169,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207170,"byte_end":17207183,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207184,"byte_end":17207187,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207188,"byte_end":17207260,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207261,"byte_end":17207287,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207288,"byte_end":17207339,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207340,"byte_end":17207376,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207377,"byte_end":17207380,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207381,"byte_end":17207459,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207460,"byte_end":17207503,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207504,"byte_end":17207551,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207552,"byte_end":17207588,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207589,"byte_end":17207633,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207634,"byte_end":17207690,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207691,"byte_end":17207739,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207740,"byte_end":17207762,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207763,"byte_end":17207781,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207782,"byte_end":17207795,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207796,"byte_end":17207805,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207806,"byte_end":17207811,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207812,"byte_end":17207819,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207820,"byte_end":17207823,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207824,"byte_end":17207847,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207848,"byte_end":17207851,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207852,"byte_end":17207930,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17207931,"byte_end":17208004,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208005,"byte_end":17208081,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208082,"byte_end":17208162,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208163,"byte_end":17208179,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208180,"byte_end":17208183,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208184,"byte_end":17208264,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208265,"byte_end":17208344,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208345,"byte_end":17208425,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208426,"byte_end":17208498,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208499,"byte_end":17208502,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208503,"byte_end":17208580,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208581,"byte_end":17208659,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208660,"byte_end":17208733,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208734,"byte_end":17208800,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208801,"byte_end":17208804,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208805,"byte_end":17208818,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208819,"byte_end":17208852,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208853,"byte_end":17208887,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208888,"byte_end":17208925,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208926,"byte_end":17208993,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17208994,"byte_end":17209029,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209030,"byte_end":17209091,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209092,"byte_end":17209138,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209139,"byte_end":17209200,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209201,"byte_end":17209204,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209205,"byte_end":17209233,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209234,"byte_end":17209237,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209238,"byte_end":17209279,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209280,"byte_end":17209290,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209291,"byte_end":17209315,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209316,"byte_end":17209390,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209391,"byte_end":17209433,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209434,"byte_end":17209448,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209449,"byte_end":17209506,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209507,"byte_end":17209556,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209557,"byte_end":17209571,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209572,"byte_end":17209609,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209610,"byte_end":17209661,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209662,"byte_end":17209708,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209709,"byte_end":17209739,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209740,"byte_end":17209754,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209755,"byte_end":17209764,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209765,"byte_end":17209770,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209771,"byte_end":17209778,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209779,"byte_end":17209786,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209787,"byte_end":17209862,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209863,"byte_end":17209936,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209937,"byte_end":17209979,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209980,"byte_end":17209983,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17209984,"byte_end":17210006,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210007,"byte_end":17210010,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210011,"byte_end":17210088,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210089,"byte_end":17210165,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210166,"byte_end":17210242,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210243,"byte_end":17210266,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210267,"byte_end":17210270,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210271,"byte_end":17210316,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210317,"byte_end":17210324,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210325,"byte_end":17210360,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210361,"byte_end":17210385,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210386,"byte_end":17210389,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210390,"byte_end":17210419,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210420,"byte_end":17210423,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210424,"byte_end":17210463,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210464,"byte_end":17210467,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210468,"byte_end":17210514,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210515,"byte_end":17210551,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210552,"byte_end":17210555,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210556,"byte_end":17210647,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210648,"byte_end":17210722,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210723,"byte_end":17210745,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210746,"byte_end":17210779,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210780,"byte_end":17210827,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210828,"byte_end":17210880,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210881,"byte_end":17210956,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210957,"byte_end":17210976,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210977,"byte_end":17210990,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210991,"byte_end":17210994,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17210995,"byte_end":17211047,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211048,"byte_end":17211125,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211126,"byte_end":17211190,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211191,"byte_end":17211194,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211195,"byte_end":17211238,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211239,"byte_end":17211279,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211280,"byte_end":17211283,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211284,"byte_end":17211341,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211342,"byte_end":17211388,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211389,"byte_end":17211440,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211441,"byte_end":17211459,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211460,"byte_end":17211469,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211470,"byte_end":17211475,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211476,"byte_end":17211483,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211484,"byte_end":17211487,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211488,"byte_end":17211527,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211528,"byte_end":17211569,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211570,"byte_end":17211606,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211607,"byte_end":17211639,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211640,"byte_end":17211736,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211737,"byte_end":17211788,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211789,"byte_end":17211842,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211843,"byte_end":17211886,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211887,"byte_end":17211931,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211932,"byte_end":17211980,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17211981,"byte_end":17212029,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212030,"byte_end":17212076,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212077,"byte_end":17212116,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214140,"byte_end":17214150,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17212983,"byte_end":17213068,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213069,"byte_end":17213072,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213073,"byte_end":17213111,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213112,"byte_end":17213150,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213151,"byte_end":17213154,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213155,"byte_end":17213168,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213169,"byte_end":17213172,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213173,"byte_end":17213254,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213255,"byte_end":17213258,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213259,"byte_end":17213298,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213299,"byte_end":17213332,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213333,"byte_end":17213362,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213363,"byte_end":17213366,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213367,"byte_end":17213374,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213375,"byte_end":17213393,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213394,"byte_end":17213424,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213425,"byte_end":17213449,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213450,"byte_end":17213457,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213458,"byte_end":17213487,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213488,"byte_end":17213540,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213541,"byte_end":17213544,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213545,"byte_end":17213563,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213564,"byte_end":17213581,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213582,"byte_end":17213662,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213663,"byte_end":17213697,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213698,"byte_end":17213751,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213752,"byte_end":17213763,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213764,"byte_end":17213771,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213772,"byte_end":17213777,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213778,"byte_end":17213825,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213826,"byte_end":17213879,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213880,"byte_end":17213938,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17213939,"byte_end":17214018,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214019,"byte_end":17214031,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214032,"byte_end":17214039,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214040,"byte_end":17214047,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214048,"byte_end":17214051,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214252,"byte_end":17214255,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214179,"byte_end":17214240,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216493,"byte_end":17216500,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215207,"byte_end":17215242,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215243,"byte_end":17215246,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215247,"byte_end":17215316,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215317,"byte_end":17215396,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215397,"byte_end":17215469,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215470,"byte_end":17215494,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215495,"byte_end":17215498,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215499,"byte_end":17215567,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215568,"byte_end":17215645,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215646,"byte_end":17215707,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215708,"byte_end":17215711,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215712,"byte_end":17215773,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215774,"byte_end":17215836,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215837,"byte_end":17215840,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215841,"byte_end":17215904,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215905,"byte_end":17215968,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17215969,"byte_end":17216048,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216049,"byte_end":17216123,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216124,"byte_end":17216143,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216144,"byte_end":17216147,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216148,"byte_end":17216216,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216217,"byte_end":17216279,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216280,"byte_end":17216355,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216356,"byte_end":17216396,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216397,"byte_end":17216400,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216401,"byte_end":17216437,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216438,"byte_end":17216482,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216548,"byte_end":17216552,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216507,"byte_end":17216538,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217318,"byte_end":17217323,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216559,"byte_end":17216611,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216616,"byte_end":17216619,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216624,"byte_end":17216693,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216698,"byte_end":17216768,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216773,"byte_end":17216819,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216824,"byte_end":17216827,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216832,"byte_end":17216908,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216913,"byte_end":17216988,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17216993,"byte_end":17217068,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217073,"byte_end":17217113,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217118,"byte_end":17217121,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217126,"byte_end":17217200,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217205,"byte_end":17217251,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217256,"byte_end":17217259,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217264,"byte_end":17217308,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220259,"byte_end":17220265,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217347,"byte_end":17217412,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217417,"byte_end":17217420,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217425,"byte_end":17217499,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217504,"byte_end":17217576,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217581,"byte_end":17217654,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217659,"byte_end":17217702,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217707,"byte_end":17217710,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217715,"byte_end":17217788,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217793,"byte_end":17217856,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217861,"byte_end":17217936,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17217941,"byte_end":17218016,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218021,"byte_end":17218044,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218049,"byte_end":17218052,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218057,"byte_end":17218129,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218134,"byte_end":17218208,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218213,"byte_end":17218283,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218288,"byte_end":17218291,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218296,"byte_end":17218364,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218369,"byte_end":17218440,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218445,"byte_end":17218525,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218530,"byte_end":17218542,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218547,"byte_end":17218550,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218555,"byte_end":17218625,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218630,"byte_end":17218705,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218710,"byte_end":17218747,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218752,"byte_end":17218755,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218760,"byte_end":17218796,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218801,"byte_end":17218845,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218850,"byte_end":17218853,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218858,"byte_end":17218881,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218886,"byte_end":17218889,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218894,"byte_end":17218968,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17218973,"byte_end":17219047,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219052,"byte_end":17219105,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219110,"byte_end":17219113,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219118,"byte_end":17219189,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219194,"byte_end":17219264,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219269,"byte_end":17219285,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219290,"byte_end":17219293,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219298,"byte_end":17219311,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219316,"byte_end":17219334,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219339,"byte_end":17219344,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219349,"byte_end":17219375,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219380,"byte_end":17219417,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219422,"byte_end":17219427,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219432,"byte_end":17219453,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219458,"byte_end":17219463,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219468,"byte_end":17219498,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219503,"byte_end":17219517,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219522,"byte_end":17219553,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219558,"byte_end":17219591,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219596,"byte_end":17219599,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219604,"byte_end":17219697,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219702,"byte_end":17219720,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219725,"byte_end":17219728,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219733,"byte_end":17219805,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219810,"byte_end":17219870,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219875,"byte_end":17219927,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219932,"byte_end":17219994,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17219999,"byte_end":17220066,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220071,"byte_end":17220074,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220079,"byte_end":17220107,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220112,"byte_end":17220121,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220126,"byte_end":17220131,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220136,"byte_end":17220143,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220148,"byte_end":17220151,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220156,"byte_end":17220225,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220230,"byte_end":17220251,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17221431,"byte_end":17221441,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220346,"byte_end":17220418,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220423,"byte_end":17220472,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220477,"byte_end":17220480,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220485,"byte_end":17220553,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220558,"byte_end":17220625,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220630,"byte_end":17220698,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220703,"byte_end":17220779,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220784,"byte_end":17220850,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220855,"byte_end":17220858,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220863,"byte_end":17220931,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17220936,"byte_end":17221011,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17221016,"byte_end":17221091,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17221096,"byte_end":17221168,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17221173,"byte_end":17221215,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17221220,"byte_end":17221223,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17221228,"byte_end":17221303,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17221308,"byte_end":17221386,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17221391,"byte_end":17221423,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17223049,"byte_end":17223055,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17221859,"byte_end":17221939,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17221944,"byte_end":17222020,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222025,"byte_end":17222028,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222033,"byte_end":17222108,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222113,"byte_end":17222183,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222188,"byte_end":17222259,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222264,"byte_end":17222336,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222341,"byte_end":17222399,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222404,"byte_end":17222407,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222412,"byte_end":17222481,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222486,"byte_end":17222561,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222566,"byte_end":17222642,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222647,"byte_end":17222669,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222674,"byte_end":17222677,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222682,"byte_end":17222755,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222760,"byte_end":17222833,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222838,"byte_end":17222914,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222919,"byte_end":17222922,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222927,"byte_end":17222963,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17222968,"byte_end":17223000,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\decoder.rs","byte_start":17223005,"byte_end":17223041,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223389,"byte_end":17223396,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223234,"byte_end":17223306,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223307,"byte_end":17223327,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223328,"byte_end":17223331,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223332,"byte_end":17223378,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223661,"byte_end":17223666,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223409,"byte_end":17223441,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223446,"byte_end":17223449,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223454,"byte_end":17223531,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223536,"byte_end":17223592,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223597,"byte_end":17223600,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223605,"byte_end":17223651,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17224017,"byte_end":17224023,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223690,"byte_end":17223735,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223740,"byte_end":17223743,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223748,"byte_end":17223822,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223827,"byte_end":17223907,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223912,"byte_end":17223950,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223955,"byte_end":17223958,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\encoder.rs","byte_start":17223963,"byte_end":17224009,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17237663,"byte_end":17237669,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1478}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239442,"byte_end":17239445,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17237811,"byte_end":17237891,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17237896,"byte_end":17237977,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17237982,"byte_end":17237985,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17237990,"byte_end":17238065,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238070,"byte_end":17238140,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238145,"byte_end":17238214,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238219,"byte_end":17238291,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238296,"byte_end":17238354,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238359,"byte_end":17238362,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238367,"byte_end":17238438,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238443,"byte_end":17238520,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238525,"byte_end":17238601,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238606,"byte_end":17238628,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238633,"byte_end":17238636,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238641,"byte_end":17238714,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238719,"byte_end":17238792,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238797,"byte_end":17238873,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238878,"byte_end":17238881,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238886,"byte_end":17238962,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17238967,"byte_end":17239043,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239048,"byte_end":17239123,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239128,"byte_end":17239163,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239168,"byte_end":17239171,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239176,"byte_end":17239212,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239217,"byte_end":17239249,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239254,"byte_end":17239291,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239296,"byte_end":17239334,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239339,"byte_end":17239430,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17241053,"byte_end":17241066,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239658,"byte_end":17239738,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239743,"byte_end":17239824,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239829,"byte_end":17239878,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239883,"byte_end":17239886,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239891,"byte_end":17239966,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17239971,"byte_end":17240041,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240046,"byte_end":17240115,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240120,"byte_end":17240192,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240197,"byte_end":17240255,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240260,"byte_end":17240263,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240268,"byte_end":17240339,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240344,"byte_end":17240421,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240426,"byte_end":17240502,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240507,"byte_end":17240529,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240534,"byte_end":17240537,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240542,"byte_end":17240615,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240620,"byte_end":17240693,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240698,"byte_end":17240774,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240779,"byte_end":17240782,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240787,"byte_end":17240823,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240828,"byte_end":17240860,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240865,"byte_end":17240902,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240907,"byte_end":17240945,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17240950,"byte_end":17241041,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243213,"byte_end":17243223,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17241636,"byte_end":17241716,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17241721,"byte_end":17241802,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17241807,"byte_end":17241810,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17241815,"byte_end":17241890,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17241895,"byte_end":17241965,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17241970,"byte_end":17242041,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242046,"byte_end":17242118,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242123,"byte_end":17242181,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242186,"byte_end":17242189,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242194,"byte_end":17242265,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242270,"byte_end":17242347,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242352,"byte_end":17242428,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242433,"byte_end":17242455,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242460,"byte_end":17242463,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242468,"byte_end":17242547,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242552,"byte_end":17242629,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242634,"byte_end":17242637,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242642,"byte_end":17242715,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242720,"byte_end":17242793,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242798,"byte_end":17242874,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242879,"byte_end":17242882,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242887,"byte_end":17242923,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242928,"byte_end":17242960,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17242965,"byte_end":17243003,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243008,"byte_end":17243046,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243051,"byte_end":17243105,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243110,"byte_end":17243201,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243858,"byte_end":17243865,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243575,"byte_end":17243638,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243643,"byte_end":17243656,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243661,"byte_end":17243664,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243669,"byte_end":17243744,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243749,"byte_end":17243819,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243824,"byte_end":17243846,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244209,"byte_end":17244216,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243918,"byte_end":17243989,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17243994,"byte_end":17244007,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244012,"byte_end":17244015,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244020,"byte_end":17244095,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244100,"byte_end":17244170,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244175,"byte_end":17244197,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244579,"byte_end":17244590,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244281,"byte_end":17244359,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244364,"byte_end":17244377,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244382,"byte_end":17244385,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244390,"byte_end":17244465,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244470,"byte_end":17244540,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244545,"byte_end":17244567,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244937,"byte_end":17244942,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244686,"byte_end":17244744,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244749,"byte_end":17244762,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244767,"byte_end":17244770,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244775,"byte_end":17244849,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244854,"byte_end":17244925,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17245254,"byte_end":17245263,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17244995,"byte_end":17245061,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17245066,"byte_end":17245079,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17245084,"byte_end":17245087,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17245092,"byte_end":17245166,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17245171,"byte_end":17245242,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17245600,"byte_end":17245609,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"pub fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17245328,"byte_end":17245396,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17245401,"byte_end":17245425,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17245430,"byte_end":17245433,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17245438,"byte_end":17245512,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17245517,"byte_end":17245588,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246300,"byte_end":17246313,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"pub fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246041,"byte_end":17246107,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246112,"byte_end":17246125,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246130,"byte_end":17246133,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246138,"byte_end":17246212,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246217,"byte_end":17246288,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246459,"byte_end":17246470,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246404,"byte_end":17246447,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246605,"byte_end":17246620,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246542,"byte_end":17246593,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246760,"byte_end":17246772,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246704,"byte_end":17246748,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246909,"byte_end":17246925,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17246845,"byte_end":17246897,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247275,"byte_end":17247285,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247010,"byte_end":17247073,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247078,"byte_end":17247081,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247086,"byte_end":17247161,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247166,"byte_end":17247236,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247241,"byte_end":17247263,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247657,"byte_end":17247667,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247335,"byte_end":17247409,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247414,"byte_end":17247455,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247460,"byte_end":17247463,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247468,"byte_end":17247543,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247548,"byte_end":17247618,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17247623,"byte_end":17247645,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249641,"byte_end":17249652,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249326,"byte_end":17249397,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249398,"byte_end":17249470,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249471,"byte_end":17249531,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249532,"byte_end":17249535,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249536,"byte_end":17249572,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249590,"byte_end":17249629,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249738,"byte_end":17249740,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249665,"byte_end":17249729,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249772,"byte_end":17249777,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249750,"byte_end":17249763,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249842,"byte_end":17249850,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249787,"byte_end":17249833,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249937,"byte_end":17249946,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249867,"byte_end":17249928,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17250179,"byte_end":17250182,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17250127,"byte_end":17250167,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17250911,"byte_end":17250921,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1437}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17251172,"byte_end":17251175,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17251104,"byte_end":17251160,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17251523,"byte_end":17251536,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17251407,"byte_end":17251489,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17251494,"byte_end":17251511,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252290,"byte_end":17252297,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252003,"byte_end":17252066,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252071,"byte_end":17252088,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252093,"byte_end":17252096,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252101,"byte_end":17252176,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252181,"byte_end":17252251,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252256,"byte_end":17252278,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252645,"byte_end":17252652,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252350,"byte_end":17252421,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252426,"byte_end":17252443,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252448,"byte_end":17252451,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252456,"byte_end":17252531,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252536,"byte_end":17252606,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252611,"byte_end":17252633,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253019,"byte_end":17253030,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252717,"byte_end":17252795,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252800,"byte_end":17252817,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252822,"byte_end":17252825,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252830,"byte_end":17252905,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252910,"byte_end":17252980,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17252985,"byte_end":17253007,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253395,"byte_end":17253405,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253126,"byte_end":17253193,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253198,"byte_end":17253201,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253206,"byte_end":17253281,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253286,"byte_end":17253356,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253361,"byte_end":17253383,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253517,"byte_end":17253524,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253455,"byte_end":17253505,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253647,"byte_end":17253658,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253577,"byte_end":17253635,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253823,"byte_end":17253834,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"pub fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253723,"byte_end":17253782,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17253787,"byte_end":17253811,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17254350,"byte_end":17254365,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"pub fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17254280,"byte_end":17254338,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17254511,"byte_end":17254522,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17254456,"byte_end":17254499,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17254652,"byte_end":17254667,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17254589,"byte_end":17254640,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17256768,"byte_end":17256779,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1396}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17256986,"byte_end":17256989,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17256917,"byte_end":17256974,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257547,"byte_end":17257554,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257259,"byte_end":17257322,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257327,"byte_end":17257345,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257350,"byte_end":17257353,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257358,"byte_end":17257433,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257438,"byte_end":17257508,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257513,"byte_end":17257535,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257903,"byte_end":17257910,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257607,"byte_end":17257678,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257683,"byte_end":17257701,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257706,"byte_end":17257709,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257714,"byte_end":17257789,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257794,"byte_end":17257864,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257869,"byte_end":17257891,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258278,"byte_end":17258289,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257975,"byte_end":17258053,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258058,"byte_end":17258076,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258081,"byte_end":17258084,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258089,"byte_end":17258164,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258169,"byte_end":17258239,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258244,"byte_end":17258266,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258655,"byte_end":17258665,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258385,"byte_end":17258453,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258458,"byte_end":17258461,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258466,"byte_end":17258541,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258546,"byte_end":17258616,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258621,"byte_end":17258643,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258777,"byte_end":17258784,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258715,"byte_end":17258765,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258907,"byte_end":17258918,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258837,"byte_end":17258895,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17259084,"byte_end":17259095,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"pub fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17258983,"byte_end":17259043,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17259048,"byte_end":17259072,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17259613,"byte_end":17259628,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"pub fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17259543,"byte_end":17259601,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17259775,"byte_end":17259787,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17259719,"byte_end":17259763,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17259918,"byte_end":17259934,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17259854,"byte_end":17259906,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":1213},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":973},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":975},{"krate":0,"index":982},{"krate":0,"index":986},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":999},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17261461,"byte_end":17261513,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17261514,"byte_end":17261517,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17261518,"byte_end":17261588,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17261589,"byte_end":17261647,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17261648,"byte_end":17261720,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17261721,"byte_end":17261791,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17261792,"byte_end":17261859,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17261860,"byte_end":17261863,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17261864,"byte_end":17261885,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17261886,"byte_end":17261889,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17261890,"byte_end":17261965,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17261966,"byte_end":17262037,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262038,"byte_end":17262109,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262110,"byte_end":17262180,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262181,"byte_end":17262221,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262222,"byte_end":17262225,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262226,"byte_end":17262233,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262234,"byte_end":17262277,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262278,"byte_end":17262336,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262337,"byte_end":17262340,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262341,"byte_end":17262396,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262397,"byte_end":17262439,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262440,"byte_end":17262445,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262446,"byte_end":17262498,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262499,"byte_end":17262504,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262505,"byte_end":17262527,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262528,"byte_end":17262535,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262536,"byte_end":17262539,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262540,"byte_end":17262612,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262613,"byte_end":17262684,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262685,"byte_end":17262704,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262705,"byte_end":17262708,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262709,"byte_end":17262720,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262721,"byte_end":17262770,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262771,"byte_end":17262820,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262821,"byte_end":17262870,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262871,"byte_end":17262878,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262879,"byte_end":17262882,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262883,"byte_end":17262921,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262922,"byte_end":17262925,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262926,"byte_end":17262933,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262934,"byte_end":17262977,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17262978,"byte_end":17263036,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263037,"byte_end":17263040,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263041,"byte_end":17263066,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263067,"byte_end":17263088,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263089,"byte_end":17263092,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263093,"byte_end":17263169,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263170,"byte_end":17263179,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263180,"byte_end":17263222,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263223,"byte_end":17263228,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263229,"byte_end":17263302,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263303,"byte_end":17263350,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263351,"byte_end":17263354,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263355,"byte_end":17263392,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263393,"byte_end":17263407,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263408,"byte_end":17263413,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263414,"byte_end":17263421,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263422,"byte_end":17263425,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263426,"byte_end":17263468,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263469,"byte_end":17263472,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263473,"byte_end":17263484,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263485,"byte_end":17263524,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263525,"byte_end":17263564,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263565,"byte_end":17263604,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263605,"byte_end":17263612,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263613,"byte_end":17263616,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263617,"byte_end":17263631,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263632,"byte_end":17263635,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263636,"byte_end":17263711,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263712,"byte_end":17263785,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263786,"byte_end":17263852,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263853,"byte_end":17263922,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263923,"byte_end":17263988,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263989,"byte_end":17263992,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17263993,"byte_end":17264009,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264010,"byte_end":17264013,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264014,"byte_end":17264090,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264091,"byte_end":17264132,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264133,"byte_end":17264136,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264137,"byte_end":17264144,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264145,"byte_end":17264176,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264177,"byte_end":17264227,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264228,"byte_end":17264269,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264270,"byte_end":17264305,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264306,"byte_end":17264354,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264355,"byte_end":17264390,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264391,"byte_end":17264439,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264440,"byte_end":17264489,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264490,"byte_end":17264512,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264513,"byte_end":17264520,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264521,"byte_end":17264543,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264544,"byte_end":17264551,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264552,"byte_end":17264555,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264556,"byte_end":17264604,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264605,"byte_end":17264608,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264609,"byte_end":17264620,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264621,"byte_end":17264673,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264674,"byte_end":17264739,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264740,"byte_end":17264805,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264806,"byte_end":17264871,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264872,"byte_end":17264879,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264880,"byte_end":17264883,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264884,"byte_end":17264960,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17264961,"byte_end":17265035,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265036,"byte_end":17265108,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265109,"byte_end":17265185,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265186,"byte_end":17265228,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265229,"byte_end":17265232,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265233,"byte_end":17265249,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265250,"byte_end":17265253,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265254,"byte_end":17265329,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265330,"byte_end":17265371,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265372,"byte_end":17265375,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265376,"byte_end":17265383,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265384,"byte_end":17265415,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265416,"byte_end":17265466,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265467,"byte_end":17265508,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265509,"byte_end":17265544,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265545,"byte_end":17265593,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265594,"byte_end":17265629,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265630,"byte_end":17265678,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265679,"byte_end":17265738,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265739,"byte_end":17265761,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265762,"byte_end":17265769,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265770,"byte_end":17265792,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265793,"byte_end":17265800,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265801,"byte_end":17265804,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265805,"byte_end":17265853,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265854,"byte_end":17265857,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265858,"byte_end":17265869,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265870,"byte_end":17265919,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265920,"byte_end":17265974,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17265975,"byte_end":17266029,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266030,"byte_end":17266084,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266085,"byte_end":17266092,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266093,"byte_end":17266096,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266097,"byte_end":17266170,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266171,"byte_end":17266238,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266239,"byte_end":17266242,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266243,"byte_end":17266259,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266260,"byte_end":17266263,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266264,"byte_end":17266340,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266341,"byte_end":17266413,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266414,"byte_end":17266453,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266454,"byte_end":17266457,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266458,"byte_end":17266465,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266466,"byte_end":17266497,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266498,"byte_end":17266548,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266549,"byte_end":17266590,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266591,"byte_end":17266626,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266627,"byte_end":17266675,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266676,"byte_end":17266711,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266712,"byte_end":17266759,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266760,"byte_end":17266780,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266781,"byte_end":17266803,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266804,"byte_end":17266811,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266812,"byte_end":17266834,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266835,"byte_end":17266842,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266843,"byte_end":17266846,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266847,"byte_end":17266895,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266896,"byte_end":17266899,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266900,"byte_end":17266911,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266912,"byte_end":17266964,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17266965,"byte_end":17267030,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267031,"byte_end":17267096,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267097,"byte_end":17267162,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267163,"byte_end":17267170,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267171,"byte_end":17267174,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267175,"byte_end":17267247,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267248,"byte_end":17267323,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267324,"byte_end":17267396,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267397,"byte_end":17267473,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267474,"byte_end":17267547,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267548,"byte_end":17267551,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267552,"byte_end":17267568,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267569,"byte_end":17267572,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267573,"byte_end":17267647,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267648,"byte_end":17267715,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267716,"byte_end":17267719,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267720,"byte_end":17267727,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267728,"byte_end":17267759,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267760,"byte_end":17267810,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267811,"byte_end":17267852,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267853,"byte_end":17267888,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267889,"byte_end":17267937,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267938,"byte_end":17267969,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17267970,"byte_end":17268018,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268019,"byte_end":17268039,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268040,"byte_end":17268062,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268063,"byte_end":17268070,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268071,"byte_end":17268093,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268094,"byte_end":17268101,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268102,"byte_end":17268105,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268106,"byte_end":17268154,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268155,"byte_end":17268158,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268159,"byte_end":17268170,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268171,"byte_end":17268197,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268198,"byte_end":17268243,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268244,"byte_end":17268289,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268290,"byte_end":17268335,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268336,"byte_end":17268339,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268340,"byte_end":17268368,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268369,"byte_end":17268414,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268415,"byte_end":17268460,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268461,"byte_end":17268506,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268507,"byte_end":17268514,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268515,"byte_end":17268518,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268519,"byte_end":17268591,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268592,"byte_end":17268668,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268669,"byte_end":17268739,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268740,"byte_end":17268809,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268810,"byte_end":17268847,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268848,"byte_end":17268851,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268852,"byte_end":17268926,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268927,"byte_end":17268981,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268982,"byte_end":17268985,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17268986,"byte_end":17269002,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269003,"byte_end":17269006,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269007,"byte_end":17269080,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269081,"byte_end":17269157,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269158,"byte_end":17269232,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269233,"byte_end":17269246,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269247,"byte_end":17269250,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269251,"byte_end":17269258,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269259,"byte_end":17269290,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269291,"byte_end":17269341,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269342,"byte_end":17269383,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269384,"byte_end":17269419,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269420,"byte_end":17269469,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269470,"byte_end":17269505,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269506,"byte_end":17269554,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269555,"byte_end":17269599,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269600,"byte_end":17269622,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269623,"byte_end":17269630,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269631,"byte_end":17269653,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269654,"byte_end":17269661,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269662,"byte_end":17269665,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269666,"byte_end":17269714,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269715,"byte_end":17269718,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269719,"byte_end":17269730,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269731,"byte_end":17269757,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269758,"byte_end":17269808,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269809,"byte_end":17269859,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269860,"byte_end":17269910,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269911,"byte_end":17269914,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269915,"byte_end":17269935,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269936,"byte_end":17269966,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269967,"byte_end":17269997,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17269998,"byte_end":17270028,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270029,"byte_end":17270036,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270037,"byte_end":17270040,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270041,"byte_end":17270114,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270115,"byte_end":17270190,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270191,"byte_end":17270263,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270264,"byte_end":17270302,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270303,"byte_end":17270306,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270307,"byte_end":17270381,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270382,"byte_end":17270458,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270459,"byte_end":17270532,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270533,"byte_end":17270561,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270562,"byte_end":17270565,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270566,"byte_end":17270582,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270583,"byte_end":17270586,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270587,"byte_end":17270660,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270661,"byte_end":17270737,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270738,"byte_end":17270812,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270813,"byte_end":17270885,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270886,"byte_end":17270897,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270898,"byte_end":17270901,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270902,"byte_end":17270909,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270910,"byte_end":17270941,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270942,"byte_end":17270992,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17270993,"byte_end":17271034,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271035,"byte_end":17271070,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271071,"byte_end":17271120,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271121,"byte_end":17271156,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271157,"byte_end":17271222,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271223,"byte_end":17271243,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271244,"byte_end":17271266,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271267,"byte_end":17271274,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271275,"byte_end":17271282,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271283,"byte_end":17271286,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271287,"byte_end":17271335,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271336,"byte_end":17271339,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271340,"byte_end":17271351,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271352,"byte_end":17271378,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271379,"byte_end":17271429,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271430,"byte_end":17271480,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271481,"byte_end":17271531,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271532,"byte_end":17271535,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271536,"byte_end":17271556,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271557,"byte_end":17271587,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271588,"byte_end":17271618,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271619,"byte_end":17271649,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271650,"byte_end":17271657,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271658,"byte_end":17271661,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271662,"byte_end":17271735,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271736,"byte_end":17271810,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271811,"byte_end":17271885,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271886,"byte_end":17271959,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17271960,"byte_end":17272036,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272037,"byte_end":17272070,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272071,"byte_end":17272074,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272075,"byte_end":17272091,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272092,"byte_end":17272095,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272096,"byte_end":17272170,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272171,"byte_end":17272238,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272239,"byte_end":17272242,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272243,"byte_end":17272250,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272251,"byte_end":17272282,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272283,"byte_end":17272333,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272334,"byte_end":17272375,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272376,"byte_end":17272411,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272412,"byte_end":17272460,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272461,"byte_end":17272492,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272493,"byte_end":17272540,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272541,"byte_end":17272587,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272588,"byte_end":17272610,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272611,"byte_end":17272618,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272619,"byte_end":17272641,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272642,"byte_end":17272649,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272650,"byte_end":17272653,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272654,"byte_end":17272702,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272703,"byte_end":17272706,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272707,"byte_end":17272718,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272719,"byte_end":17272775,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272776,"byte_end":17272837,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272838,"byte_end":17272899,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272900,"byte_end":17272961,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272962,"byte_end":17272969,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272970,"byte_end":17272973,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17272974,"byte_end":17273048,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273049,"byte_end":17273069,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273070,"byte_end":17273073,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273074,"byte_end":17273088,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273089,"byte_end":17273092,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273093,"byte_end":17273168,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273169,"byte_end":17273241,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273242,"byte_end":17273310,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273311,"byte_end":17273387,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273388,"byte_end":17273429,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273430,"byte_end":17273433,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273434,"byte_end":17273504,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273505,"byte_end":17273523,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273524,"byte_end":17273527,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273528,"byte_end":17273535,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273536,"byte_end":17273568,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273569,"byte_end":17273619,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273620,"byte_end":17273664,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273665,"byte_end":17273678,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273679,"byte_end":17273714,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273715,"byte_end":17273750,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273751,"byte_end":17273774,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273775,"byte_end":17273782,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273783,"byte_end":17273805,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273806,"byte_end":17273813,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273814,"byte_end":17273817,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273818,"byte_end":17273868,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273869,"byte_end":17273872,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273873,"byte_end":17273884,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273885,"byte_end":17273918,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273919,"byte_end":17273952,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273953,"byte_end":17273986,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273987,"byte_end":17273994,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273995,"byte_end":17273998,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17273999,"byte_end":17274068,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17274069,"byte_end":17274106,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17274107,"byte_end":17274146,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17274147,"byte_end":17274192,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17274193,"byte_end":17274240,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17274241,"byte_end":17274271,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17274272,"byte_end":17274305,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17274872,"byte_end":17274879,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17274554,"byte_end":17274609,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17274610,"byte_end":17274613,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17274614,"byte_end":17274689,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17274690,"byte_end":17274770,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17274771,"byte_end":17274830,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275550,"byte_end":17275575,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":974}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275465,"byte_end":17275538,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275927,"byte_end":17275947,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275596,"byte_end":17275670,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275671,"byte_end":17275674,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275675,"byte_end":17275754,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275755,"byte_end":17275798,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275799,"byte_end":17275802,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275803,"byte_end":17275856,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275857,"byte_end":17275860,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17275861,"byte_end":17275891,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276291,"byte_end":17276294,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276200,"byte_end":17276279,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276521,"byte_end":17276528,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276418,"byte_end":17276493,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276498,"byte_end":17276509,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276750,"byte_end":17276766,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276578,"byte_end":17276619,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276624,"byte_end":17276627,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276632,"byte_end":17276705,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276710,"byte_end":17276738,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277187,"byte_end":17277207,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276831,"byte_end":17276865,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276870,"byte_end":17276873,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276878,"byte_end":17276948,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276953,"byte_end":17277028,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277033,"byte_end":17277105,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17277110,"byte_end":17277175,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281996,"byte_end":17282011,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281920,"byte_end":17281981,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282936,"byte_end":17282939,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282390,"byte_end":17282465,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282470,"byte_end":17282481,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282486,"byte_end":17282489,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282494,"byte_end":17282508,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282513,"byte_end":17282516,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282521,"byte_end":17282528,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282533,"byte_end":17282564,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282569,"byte_end":17282617,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282622,"byte_end":17282625,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282630,"byte_end":17282671,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282676,"byte_end":17282711,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282716,"byte_end":17282747,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282752,"byte_end":17282787,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282792,"byte_end":17282821,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282826,"byte_end":17282846,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282851,"byte_end":17282873,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282878,"byte_end":17282885,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282890,"byte_end":17282912,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282917,"byte_end":17282924,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284124,"byte_end":17284134,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283603,"byte_end":17283652,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283657,"byte_end":17283660,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283665,"byte_end":17283697,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283702,"byte_end":17283705,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283710,"byte_end":17283778,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283783,"byte_end":17283786,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283791,"byte_end":17283805,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283810,"byte_end":17283813,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283818,"byte_end":17283825,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283830,"byte_end":17283861,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283866,"byte_end":17283914,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283919,"byte_end":17283922,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283927,"byte_end":17283968,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17283973,"byte_end":17284008,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284013,"byte_end":17284034,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284039,"byte_end":17284061,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284066,"byte_end":17284073,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284078,"byte_end":17284100,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284105,"byte_end":17284112,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284766,"byte_end":17284779,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284233,"byte_end":17284285,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284290,"byte_end":17284293,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284298,"byte_end":17284336,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284341,"byte_end":17284344,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284349,"byte_end":17284417,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284422,"byte_end":17284425,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284430,"byte_end":17284444,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284449,"byte_end":17284452,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284457,"byte_end":17284464,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284469,"byte_end":17284500,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284505,"byte_end":17284553,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284558,"byte_end":17284561,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284566,"byte_end":17284607,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284612,"byte_end":17284647,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284652,"byte_end":17284676,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284681,"byte_end":17284703,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284708,"byte_end":17284715,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284720,"byte_end":17284742,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284747,"byte_end":17284754,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285412,"byte_end":17285425,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284879,"byte_end":17284931,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284936,"byte_end":17284939,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284944,"byte_end":17284982,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284987,"byte_end":17284990,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17284995,"byte_end":17285063,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285068,"byte_end":17285071,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285076,"byte_end":17285090,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285095,"byte_end":17285098,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285103,"byte_end":17285110,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285115,"byte_end":17285146,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285151,"byte_end":17285199,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285204,"byte_end":17285207,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285212,"byte_end":17285253,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285258,"byte_end":17285293,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285298,"byte_end":17285322,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285327,"byte_end":17285349,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285354,"byte_end":17285361,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285366,"byte_end":17285388,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285393,"byte_end":17285400,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286522,"byte_end":17286538,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285594,"byte_end":17285632,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285637,"byte_end":17285640,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285645,"byte_end":17285717,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285722,"byte_end":17285747,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285752,"byte_end":17285755,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285760,"byte_end":17285832,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285837,"byte_end":17285906,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285911,"byte_end":17285984,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17285989,"byte_end":17286001,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286006,"byte_end":17286009,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286014,"byte_end":17286089,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286094,"byte_end":17286155,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286160,"byte_end":17286163,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286168,"byte_end":17286182,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286187,"byte_end":17286190,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286195,"byte_end":17286202,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286207,"byte_end":17286238,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286243,"byte_end":17286291,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286296,"byte_end":17286299,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286304,"byte_end":17286345,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286350,"byte_end":17286385,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286390,"byte_end":17286432,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286437,"byte_end":17286459,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286464,"byte_end":17286471,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286476,"byte_end":17286498,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286503,"byte_end":17286510,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287637,"byte_end":17287654,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"pub fn length_field_type<T: builder::LengthFieldType>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286635,"byte_end":17286705,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286710,"byte_end":17286713,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286718,"byte_end":17286791,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286796,"byte_end":17286816,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286821,"byte_end":17286824,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286829,"byte_end":17286843,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286848,"byte_end":17286851,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286856,"byte_end":17286863,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286868,"byte_end":17286899,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286904,"byte_end":17286952,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286957,"byte_end":17286960,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17286965,"byte_end":17287006,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287011,"byte_end":17287046,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287051,"byte_end":17287086,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287091,"byte_end":17287113,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287118,"byte_end":17287125,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287130,"byte_end":17287152,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287157,"byte_end":17287164,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287169,"byte_end":17287172,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287177,"byte_end":17287251,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287256,"byte_end":17287297,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287302,"byte_end":17287305,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287310,"byte_end":17287329,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287334,"byte_end":17287365,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287370,"byte_end":17287420,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287425,"byte_end":17287466,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287471,"byte_end":17287506,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287511,"byte_end":17287547,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287552,"byte_end":17287574,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287579,"byte_end":17287586,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287591,"byte_end":17287613,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287618,"byte_end":17287625,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288339,"byte_end":17288358,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287775,"byte_end":17287838,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287843,"byte_end":17287846,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287851,"byte_end":17287902,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287907,"byte_end":17287910,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287915,"byte_end":17287983,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287988,"byte_end":17287991,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17287996,"byte_end":17288010,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288015,"byte_end":17288018,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288023,"byte_end":17288030,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288035,"byte_end":17288066,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288071,"byte_end":17288119,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288124,"byte_end":17288127,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288132,"byte_end":17288173,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288178,"byte_end":17288213,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288218,"byte_end":17288249,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288254,"byte_end":17288276,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288281,"byte_end":17288288,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288293,"byte_end":17288315,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288320,"byte_end":17288327,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289017,"byte_end":17289036,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288527,"byte_end":17288593,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288598,"byte_end":17288601,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288606,"byte_end":17288661,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288666,"byte_end":17288669,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288674,"byte_end":17288688,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288693,"byte_end":17288696,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288701,"byte_end":17288708,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288713,"byte_end":17288744,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288749,"byte_end":17288797,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288802,"byte_end":17288805,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288810,"byte_end":17288851,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288856,"byte_end":17288891,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288896,"byte_end":17288927,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288932,"byte_end":17288954,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288959,"byte_end":17288966,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288971,"byte_end":17288993,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17288998,"byte_end":17289005,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289590,"byte_end":17289607,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289139,"byte_end":17289212,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289217,"byte_end":17289235,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289240,"byte_end":17289243,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289248,"byte_end":17289262,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289267,"byte_end":17289270,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289275,"byte_end":17289282,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289287,"byte_end":17289318,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289323,"byte_end":17289371,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289376,"byte_end":17289379,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289384,"byte_end":17289425,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289430,"byte_end":17289465,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289470,"byte_end":17289500,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289505,"byte_end":17289527,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289532,"byte_end":17289539,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289544,"byte_end":17289566,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289571,"byte_end":17289578,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290257,"byte_end":17290265,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289708,"byte_end":17289771,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289776,"byte_end":17289779,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289784,"byte_end":17289845,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289850,"byte_end":17289853,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289858,"byte_end":17289912,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289917,"byte_end":17289920,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289925,"byte_end":17289939,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289944,"byte_end":17289947,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289952,"byte_end":17289959,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17289964,"byte_end":17289995,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290000,"byte_end":17290048,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290053,"byte_end":17290056,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290061,"byte_end":17290102,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290107,"byte_end":17290142,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290147,"byte_end":17290167,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290172,"byte_end":17290194,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290199,"byte_end":17290206,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290211,"byte_end":17290233,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290238,"byte_end":17290245,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290789,"byte_end":17290798,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290363,"byte_end":17290426,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290431,"byte_end":17290434,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290439,"byte_end":17290453,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290458,"byte_end":17290461,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290466,"byte_end":17290473,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290478,"byte_end":17290526,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290531,"byte_end":17290552,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290557,"byte_end":17290592,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290597,"byte_end":17290628,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290633,"byte_end":17290668,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290673,"byte_end":17290702,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290707,"byte_end":17290727,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290732,"byte_end":17290753,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290758,"byte_end":17290765,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290770,"byte_end":17290777,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291458,"byte_end":17291466,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17290950,"byte_end":17291003,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291008,"byte_end":17291011,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291016,"byte_end":17291030,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291035,"byte_end":17291038,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291043,"byte_end":17291050,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291055,"byte_end":17291086,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291091,"byte_end":17291139,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291144,"byte_end":17291147,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291152,"byte_end":17291193,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291198,"byte_end":17291233,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291238,"byte_end":17291269,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291274,"byte_end":17291309,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291314,"byte_end":17291343,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291348,"byte_end":17291368,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291373,"byte_end":17291395,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291400,"byte_end":17291407,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291412,"byte_end":17291434,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291439,"byte_end":17291446,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292043,"byte_end":17292052,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291630,"byte_end":17291684,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291689,"byte_end":17291692,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291697,"byte_end":17291711,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291716,"byte_end":17291719,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291724,"byte_end":17291731,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291736,"byte_end":17291768,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291773,"byte_end":17291823,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291828,"byte_end":17291872,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291877,"byte_end":17291912,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291917,"byte_end":17291952,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291957,"byte_end":17291980,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291985,"byte_end":17291992,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17291997,"byte_end":17292019,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292024,"byte_end":17292031,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292665,"byte_end":17292675,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292213,"byte_end":17292262,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292267,"byte_end":17292270,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292275,"byte_end":17292289,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292294,"byte_end":17292297,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292302,"byte_end":17292309,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292314,"byte_end":17292359,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292364,"byte_end":17292414,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292419,"byte_end":17292475,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292480,"byte_end":17292493,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292498,"byte_end":17292533,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292538,"byte_end":17292573,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292578,"byte_end":17292602,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292607,"byte_end":17292614,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292619,"byte_end":17292641,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17292646,"byte_end":17292653,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17294054,"byte_end":17294064,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17293811,"byte_end":17293898,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17293899,"byte_end":17293902,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17293903,"byte_end":17293941,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17293942,"byte_end":17293980,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295164,"byte_end":17295167,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17294745,"byte_end":17294805,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17294810,"byte_end":17294813,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17294818,"byte_end":17294828,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17294833,"byte_end":17294836,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17294841,"byte_end":17294913,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17294918,"byte_end":17294991,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17294996,"byte_end":17295063,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295068,"byte_end":17295071,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295076,"byte_end":17295152,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296298,"byte_end":17296317,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295325,"byte_end":17295385,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295390,"byte_end":17295393,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295398,"byte_end":17295461,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295466,"byte_end":17295544,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295549,"byte_end":17295616,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295621,"byte_end":17295693,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295698,"byte_end":17295768,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295773,"byte_end":17295796,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295801,"byte_end":17295804,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295809,"byte_end":17295819,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295824,"byte_end":17295827,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295832,"byte_end":17295907,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295912,"byte_end":17295985,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17295990,"byte_end":17296066,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296071,"byte_end":17296144,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296149,"byte_end":17296219,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296224,"byte_end":17296227,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296232,"byte_end":17296286,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296883,"byte_end":17296893,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296445,"byte_end":17296495,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296500,"byte_end":17296503,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296508,"byte_end":17296515,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296520,"byte_end":17296539,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296544,"byte_end":17296582,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296587,"byte_end":17296590,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296595,"byte_end":17296629,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296634,"byte_end":17296681,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296686,"byte_end":17296693,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296698,"byte_end":17296705,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296710,"byte_end":17296748,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296753,"byte_end":17296756,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296761,"byte_end":17296814,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296819,"byte_end":17296859,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17296864,"byte_end":17296871,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17301219,"byte_end":17301240,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17301173,"byte_end":17301214,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17301276,"byte_end":17301278,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17301246,"byte_end":17301271,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17301151,"byte_end":17301166,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17301068,"byte_end":17301124,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17303200,"byte_end":17303217,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302014,"byte_end":17302155,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302156,"byte_end":17302159,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302160,"byte_end":17302198,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302199,"byte_end":17302237,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302238,"byte_end":17302241,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302242,"byte_end":17302255,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302256,"byte_end":17302323,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302324,"byte_end":17302327,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302328,"byte_end":17302361,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302362,"byte_end":17302391,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302392,"byte_end":17302395,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302396,"byte_end":17302403,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302404,"byte_end":17302460,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302461,"byte_end":17302495,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302496,"byte_end":17302499,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302500,"byte_end":17302505,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302506,"byte_end":17302553,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302554,"byte_end":17302607,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302608,"byte_end":17302685,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302686,"byte_end":17302721,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302722,"byte_end":17302743,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302744,"byte_end":17302794,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302795,"byte_end":17302858,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302859,"byte_end":17302922,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302923,"byte_end":17302986,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17302987,"byte_end":17303043,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17303044,"byte_end":17303093,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17303094,"byte_end":17303106,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17303107,"byte_end":17303114,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17303115,"byte_end":17303122,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17303123,"byte_end":17303126,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304552,"byte_end":17304555,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304110,"byte_end":17304178,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304183,"byte_end":17304186,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304191,"byte_end":17304201,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304206,"byte_end":17304209,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304214,"byte_end":17304293,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304298,"byte_end":17304372,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304377,"byte_end":17304444,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304449,"byte_end":17304452,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304457,"byte_end":17304540,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305866,"byte_end":17305885,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304835,"byte_end":17304903,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304908,"byte_end":17304911,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304916,"byte_end":17304986,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304991,"byte_end":17305077,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305082,"byte_end":17305152,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305157,"byte_end":17305234,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305239,"byte_end":17305309,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305314,"byte_end":17305337,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305342,"byte_end":17305345,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305350,"byte_end":17305360,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305365,"byte_end":17305368,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305373,"byte_end":17305455,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305460,"byte_end":17305533,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305538,"byte_end":17305615,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305620,"byte_end":17305693,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305698,"byte_end":17305773,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305778,"byte_end":17305781,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17305786,"byte_end":17305854,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306673,"byte_end":17306683,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306142,"byte_end":17306193,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306198,"byte_end":17306201,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306206,"byte_end":17306213,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306218,"byte_end":17306237,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306242,"byte_end":17306287,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306292,"byte_end":17306295,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306300,"byte_end":17306372,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306377,"byte_end":17306424,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306429,"byte_end":17306436,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306441,"byte_end":17306448,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306453,"byte_end":17306498,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306503,"byte_end":17306506,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306511,"byte_end":17306604,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306609,"byte_end":17306649,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306654,"byte_end":17306661,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17310779,"byte_end":17310801,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17310732,"byte_end":17310774,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17310837,"byte_end":17310839,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17310807,"byte_end":17310832,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17310703,"byte_end":17310725,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1300}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17310619,"byte_end":17310676,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":337}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mod.rs","byte_start":7007,"byte_end":7037,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14476,"byte_end":14485,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1306}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14299,"byte_end":14363,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14364,"byte_end":14447,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14748,"byte_end":14754,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14561,"byte_end":14635,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14640,"byte_end":14710,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14715,"byte_end":14736,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8887,"byte_end":8904,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7665,"byte_end":7742,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7743,"byte_end":7753,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7754,"byte_end":7757,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7758,"byte_end":7823,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7824,"byte_end":7898,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7899,"byte_end":7902,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7903,"byte_end":7986,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7987,"byte_end":7990,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":7991,"byte_end":8005,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8006,"byte_end":8009,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8010,"byte_end":8023,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8024,"byte_end":8046,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8047,"byte_end":8091,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8092,"byte_end":8095,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8096,"byte_end":8114,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8115,"byte_end":8136,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8137,"byte_end":8182,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8183,"byte_end":8224,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8225,"byte_end":8228,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8229,"byte_end":8280,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8281,"byte_end":8344,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8345,"byte_end":8366,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8367,"byte_end":8416,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8417,"byte_end":8463,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8464,"byte_end":8485,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8486,"byte_end":8503,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8504,"byte_end":8585,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8586,"byte_end":8608,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8609,"byte_end":8626,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8627,"byte_end":8640,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8641,"byte_end":8652,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8653,"byte_end":8656,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8657,"byte_end":8690,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8691,"byte_end":8766,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8767,"byte_end":8794,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8795,"byte_end":8806,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8807,"byte_end":8810,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8811,"byte_end":8861,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8862,"byte_end":8867,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":8868,"byte_end":8875,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9131,"byte_end":9156,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":13525703,"byte_end":13525712,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10140,"byte_end":10143,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10065,"byte_end":10128,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11542,"byte_end":11553,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10275,"byte_end":10346,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10351,"byte_end":10384,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10389,"byte_end":10392,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10397,"byte_end":10468,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10473,"byte_end":10505,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10510,"byte_end":10513,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10518,"byte_end":10532,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10537,"byte_end":10540,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10545,"byte_end":10558,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10563,"byte_end":10585,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10590,"byte_end":10634,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10639,"byte_end":10642,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10647,"byte_end":10665,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10670,"byte_end":10691,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10696,"byte_end":10741,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10746,"byte_end":10792,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10797,"byte_end":10800,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10805,"byte_end":10856,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10861,"byte_end":10924,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10929,"byte_end":10950,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10955,"byte_end":11003,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11008,"byte_end":11054,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11059,"byte_end":11080,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11085,"byte_end":11102,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11107,"byte_end":11188,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11193,"byte_end":11215,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11220,"byte_end":11237,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11242,"byte_end":11255,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11260,"byte_end":11271,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11276,"byte_end":11279,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11284,"byte_end":11317,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11322,"byte_end":11397,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11402,"byte_end":11429,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11434,"byte_end":11445,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11450,"byte_end":11453,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11458,"byte_end":11508,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11513,"byte_end":11518,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11523,"byte_end":11530,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12276,"byte_end":12282,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11688,"byte_end":11760,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11765,"byte_end":11785,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11790,"byte_end":11793,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11798,"byte_end":11865,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11870,"byte_end":11873,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11878,"byte_end":11951,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":11956,"byte_end":12031,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12036,"byte_end":12110,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12115,"byte_end":12187,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12192,"byte_end":12264,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12414,"byte_end":12426,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12343,"byte_end":12402,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12785,"byte_end":12794,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12500,"byte_end":12574,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12579,"byte_end":12582,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12587,"byte_end":12661,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12666,"byte_end":12697,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12702,"byte_end":12705,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12710,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12734,"byte_end":12737,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12742,"byte_end":12773,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13138,"byte_end":13148,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":12975,"byte_end":13016,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13021,"byte_end":13024,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13029,"byte_end":13101,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13106,"byte_end":13126,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29551,"byte_end":29564,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29456,"byte_end":29522,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29843,"byte_end":29853,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29612,"byte_end":29650,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29655,"byte_end":29658,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29663,"byte_end":29757,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29762,"byte_end":29831,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30373,"byte_end":30383,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30235,"byte_end":30292,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30293,"byte_end":30296,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30297,"byte_end":30344,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31287,"byte_end":31290,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31244,"byte_end":31275,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32274,"byte_end":32286,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"pub fn poll_reserve(&mut Self, &mut Context)\n-> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31613,"byte_end":31667,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31672,"byte_end":31675,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31680,"byte_end":31765,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31770,"byte_end":31786,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31791,"byte_end":31794,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31799,"byte_end":31893,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31898,"byte_end":31984,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31989,"byte_end":32060,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32065,"byte_end":32140,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32145,"byte_end":32148,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32153,"byte_end":32165,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32170,"byte_end":32173,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":32178,"byte_end":32262,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34291,"byte_end":34300,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"pub fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":33831,"byte_end":33864,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":33869,"byte_end":33872,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":33877,"byte_end":33963,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":33968,"byte_end":34003,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34008,"byte_end":34011,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34016,"byte_end":34028,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34033,"byte_end":34036,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34041,"byte_end":34125,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34130,"byte_end":34133,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34138,"byte_end":34150,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34155,"byte_end":34158,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34163,"byte_end":34259,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":34264,"byte_end":34279,"line_start":138,"line_end":138,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35319,"byte_end":35328,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35173,"byte_end":35219,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35224,"byte_end":35227,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35232,"byte_end":35307,"line_start":161,"line_end":161,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35650,"byte_end":35657,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35426,"byte_end":35489,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35494,"byte_end":35497,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35502,"byte_end":35598,"line_start":168,"line_end":168,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35603,"byte_end":35638,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36455,"byte_end":36460,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35729,"byte_end":35752,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35757,"byte_end":35760,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35765,"byte_end":35859,"line_start":176,"line_end":176,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35864,"byte_end":35957,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35962,"byte_end":35965,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":35970,"byte_end":36064,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36069,"byte_end":36164,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36169,"byte_end":36265,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36270,"byte_end":36325,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36330,"byte_end":36333,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36338,"byte_end":36393,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":36398,"byte_end":36443,"line_start":185,"line_end":185,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37394,"byte_end":37404,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37098,"byte_end":37146,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37151,"byte_end":37154,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37159,"byte_end":37243,"line_start":205,"line_end":205,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37248,"byte_end":37343,"line_start":206,"line_end":206,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":37348,"byte_end":37382,"line_start":207,"line_end":207,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40622,"byte_end":40635,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40491,"byte_end":40564,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40565,"byte_end":40568,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40569,"byte_end":40610,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40838,"byte_end":40841,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40793,"byte_end":40826,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41005,"byte_end":41010,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40968,"byte_end":40993,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41116,"byte_end":41127,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41062,"byte_end":41104,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41242,"byte_end":41252,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41197,"byte_end":41230,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41986,"byte_end":41998,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41313,"byte_end":41361,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41366,"byte_end":41369,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41374,"byte_end":41415,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41420,"byte_end":41423,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41428,"byte_end":41490,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41495,"byte_end":41555,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41560,"byte_end":41620,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41625,"byte_end":41628,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41633,"byte_end":41708,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41713,"byte_end":41781,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41786,"byte_end":41862,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41867,"byte_end":41935,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":41940,"byte_end":41974,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43426,"byte_end":43443,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43142,"byte_end":43194,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43199,"byte_end":43202,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43207,"byte_end":43283,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43288,"byte_end":43322,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43327,"byte_end":43330,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43335,"byte_end":43414,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43903,"byte_end":43914,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43516,"byte_end":43558,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43563,"byte_end":43566,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43571,"byte_end":43644,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43649,"byte_end":43689,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43694,"byte_end":43697,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43702,"byte_end":43772,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43777,"byte_end":43811,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43816,"byte_end":43819,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43824,"byte_end":43891,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45068,"byte_end":45085,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":285}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":44863,"byte_end":44925,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":44926,"byte_end":44929,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":44930,"byte_end":44997,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":44998,"byte_end":45056,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45281,"byte_end":45284,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45198,"byte_end":45269,"line_start":19,"line_end":19,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45654,"byte_end":45657,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45439,"byte_end":45491,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45496,"byte_end":45499,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45504,"byte_end":45576,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45581,"byte_end":45642,"line_start":32,"line_end":32,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":46095,"byte_end":46102,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45854,"byte_end":45906,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45911,"byte_end":45914,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45919,"byte_end":45992,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45997,"byte_end":46067,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":46072,"byte_end":46083,"line_start":46,"line_end":46,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47169,"byte_end":47176,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47105,"byte_end":47157,"line_start":71,"line_end":71,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47329,"byte_end":47333,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47274,"byte_end":47317,"line_start":76,"line_end":76,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":1376},{"krate":0,"index":1385},{"krate":0,"index":1389},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":404}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50184,"byte_end":50219,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52166,"byte_end":52170,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52179,"byte_end":52184,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52147,"byte_end":52153,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1382}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50396,"byte_end":50502,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50503,"byte_end":50506,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50507,"byte_end":50597,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50598,"byte_end":50601,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50602,"byte_end":50637,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50638,"byte_end":50641,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50642,"byte_end":50655,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50656,"byte_end":50659,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50660,"byte_end":50697,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50698,"byte_end":50701,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50702,"byte_end":50721,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50722,"byte_end":50764,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50765,"byte_end":50815,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50816,"byte_end":50867,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50868,"byte_end":50886,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50887,"byte_end":50908,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50909,"byte_end":50951,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50952,"byte_end":50985,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":50986,"byte_end":51002,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51003,"byte_end":51097,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51098,"byte_end":51108,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51109,"byte_end":51112,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51113,"byte_end":51160,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51161,"byte_end":51166,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51167,"byte_end":51174,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51175,"byte_end":51178,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51379,"byte_end":51382,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51383,"byte_end":51469,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51470,"byte_end":51480,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51481,"byte_end":51484,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51485,"byte_end":51492,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51493,"byte_end":51528,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51529,"byte_end":51571,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51572,"byte_end":51622,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51623,"byte_end":51674,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51675,"byte_end":51678,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51679,"byte_end":51697,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51698,"byte_end":51719,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51720,"byte_end":51762,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51763,"byte_end":51810,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51811,"byte_end":51827,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51828,"byte_end":51877,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51878,"byte_end":51888,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51889,"byte_end":51892,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51893,"byte_end":51926,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51927,"byte_end":51967,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":51968,"byte_end":52000,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52001,"byte_end":52006,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52007,"byte_end":52014,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52015,"byte_end":52037,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214162,"byte_end":17214172,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214323,"byte_end":17214333,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214660,"byte_end":17214670,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214894,"byte_end":17214904,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17225141,"byte_end":17225150,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17225382,"byte_end":17225392,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17225543,"byte_end":17225552,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17225907,"byte_end":17225917,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17226163,"byte_end":17226171,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17226268,"byte_end":17226276,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17226387,"byte_end":17226395,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17226495,"byte_end":17226503,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17226613,"byte_end":17226623,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17234910,"byte_end":17234920,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17237755,"byte_end":17237761,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17241617,"byte_end":17241623,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17248014,"byte_end":17248020,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17248336,"byte_end":17248342,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249057,"byte_end":17249063,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17250103,"byte_end":17250114,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17251041,"byte_end":17251051,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17251980,"byte_end":17251990,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17254820,"byte_end":17254830,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17255143,"byte_end":17255153,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17255879,"byte_end":17255889,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17256868,"byte_end":17256879,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257235,"byte_end":17257246,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17260091,"byte_end":17260102,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17260866,"byte_end":17260877,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17261118,"byte_end":17261129,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276173,"byte_end":17276193,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279527,"byte_end":17279547,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280433,"byte_end":17280453,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281794,"byte_end":17281814,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282376,"byte_end":17282383,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17293158,"byte_end":17293165,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17293291,"byte_end":17293316,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17293474,"byte_end":17293499,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17293634,"byte_end":17293659,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17294728,"byte_end":17294738,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17297280,"byte_end":17297290,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17300666,"byte_end":17300676,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17300999,"byte_end":17301009,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17301316,"byte_end":17301331,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17301613,"byte_end":17301628,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17301745,"byte_end":17301760,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304086,"byte_end":17304103,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306752,"byte_end":17306769,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17310061,"byte_end":17310078,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17310442,"byte_end":17310459,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17310877,"byte_end":17310899,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17311228,"byte_end":17311250,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17311381,"byte_end":17311403,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14545,"byte_end":14554,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14914,"byte_end":14923,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\tree_node.rs","byte_start":17373,"byte_end":17381,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9355,"byte_end":9372,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9597,"byte_end":9614,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9805,"byte_end":9822,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10041,"byte_end":10058,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13296,"byte_end":13321,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13493,"byte_end":13518,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29589,"byte_end":29602,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29924,"byte_end":29937,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30097,"byte_end":30110,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31224,"byte_end":31234,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":38875,"byte_end":38885,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":39615,"byte_end":39625,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40773,"byte_end":40786,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43998,"byte_end":44011,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44225,"byte_end":44238,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44356,"byte_end":44369,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44581,"byte_end":44594,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45167,"byte_end":45184,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47440,"byte_end":47457,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47874,"byte_end":47891,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47926,"byte_end":47943,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":49331,"byte_end":49341,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":49629,"byte_end":49639,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":50037,"byte_end":50044,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52790,"byte_end":52796,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53039,"byte_end":53045,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53318,"byte_end":53324,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53652,"byte_end":53658,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":54012,"byte_end":54018,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":54570,"byte_end":54576,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":458}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\mod.rs","byte_start":17212574,"byte_end":17212590,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":916}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":864,"byte_end":868,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\lib.rs","byte_start":879,"byte_end":885,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":340}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214162,"byte_end":17214172,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214323,"byte_end":17214333,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":511}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214660,"byte_end":17214670,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\bytes_codec.rs","byte_start":17214894,"byte_end":17214904,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17225141,"byte_end":17225150,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17225382,"byte_end":17225392,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17225543,"byte_end":17225552,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17225907,"byte_end":17225917,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17226163,"byte_end":17226171,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2654}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17226268,"byte_end":17226276,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2657}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17226387,"byte_end":17226395,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2654}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17226495,"byte_end":17226503,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2657}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17226613,"byte_end":17226623,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1660},"to":{"krate":37,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_impl.rs","byte_start":17234910,"byte_end":17234920,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1660},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17237755,"byte_end":17237761,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17241617,"byte_end":17241623,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17248014,"byte_end":17248020,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1475},"to":{"krate":37,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17248336,"byte_end":17248342,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1475},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17249057,"byte_end":17249063,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1475},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed.rs","byte_start":17250103,"byte_end":17250114,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17251041,"byte_end":17251051,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17251980,"byte_end":17251990,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17254820,"byte_end":17254830,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1434},"to":{"krate":37,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17255143,"byte_end":17255153,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1434},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_read.rs","byte_start":17255879,"byte_end":17255889,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17256868,"byte_end":17256879,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17257235,"byte_end":17257246,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17260091,"byte_end":17260102,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1393},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17260866,"byte_end":17260877,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1393},"to":{"krate":37,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\framed_write.rs","byte_start":17261118,"byte_end":17261129,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17276173,"byte_end":17276193,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17279527,"byte_end":17279547,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":511}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17280433,"byte_end":17280453,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":528}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17281794,"byte_end":17281814,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17282376,"byte_end":17282383,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17293158,"byte_end":17293165,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17293291,"byte_end":17293316,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17293474,"byte_end":17293499,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\length_delimited.rs","byte_start":17293634,"byte_end":17293659,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":973},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17294728,"byte_end":17294738,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17297280,"byte_end":17297290,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":511}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17300666,"byte_end":17300676,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":528}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17300999,"byte_end":17301009,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1243},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17301316,"byte_end":17301331,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17301613,"byte_end":17301628,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\lines_codec.rs","byte_start":17301745,"byte_end":17301760,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1265},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17304086,"byte_end":17304103,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17306752,"byte_end":17306769,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":511}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17310061,"byte_end":17310078,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":528}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17310442,"byte_end":17310459,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17310877,"byte_end":17310899,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17311228,"byte_end":17311250,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\codec\\any_delimiter_codec.rs","byte_start":17311381,"byte_end":17311403,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1297},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14545,"byte_end":14554,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\guard.rs","byte_start":14914,"byte_end":14923,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token\\tree_node.rs","byte_start":17373,"byte_end":17381,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9355,"byte_end":9372,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9597,"byte_end":9614,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9805,"byte_end":9822,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":10041,"byte_end":10058,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13296,"byte_end":13321,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\cancellation_token.rs","byte_start":13493,"byte_end":13518,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29589,"byte_end":29602,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":29924,"byte_end":29937,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":30097,"byte_end":30110,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1346},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":31224,"byte_end":31234,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":38875,"byte_end":38885,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\mpsc.rs","byte_start":39615,"byte_end":39625,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1368},"to":{"krate":17,"index":17}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":40773,"byte_end":40786,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":43998,"byte_end":44011,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":226},"to":{"krate":37,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44225,"byte_end":44238,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44356,"byte_end":44369,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\poll_semaphore.rs","byte_start":44581,"byte_end":44594,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":45167,"byte_end":45184,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47440,"byte_end":47457,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47874,"byte_end":47891,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":47926,"byte_end":47943,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":49331,"byte_end":49341,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":49629,"byte_end":49639,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\sync\\reusable_box.rs","byte_start":50037,"byte_end":50044,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":52790,"byte_end":52796,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53039,"byte_end":53045,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1376},"to":{"krate":18,"index":230}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53318,"byte_end":53324,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1376},"to":{"krate":18,"index":188}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":53652,"byte_end":53658,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1376},"to":{"krate":18,"index":269}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":54012,"byte_end":54018,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1376},"to":{"krate":18,"index":309}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.7.3\\src\\either.rs","byte_start":54570,"byte_end":54576,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1376},"to":{"krate":37,"index":96}}]}
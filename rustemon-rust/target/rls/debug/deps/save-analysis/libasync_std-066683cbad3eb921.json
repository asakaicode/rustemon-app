{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0","program":"C:\\Users\\tubak\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","async_std","--edition=2018","C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-channel\"","--cfg","feature=\"async-global-executor\"","--cfg","feature=\"async-io\"","--cfg","feature=\"async-lock\"","--cfg","feature=\"async-process\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-channel\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-lite\"","--cfg","feature=\"gloo-timers\"","--cfg","feature=\"kv-log-macro\"","--cfg","feature=\"log\"","--cfg","feature=\"memchr\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"pin-utils\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","--cfg","feature=\"unstable\"","--cfg","feature=\"wasm-bindgen-futures\"","-C","metadata=066683cbad3eb921","-C","extra-filename=-066683cbad3eb921","--out-dir","c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps","--extern","async_channel=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libasync_channel-35ba0f7041c83da9.rmeta","--extern","async_global_executor=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libasync_global_executor-cb3b46096d901c20.rmeta","--extern","async_io=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libasync_io-1c34ff7e64a42b75.rmeta","--extern","async_lock=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libasync_lock-b7abf352b72dbc89.rmeta","--extern","async_process=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libasync_process-23d80ecab43f09c9.rmeta","--extern","crossbeam_utils=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libcrossbeam_utils-d7e5ddc03f685d7b.rmeta","--extern","futures_core=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libfutures_core-e34f210f395a45b5.rmeta","--extern","futures_io=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libfutures_io-8261f641b3c6cb4f.rmeta","--extern","futures_lite=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libfutures_lite-16ecd430e0be1f52.rmeta","--extern","kv_log_macro=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libkv_log_macro-a8348ca52daabb6e.rmeta","--extern","log=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\liblog-8bef391c01962b98.rmeta","--extern","memchr=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libmemchr-01bfb5c46bf73bfe.rmeta","--extern","num_cpus=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libnum_cpus-4f8ec86c9270313d.rmeta","--extern","once_cell=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libonce_cell-994f6fdcf5577520.rmeta","--extern","pin_project_lite=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libpin_project_lite-e22eb2e62c630ccc.rmeta","--extern","pin_utils=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libpin_utils-0c290d8f094c78eb.rmeta","--extern","slab=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libslab-e69780ac28c02d8b.rmeta","--cap-lints","allow","-L","native=c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\build\\wepoll-ffi-28b7f252a0e838dd\\out","--error-format=json","--sysroot","C:\\Users\\tubak\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\tubak\\programming\\rustemon-app\\rustemon\\target\\rls\\debug\\deps\\libasync_std-066683cbad3eb921.rmeta"},"prelude":{"crate_id":{"name":"async_std","disambiguator":[8720536849483965135,0]},"crate_root":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src","external_crates":[{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\all.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","num":16,"id":{"name":"kv_log_macro","disambiguator":[9312080711046667467,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","num":17,"id":{"name":"log","disambiguator":[2187126350315469323,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","num":18,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","num":19,"id":{"name":"value_bag","disambiguator":[11136801585953617220,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","num":20,"id":{"name":"ctor","disambiguator":[7771317596828049422,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cycle.rs","num":21,"id":{"name":"futures_core","disambiguator":[11080074677927752119,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","num":22,"id":{"name":"pin_utils","disambiguator":[13643175944386566012,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[11650812661830545456,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","num":24,"id":{"name":"async_lock","disambiguator":[12639449410867911914,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","num":25,"id":{"name":"event_listener","disambiguator":[9427658321815643075,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\channel.rs","num":26,"id":{"name":"async_channel","disambiguator":[16085638185354093381,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\channel.rs","num":27,"id":{"name":"concurrent_queue","disambiguator":[5532443499363405821,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\channel.rs","num":28,"id":{"name":"cache_padded","disambiguator":[12939856762124154076,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","num":29,"id":{"name":"futures_io","disambiguator":[3474500754848428859,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","num":30,"id":{"name":"async_process","disambiguator":[4272653907753188036,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","num":31,"id":{"name":"blocking","disambiguator":[15485331455307732821,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","num":32,"id":{"name":"async_task","disambiguator":[5371710430223848140,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","num":33,"id":{"name":"atomic_waker","disambiguator":[1696356094143753410,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","num":34,"id":{"name":"futures_lite","disambiguator":[4517118348503135792,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","num":35,"id":{"name":"parking","disambiguator":[10706527373639604208,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","num":36,"id":{"name":"waker_fn","disambiguator":[11360860524405296437,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","num":37,"id":{"name":"fastrand","disambiguator":[1911414498967928827,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","num":38,"id":{"name":"memchr","disambiguator":[11795001318777741512,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\rt\\mod.rs","num":39,"id":{"name":"once_cell","disambiguator":[2720024562785292442,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","num":40,"id":{"name":"winapi","disambiguator":[6636251777768477428,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\waker_set.rs","num":41,"id":{"name":"crossbeam_utils","disambiguator":[13548143170511223058,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\waker_set.rs","num":42,"id":{"name":"lazy_static","disambiguator":[17608421772039054989,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\waker_set.rs","num":43,"id":{"name":"slab","disambiguator":[12351521486338416791,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","num":44,"id":{"name":"async_io","disambiguator":[9872912324012814637,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","num":45,"id":{"name":"socket2","disambiguator":[4076625419840325450,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","num":46,"id":{"name":"polling","disambiguator":[1585931132479167300,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","num":47,"id":{"name":"wepoll_ffi","disambiguator":[10799400245750903032,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","num":48,"id":{"name":"async_global_executor","disambiguator":[14779047054762920546,0]}},{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","num":49,"id":{"name":"async_executor","disambiguator":[5008261189423734836,0]}}],"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":0,"byte_end":11529,"line_start":1,"line_end":338,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":13400},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476633,"byte_end":13476640,"line_start":122,"line_end":122,"column_start":26,"column_end":33},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":2,"index":49132},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476642,"byte_end":13476646,"line_start":122,"line_end":122,"column_start":35,"column_end":39},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":2,"index":13410},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476648,"byte_end":13476653,"line_start":122,"line_end":122,"column_start":41,"column_end":46},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":21,"index":169},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476675,"byte_end":13476680,"line_start":123,"line_end":123,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":21,"index":169},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\ready.rs","byte_start":13616812,"byte_end":13616817,"line_start":4,"line_end":4,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1968}},{"kind":"Use","ref_id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476735,"byte_end":13476744,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476805,"byte_end":13476813,"line_start":134,"line_end":134,"column_start":23,"column_end":31},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2313},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476836,"byte_end":13476843,"line_start":135,"line_end":135,"column_start":22,"column_end":29},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476867,"byte_end":13476874,"line_start":136,"line_end":136,"column_start":23,"column_end":30},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476876,"byte_end":13476887,"line_start":136,"line_end":136,"column_start":32,"column_end":43},"alias_span":null,"name":"try_current","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2334},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476908,"byte_end":13476912,"line_start":137,"line_end":137,"column_start":19,"column_end":23},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476935,"byte_end":13476941,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2340},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476935,"byte_end":13476941,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2327},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476968,"byte_end":13476978,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2161},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476999,"byte_end":13477004,"line_start":140,"line_end":140,"column_start":20,"column_end":25},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13477064,"byte_end":13477069,"line_start":142,"line_end":142,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2364},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13477096,"byte_end":13477107,"line_start":143,"line_end":143,"column_start":26,"column_end":37},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2357},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13477109,"byte_end":13477117,"line_start":143,"line_end":143,"column_start":39,"column_end":47},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2186},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13477620,"byte_end":13477634,"line_start":164,"line_end":164,"column_start":29,"column_end":43},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2404},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13477851,"byte_end":13477862,"line_start":172,"line_end":172,"column_start":26,"column_end":37},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":2,"index":13098},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480446,"byte_end":13480452,"line_start":50,"line_end":50,"column_start":21,"column_end":27},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":52}},{"kind":"Use","ref_id":{"krate":2,"index":13098},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771509,"byte_end":13771515,"line_start":23,"line_end":23,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2410}},{"kind":"Use","ref_id":{"krate":0,"index":2672},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480516,"byte_end":13480523,"line_start":55,"line_end":55,"column_start":22,"column_end":29},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":52}},{"kind":"Use","ref_id":{"krate":0,"index":2697},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480546,"byte_end":13480553,"line_start":56,"line_end":56,"column_start":22,"column_end":29},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":52}},{"kind":"Use","ref_id":{"krate":0,"index":2713},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480574,"byte_end":13480579,"line_start":57,"line_end":57,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":52}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480707,"byte_end":13480714,"line_start":65,"line_end":65,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":52}},{"kind":"Use","ref_id":{"krate":0,"index":2717},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480716,"byte_end":13480728,"line_start":65,"line_end":65,"column_start":28,"column_end":40},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":52}},{"kind":"Use","ref_id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480841,"byte_end":13480851,"line_start":70,"line_end":70,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":52}},{"kind":"Use","ref_id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493375,"byte_end":13493380,"line_start":304,"line_end":304,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493382,"byte_end":13493387,"line_start":304,"line_end":304,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":1845},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493408,"byte_end":13493415,"line_start":305,"line_end":305,"column_start":19,"column_end":26},"alias_span":null,"name":"from_fn","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3196},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493417,"byte_end":13493423,"line_start":305,"line_end":305,"column_start":28,"column_end":34},"alias_span":null,"name":"FromFn","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":1873},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493446,"byte_end":13493455,"line_start":306,"line_end":306,"column_start":21,"column_end":30},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":9618},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493457,"byte_end":13493465,"line_start":306,"line_end":306,"column_start":32,"column_end":40},"alias_span":null,"name":"FromIter","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493483,"byte_end":13493487,"line_start":307,"line_end":307,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":9579},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493489,"byte_end":13493493,"line_start":307,"line_end":307,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":1925},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493513,"byte_end":13493519,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493521,"byte_end":13493527,"line_start":308,"line_end":308,"column_start":26,"column_end":32},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":1947},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493552,"byte_end":13493563,"line_start":309,"line_end":309,"column_start":23,"column_end":34},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3214},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493565,"byte_end":13493575,"line_start":309,"line_end":309,"column_start":36,"column_end":46},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":108}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493594,"byte_end":13493595,"line_start":310,"line_end":310,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Fuse, Stream","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":11641},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496045,"byte_end":13496050,"line_start":98,"line_end":98,"column_start":16,"column_end":21},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":11605},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496068,"byte_end":13496074,"line_start":99,"line_end":99,"column_start":17,"column_end":23},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":11516},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496092,"byte_end":13496098,"line_start":100,"line_end":100,"column_start":17,"column_end":23},"alias_span":null,"name":"Copied","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":11342},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496116,"byte_end":13496122,"line_start":101,"line_end":101,"column_start":17,"column_end":23},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":11143},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496138,"byte_end":13496142,"line_start":102,"line_end":102,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":11012},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496161,"byte_end":13496168,"line_start":103,"line_end":103,"column_start":18,"column_end":25},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":10836},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496183,"byte_end":13496186,"line_start":104,"line_end":104,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":10362},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496202,"byte_end":13496206,"line_start":105,"line_end":105,"column_start":15,"column_end":19},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":10322},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496222,"byte_end":13496226,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":10273},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496248,"byte_end":13496257,"line_start":107,"line_end":107,"column_start":21,"column_end":30},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":10229},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496276,"byte_end":13496282,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"alias_span":null,"name":"StepBy","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":10186},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496298,"byte_end":13496302,"line_start":109,"line_end":109,"column_start":15,"column_end":19},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":10137},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496324,"byte_end":13496333,"line_start":110,"line_end":110,"column_start":21,"column_end":30},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":10088},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496348,"byte_end":13496351,"line_start":111,"line_end":111,"column_start":14,"column_end":17},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":10002},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496724,"byte_end":13496729,"line_start":128,"line_end":128,"column_start":20,"column_end":25},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":9965},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496752,"byte_end":13496759,"line_start":129,"line_end":129,"column_start":22,"column_end":29},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":9912},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496783,"byte_end":13496790,"line_start":130,"line_end":130,"column_start":23,"column_end":30},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496814,"byte_end":13496826,"line_start":131,"line_end":131,"column_start":23,"column_end":35},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":9806},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496828,"byte_end":13496835,"line_start":131,"line_end":131,"column_start":37,"column_end":44},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":9761},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496860,"byte_end":13496868,"line_start":132,"line_end":132,"column_start":23,"column_end":31},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":9720},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13496889,"byte_end":13496894,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":21,"index":96},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13497079,"byte_end":13497085,"line_start":146,"line_end":146,"column_start":31,"column_end":37},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":152}},{"kind":"Use","ref_id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493972,"byte_end":13493989,"line_start":334,"line_end":334,"column_start":34,"column_end":51},"alias_span":null,"name":"DoubleEndedStream","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494022,"byte_end":13494037,"line_start":335,"line_end":335,"column_start":32,"column_end":47},"alias_span":null,"name":"ExactSizeStream","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494060,"byte_end":13494066,"line_start":336,"line_end":336,"column_start":22,"column_end":28},"alias_span":null,"name":"extend","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3440},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494068,"byte_end":13494074,"line_start":336,"line_end":336,"column_start":30,"column_end":36},"alias_span":null,"name":"Extend","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494102,"byte_end":13494112,"line_start":337,"line_end":337,"column_start":26,"column_end":36},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494140,"byte_end":13494151,"line_start":338,"line_end":338,"column_start":27,"column_end":38},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3501},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494176,"byte_end":13494184,"line_start":339,"line_end":339,"column_start":24,"column_end":32},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3691},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494186,"byte_end":13494194,"line_start":339,"line_end":339,"column_start":34,"column_end":42},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3509},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494222,"byte_end":13494232,"line_start":340,"line_end":340,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494256,"byte_end":13494263,"line_start":341,"line_end":341,"column_start":23,"column_end":30},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3696},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494265,"byte_end":13494272,"line_start":341,"line_end":341,"column_start":32,"column_end":39},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3569},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494296,"byte_end":13494303,"line_start":342,"line_end":342,"column_start":22,"column_end":29},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":10002},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494325,"byte_end":13494330,"line_start":343,"line_end":343,"column_start":21,"column_end":26},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3605},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494357,"byte_end":13494367,"line_start":344,"line_end":344,"column_start":26,"column_end":36},"alias_span":null,"name":"successors","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":9416},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494369,"byte_end":13494379,"line_start":344,"line_end":344,"column_start":38,"column_end":48},"alias_span":null,"name":"Successors","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":0,"index":3623},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13494399,"byte_end":13494402,"line_start":345,"line_end":345,"column_start":18,"column_end":21},"alias_span":null,"name":"Sum","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":1,"index":4154},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881231,"byte_end":13881236,"line_start":276,"line_end":276,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":1,"index":10295},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881238,"byte_end":13881247,"line_start":276,"line_end":276,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":1,"index":10419},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881249,"byte_end":13881256,"line_start":276,"line_end":276,"column_start":41,"column_end":48},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":1,"index":4741},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881258,"byte_end":13881268,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":1,"index":4152},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881270,"byte_end":13881276,"line_start":276,"line_end":276,"column_start":62,"column_end":68},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":1,"index":10431},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881278,"byte_end":13881286,"line_start":276,"line_end":276,"column_start":70,"column_end":78},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":29,"index":49},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881313,"byte_end":13881320,"line_start":278,"line_end":278,"column_start":24,"column_end":31},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":9368},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881322,"byte_end":13881327,"line_start":278,"line_end":278,"column_start":33,"column_end":38},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":9320},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881329,"byte_end":13881334,"line_start":278,"line_end":278,"column_start":40,"column_end":45},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":9186},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881361,"byte_end":13881370,"line_start":279,"line_end":279,"column_start":25,"column_end":34},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":9145},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881397,"byte_end":13881406,"line_start":280,"line_end":280,"column_start":26,"column_end":35},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5588},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881408,"byte_end":13881422,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5405},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881443,"byte_end":13881447,"line_start":281,"line_end":281,"column_start":19,"column_end":23},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5596},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881469,"byte_end":13881475,"line_start":282,"line_end":282,"column_start":21,"column_end":27},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5508},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881497,"byte_end":13881502,"line_start":283,"line_end":283,"column_start":21,"column_end":26},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5509},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881504,"byte_end":13881509,"line_start":283,"line_end":283,"column_start":28,"column_end":33},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":4282}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881530,"byte_end":13881531,"line_start":284,"line_end":284,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"_, Read","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5540},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881554,"byte_end":13881560,"line_start":285,"line_end":285,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5541},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881562,"byte_end":13881568,"line_start":285,"line_end":285,"column_start":30,"column_end":36},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":29,"index":47},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881589,"byte_end":13881593,"line_start":286,"line_end":286,"column_start":19,"column_end":23},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5568},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881614,"byte_end":13881618,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5569},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881620,"byte_end":13881624,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":4282}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881646,"byte_end":13881647,"line_start":288,"line_end":288,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"Write, _","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":29,"index":49},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891511,"byte_end":13891518,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":4390}},{"kind":"Use","ref_id":{"krate":29,"index":39},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891557,"byte_end":13891561,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":4390}},{"kind":"Use","ref_id":{"krate":29,"index":47},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891600,"byte_end":13891604,"line_start":16,"line_end":16,"column_start":20,"column_end":24},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4390}},{"kind":"Use","ref_id":{"krate":29,"index":42},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891643,"byte_end":13891648,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":4390}},{"kind":"Use","ref_id":{"krate":0,"index":4598},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891695,"byte_end":13891705,"line_start":21,"line_end":21,"column_start":30,"column_end":40},"alias_span":null,"name":"BufReadExt","value":"","parent":{"krate":0,"index":4390}},{"kind":"Use","ref_id":{"krate":0,"index":4942},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891747,"byte_end":13891754,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"ReadExt","value":"","parent":{"krate":0,"index":4390}},{"kind":"Use","ref_id":{"krate":0,"index":5005},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891796,"byte_end":13891803,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"SeekExt","value":"","parent":{"krate":0,"index":4390}},{"kind":"Use","ref_id":{"krate":0,"index":5192},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891846,"byte_end":13891854,"line_start":27,"line_end":27,"column_start":27,"column_end":35},"alias_span":null,"name":"WriteExt","value":"","parent":{"krate":0,"index":4390}},{"kind":"Use","ref_id":{"krate":0,"index":9368},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","byte_start":13891926,"byte_end":13891931,"line_start":6,"line_end":6,"column_start":16,"column_end":21},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":4415}},{"kind":"Use","ref_id":{"krate":0,"index":9320},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","byte_start":13891948,"byte_end":13891953,"line_start":7,"line_end":7,"column_start":16,"column_end":21},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":4415}},{"kind":"Use","ref_id":{"krate":29,"index":49},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","byte_start":13892125,"byte_end":13892137,"line_start":18,"line_end":18,"column_start":21,"column_end":33},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":4415}},{"kind":"Use","ref_id":{"krate":0,"index":5577},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13905790,"byte_end":13905795,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":4609}},{"kind":"Use","ref_id":{"krate":0,"index":9271},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13905812,"byte_end":13905817,"line_start":21,"line_end":21,"column_start":16,"column_end":21},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":4609}},{"kind":"Use","ref_id":{"krate":0,"index":9231},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13905833,"byte_end":13905837,"line_start":22,"line_end":22,"column_start":15,"column_end":19},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":4609}},{"kind":"Use","ref_id":{"krate":29,"index":39},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13905860,"byte_end":13905869,"line_start":24,"line_end":24,"column_start":21,"column_end":30},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":4609}},{"kind":"Use","ref_id":{"krate":29,"index":47},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\seek\\mod.rs","byte_start":13937090,"byte_end":13937099,"line_start":7,"line_end":7,"column_start":21,"column_end":30},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4962}},{"kind":"Use","ref_id":{"krate":29,"index":42},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\mod.rs","byte_start":13938900,"byte_end":13938910,"line_start":15,"line_end":15,"column_start":21,"column_end":31},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":5009}},{"kind":"Use","ref_id":{"krate":0,"index":5778},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13882051,"byte_end":13882058,"line_start":311,"line_end":311,"column_start":21,"column_end":28},"alias_span":null,"name":"_eprint","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5775},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13882060,"byte_end":13882066,"line_start":311,"line_end":311,"column_start":30,"column_end":36},"alias_span":null,"name":"_print","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5709},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13882130,"byte_end":13882136,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5818},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13882138,"byte_end":13882144,"line_start":314,"line_end":314,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5752},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13882206,"byte_end":13882211,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5856},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13882213,"byte_end":13882218,"line_start":316,"line_end":316,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5811},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13882281,"byte_end":13882287,"line_start":318,"line_end":318,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5895},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13882289,"byte_end":13882295,"line_start":318,"line_end":318,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5669},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13882319,"byte_end":13882326,"line_start":319,"line_end":319,"column_start":22,"column_end":29},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":1,"index":6011},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\io.rs","byte_start":14010947,"byte_end":14010958,"line_start":5,"line_end":5,"column_start":9,"column_end":20},"alias_span":null,"name":"AsRawHandle","value":"","parent":{"krate":0,"index":5934}},{"kind":"Use","ref_id":{"krate":1,"index":6013},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\io.rs","byte_start":14010960,"byte_end":14010973,"line_start":5,"line_end":5,"column_start":22,"column_end":35},"alias_span":null,"name":"FromRawHandle","value":"","parent":{"krate":0,"index":5934}},{"kind":"Use","ref_id":{"krate":1,"index":6015},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\io.rs","byte_start":14010975,"byte_end":14010988,"line_start":5,"line_end":5,"column_start":37,"column_end":50},"alias_span":null,"name":"IntoRawHandle","value":"","parent":{"krate":0,"index":5934}},{"kind":"Use","ref_id":{"krate":1,"index":6009},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\io.rs","byte_start":14010990,"byte_end":14010999,"line_start":5,"line_end":5,"column_start":52,"column_end":61},"alias_span":null,"name":"RawHandle","value":"","parent":{"krate":0,"index":5934}},{"kind":"Use","ref_id":{"krate":1,"index":6039},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\io.rs","byte_start":14011009,"byte_end":14011020,"line_start":6,"line_end":6,"column_start":9,"column_end":20},"alias_span":null,"name":"AsRawSocket","value":"","parent":{"krate":0,"index":5934}},{"kind":"Use","ref_id":{"krate":1,"index":6041},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\io.rs","byte_start":14011022,"byte_end":14011035,"line_start":6,"line_end":6,"column_start":22,"column_end":35},"alias_span":null,"name":"FromRawSocket","value":"","parent":{"krate":0,"index":5934}},{"kind":"Use","ref_id":{"krate":1,"index":6043},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\io.rs","byte_start":14011037,"byte_end":14011050,"line_start":6,"line_end":6,"column_start":37,"column_end":50},"alias_span":null,"name":"IntoRawSocket","value":"","parent":{"krate":0,"index":5934}},{"kind":"Use","ref_id":{"krate":1,"index":6010},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\io.rs","byte_start":14011052,"byte_end":14011061,"line_start":6,"line_end":6,"column_start":52,"column_end":61},"alias_span":null,"name":"RawSocket","value":"","parent":{"krate":0,"index":5934}},{"kind":"Use","ref_id":{"krate":30,"index":59},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","byte_start":14010826,"byte_end":14010833,"line_start":12,"line_end":12,"column_start":28,"column_end":35},"alias_span":null,"name":"process","value":"","parent":{"krate":0,"index":5933}},{"kind":"Use","ref_id":{"krate":2,"index":13098},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882969,"byte_end":13882975,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":21,"index":96},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883026,"byte_end":13883032,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":0,"index":2414},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883089,"byte_end":13883098,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":0,"index":1686},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883154,"byte_end":13883163,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":29,"index":49},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883210,"byte_end":13883217,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":29,"index":39},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883269,"byte_end":13883273,"line_start":27,"line_end":27,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":29,"index":47},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883325,"byte_end":13883329,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":29,"index":42},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883381,"byte_end":13883386,"line_start":31,"line_end":31,"column_start":24,"column_end":29},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":0,"index":4598},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883448,"byte_end":13883458,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":0,"index":4942},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883519,"byte_end":13883526,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":0,"index":5005},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883587,"byte_end":13883594,"line_start":38,"line_end":38,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":0,"index":5192},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883655,"byte_end":13883663,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883729,"byte_end":13883739,"line_start":45,"line_end":45,"column_start":20,"column_end":30},"alias_span":null,"name":"task_local","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883809,"byte_end":13883826,"line_start":50,"line_end":50,"column_start":28,"column_end":45},"alias_span":null,"name":"DoubleEndedStream","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13883877,"byte_end":13883892,"line_start":52,"line_end":52,"column_start":28,"column_end":43},"alias_span":null,"name":"ExactSizeStream","value":"","parent":{"krate":0,"index":4285}},{"kind":"Use","ref_id":{"krate":5,"index":5980},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890581,"byte_end":13890584,"line_start":175,"line_end":175,"column_start":21,"column_end":24},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":4286}},{"kind":"Use","ref_id":{"krate":5,"index":6000},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890586,"byte_end":13890590,"line_start":175,"line_end":175,"column_start":26,"column_end":30},"alias_span":null,"name":"Weak","value":"","parent":{"krate":0,"index":4286}},{"kind":"Use","ref_id":{"krate":24,"index":60},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890630,"byte_end":13890635,"line_start":178,"line_end":178,"column_start":22,"column_end":27},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":4286}},{"kind":"Use","ref_id":{"krate":24,"index":108},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890637,"byte_end":13890647,"line_start":178,"line_end":178,"column_start":29,"column_end":39},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":4286}},{"kind":"Use","ref_id":{"krate":24,"index":137},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890649,"byte_end":13890662,"line_start":178,"line_end":178,"column_start":41,"column_end":54},"alias_span":null,"name":"MutexGuardArc","value":"","parent":{"krate":0,"index":4286}},{"kind":"Use","ref_id":{"krate":24,"index":210},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890702,"byte_end":13890708,"line_start":181,"line_end":181,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":4286}},{"kind":"Use","ref_id":{"krate":24,"index":253},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890710,"byte_end":13890725,"line_start":181,"line_end":181,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":4286}},{"kind":"Use","ref_id":{"krate":24,"index":275},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890727,"byte_end":13890752,"line_start":181,"line_end":181,"column_start":47,"column_end":72},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":4286}},{"kind":"Use","ref_id":{"krate":24,"index":311},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890754,"byte_end":13890770,"line_start":181,"line_end":181,"column_start":74,"column_end":90},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":4286}},{"kind":"Use","ref_id":{"krate":24,"index":412},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890815,"byte_end":13890822,"line_start":184,"line_end":184,"column_start":26,"column_end":33},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":4286}},{"kind":"Use","ref_id":{"krate":24,"index":423},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890824,"byte_end":13890841,"line_start":184,"line_end":184,"column_start":35,"column_end":52},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":4286}},{"kind":"Use","ref_id":{"krate":0,"index":6075},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890865,"byte_end":13890872,"line_start":185,"line_end":185,"column_start":22,"column_end":29},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":4286}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\channel.rs","byte_start":13891209,"byte_end":13891210,"line_start":8,"line_end":8,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":4317}},{"kind":"Use","ref_id":{"krate":0,"index":7782},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035669,"byte_end":14035679,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6424},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035700,"byte_end":14035708,"line_start":31,"line_end":31,"column_start":20,"column_end":28},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":7788},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035724,"byte_end":14035728,"line_start":32,"line_end":32,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":1,"index":10173},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035749,"byte_end":14035757,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":1,"index":10142},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035777,"byte_end":14035785,"line_start":34,"line_end":34,"column_start":19,"column_end":27},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":7818},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035809,"byte_end":14035820,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":1,"index":10159},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035843,"byte_end":14035854,"line_start":36,"line_end":36,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":7828},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035874,"byte_end":14035881,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6313},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035906,"byte_end":14035918,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6332},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035934,"byte_end":14035938,"line_start":40,"line_end":40,"column_start":15,"column_end":19},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6352},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035960,"byte_end":14035970,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6371},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035996,"byte_end":14036010,"line_start":42,"line_end":42,"column_start":25,"column_end":39},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6675},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036031,"byte_end":14036040,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6692},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036060,"byte_end":14036068,"line_start":44,"line_end":44,"column_start":19,"column_end":27},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6742},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036084,"byte_end":14036088,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6783},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036108,"byte_end":14036116,"line_start":46,"line_end":46,"column_start":19,"column_end":27},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6813},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036137,"byte_end":14036146,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6832},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036172,"byte_end":14036186,"line_start":48,"line_end":48,"column_start":25,"column_end":39},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6851},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036208,"byte_end":14036218,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6870},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036244,"byte_end":14036258,"line_start":50,"line_end":50,"column_start":25,"column_end":39},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6889},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036281,"byte_end":14036292,"line_start":51,"line_end":51,"column_start":22,"column_end":33},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6908},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036310,"byte_end":14036316,"line_start":52,"line_end":52,"column_start":17,"column_end":23},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6928},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036343,"byte_end":14036358,"line_start":53,"line_end":53,"column_start":26,"column_end":41},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6946},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036386,"byte_end":14036402,"line_start":54,"line_end":54,"column_start":27,"column_end":43},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":0,"index":6964},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14036419,"byte_end":14036424,"line_start":55,"line_end":55,"column_start":16,"column_end":21},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":6220}},{"kind":"Use","ref_id":{"krate":1,"index":10173},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file_type.rs","byte_start":14080027,"byte_end":14080035,"line_start":2,"line_end":2,"column_start":22,"column_end":30},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":6661}},{"kind":"Use","ref_id":{"krate":1,"index":10142},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14085267,"byte_end":14085275,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":6682}},{"kind":"Use","ref_id":{"krate":1,"index":10159},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\permissions.rs","byte_start":14100000,"byte_end":14100011,"line_start":2,"line_end":2,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":6728}},{"kind":"Use","ref_id":{"krate":1,"index":6513},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119700,"byte_end":14119712,"line_start":80,"line_end":80,"column_start":5,"column_end":17},"alias_span":null,"name":"is_separator","value":"","parent":{"krate":0,"index":6971}},{"kind":"Use","ref_id":{"krate":1,"index":10793},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119714,"byte_end":14119723,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":6971}},{"kind":"Use","ref_id":{"krate":1,"index":6807},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119725,"byte_end":14119732,"line_start":80,"line_end":80,"column_start":30,"column_end":37},"alias_span":null,"name":"Display","value":"","parent":{"krate":0,"index":6971}},{"kind":"Use","ref_id":{"krate":1,"index":10702},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119734,"byte_end":14119740,"line_start":80,"line_end":80,"column_start":39,"column_end":45},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":6971}},{"kind":"Use","ref_id":{"krate":1,"index":10776},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119742,"byte_end":14119757,"line_start":80,"line_end":80,"column_start":47,"column_end":62},"alias_span":null,"name":"PrefixComponent","value":"","parent":{"krate":0,"index":6971}},{"kind":"Use","ref_id":{"krate":1,"index":10863},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119759,"byte_end":14119775,"line_start":80,"line_end":80,"column_start":64,"column_end":80},"alias_span":null,"name":"StripPrefixError","value":"","parent":{"krate":0,"index":6971}},{"kind":"Use","ref_id":{"krate":1,"index":6514},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119777,"byte_end":14119791,"line_start":80,"line_end":80,"column_start":82,"column_end":96},"alias_span":null,"name":"MAIN_SEPARATOR","value":"","parent":{"krate":0,"index":6971}},{"kind":"Use","ref_id":{"krate":0,"index":7842},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119816,"byte_end":14119825,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"alias_span":null,"name":"Ancestors","value":"","parent":{"krate":0,"index":6971}},{"kind":"Use","ref_id":{"krate":0,"index":7853},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119847,"byte_end":14119857,"line_start":84,"line_end":84,"column_start":21,"column_end":31},"alias_span":null,"name":"Components","value":"","parent":{"krate":0,"index":6971}},{"kind":"Use","ref_id":{"krate":0,"index":7879},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119873,"byte_end":14119877,"line_start":85,"line_end":85,"column_start":15,"column_end":19},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6971}},{"kind":"Use","ref_id":{"krate":0,"index":7885},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119893,"byte_end":14119897,"line_start":86,"line_end":86,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":6971}},{"kind":"Use","ref_id":{"krate":0,"index":8159},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119916,"byte_end":14119923,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"alias_span":null,"name":"PathBuf","value":"","parent":{"krate":0,"index":6971}},{"kind":"Use","ref_id":{"krate":1,"index":10598},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168715,"byte_end":14168729,"line_start":59,"line_end":59,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":1,"index":10623},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168749,"byte_end":14168757,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":1,"index":10519},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168778,"byte_end":14168784,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":1,"index":10543},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168786,"byte_end":14168794,"line_start":61,"line_end":61,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":1,"index":10546},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168796,"byte_end":14168804,"line_start":61,"line_end":61,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":1,"index":10489},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168826,"byte_end":14168836,"line_start":62,"line_end":62,"column_start":20,"column_end":30},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":1,"index":10513},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168838,"byte_end":14168850,"line_start":62,"line_end":62,"column_start":32,"column_end":44},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":1,"index":10516},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168852,"byte_end":14168864,"line_start":62,"line_end":62,"column_start":46,"column_end":58},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":0,"index":7476},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168917,"byte_end":14168930,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":0,"index":7609},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168981,"byte_end":14168989,"line_start":67,"line_end":67,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":0,"index":8182},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168991,"byte_end":14169002,"line_start":67,"line_end":67,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":0,"index":8205},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14169004,"byte_end":14169013,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":0,"index":8230},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14169064,"byte_end":14169073,"line_start":69,"line_end":69,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":7384}},{"kind":"Use","ref_id":{"krate":0,"index":7609},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\mod.rs","byte_start":14177125,"byte_end":14177133,"line_start":1,"line_end":1,"column_start":20,"column_end":28},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":7540}},{"kind":"Use","ref_id":{"krate":0,"index":8182},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\mod.rs","byte_start":14177135,"byte_end":14177146,"line_start":1,"line_end":1,"column_start":30,"column_end":41},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":7540}},{"kind":"Use","ref_id":{"krate":0,"index":8205},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\mod.rs","byte_start":14177165,"byte_end":14177174,"line_start":2,"line_end":2,"column_start":17,"column_end":26},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":7540}},{"kind":"Use","ref_id":{"krate":2,"index":46402},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\pin\\mod.rs","byte_start":14223212,"byte_end":14223215,"line_start":6,"line_end":6,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":8253}},{"kind":"Use","ref_id":{"krate":1,"index":11201},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14223646,"byte_end":14223656,"line_start":12,"line_end":12,"column_start":24,"column_end":34},"alias_span":null,"name":"ExitStatus","value":"","parent":{"krate":0,"index":8257}},{"kind":"Use","ref_id":{"krate":1,"index":11188},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14223747,"byte_end":14223753,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":8257}},{"kind":"Use","ref_id":{"krate":1,"index":7032},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14223844,"byte_end":14223849,"line_start":20,"line_end":20,"column_start":24,"column_end":29},"alias_span":null,"name":"Stdio","value":"","parent":{"krate":0,"index":8257}},{"kind":"Use","ref_id":{"krate":30,"index":90},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14223940,"byte_end":14223945,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"alias_span":null,"name":"Child","value":"","parent":{"krate":0,"index":8257}},{"kind":"Use","ref_id":{"krate":30,"index":227},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14224036,"byte_end":14224047,"line_start":28,"line_end":28,"column_start":24,"column_end":35},"alias_span":null,"name":"ChildStderr","value":"","parent":{"krate":0,"index":8257}},{"kind":"Use","ref_id":{"krate":30,"index":217},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14224138,"byte_end":14224148,"line_start":32,"line_end":32,"column_start":24,"column_end":34},"alias_span":null,"name":"ChildStdin","value":"","parent":{"krate":0,"index":8257}},{"kind":"Use","ref_id":{"krate":30,"index":222},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14224239,"byte_end":14224250,"line_start":36,"line_end":36,"column_start":24,"column_end":35},"alias_span":null,"name":"ChildStdout","value":"","parent":{"krate":0,"index":8257}},{"kind":"Use","ref_id":{"krate":30,"index":135},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14224341,"byte_end":14224348,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"alias_span":null,"name":"Command","value":"","parent":{"krate":0,"index":8257}},{"kind":"Use","ref_id":{"krate":1,"index":7086},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14224398,"byte_end":14224403,"line_start":43,"line_end":43,"column_start":24,"column_end":29},"alias_span":null,"name":"abort","value":"","parent":{"krate":0,"index":8257}},{"kind":"Use","ref_id":{"krate":1,"index":7085},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14224405,"byte_end":14224409,"line_start":43,"line_end":43,"column_start":31,"column_end":35},"alias_span":null,"name":"exit","value":"","parent":{"krate":0,"index":8257}},{"kind":"Use","ref_id":{"krate":1,"index":7087},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14224411,"byte_end":14224413,"line_start":43,"line_end":43,"column_start":37,"column_end":39},"alias_span":null,"name":"id","value":"","parent":{"krate":0,"index":8257}},{"kind":"Use","ref_id":{"krate":2,"index":14},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":11511,"byte_end":11516,"line_start":337,"line_end":337,"column_start":19,"column_end":24},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":15},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":11518,"byte_end":11525,"line_start":337,"line_end":337,"column_start":26,"column_end":33},"alias_span":null,"name":"writeln","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":0,"byte_end":11529,"line_start":1,"line_end":338,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":40},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":108},{"krate":0,"index":4282},{"krate":0,"index":4284},{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4317},{"krate":0,"index":6220},{"krate":0,"index":6971},{"krate":0,"index":7384},{"krate":0,"index":7770},{"krate":0,"index":8253},{"krate":0,"index":8257},{"krate":0,"index":8292},{"krate":0,"index":8326},{"krate":0,"index":8403},{"krate":0,"index":8429},{"krate":0,"index":8456},{"krate":0,"index":8549},{"krate":0,"index":9040},{"krate":0,"index":9041},{"krate":0,"index":9044}],"decl_id":null,"docs":" # Async version of the Rust standard library","sig":null,"attributes":[{"value":"/ # Async version of the Rust standard library","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":0,"byte_end":48,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":49,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `async-std` is a foundation of portable Rust software, a set of minimal and battle-tested","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":53,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ shared abstractions for the [broader Rust ecosystem][crates.io]. It offers std types, like","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":147,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ [`Future`] and [`Stream`], library-defined [operations on language primitives](#primitives),","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":242,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ [standard macros](#macros), [I/O] and [multithreading], among [many other things][other].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":339,"byte_end":432,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":433,"byte_end":436,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `async-std` is available from [crates.io]. Once included, `async-std` can be accessed","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":437,"byte_end":526,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ in [`use`] statements through the path `async_std`, as in [`use async_std::future`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":527,"byte_end":615,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":616,"byte_end":619,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [I/O]: io/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":620,"byte_end":644,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ [multithreading]: task/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":645,"byte_end":682,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ [other]: #what-is-in-the-standard-library-documentation","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":683,"byte_end":742,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ [`use`]: https://doc.rust-lang.org/book/ch07-02-defining-modules-to-control-scope-and-privacy.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":743,"byte_end":845,"line_start":14,"line_end":14,"column_start":1,"column_end":103}},{"value":"/ [`use async_std::future`]: future/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":846,"byte_end":894,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [crates.io]: https://crates.io","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":895,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`Future`]: future/trait.Future.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":930,"byte_end":970,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ [`Stream`]: stream/trait.Stream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":971,"byte_end":1011,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1012,"byte_end":1015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # How to read this documentation","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1016,"byte_end":1052,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1053,"byte_end":1056,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If you already know the name of what you are looking for, the fastest way to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1057,"byte_end":1137,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ find it is to use the <a href=\"#\" onclick=\"focusSearchBar();\">search","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1138,"byte_end":1210,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ bar</a> at the top of the page.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1211,"byte_end":1246,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1247,"byte_end":1250,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Otherwise, you may want to jump to one of these useful sections:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1251,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1320,"byte_end":1323,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * [`async_std::*` modules](#modules)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1324,"byte_end":1364,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ * [Async macros](#macros)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1365,"byte_end":1394,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/ * [The Async Prelude](prelude/index.html)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1395,"byte_end":1440,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ * [Cargo.toml feature flags](#features)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1441,"byte_end":1484,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ * [Examples](#examples)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1485,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If this is your first time, the documentation for `async-std` is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1517,"byte_end":1585,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ written to be casually perused. Clicking on interesting things should","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1586,"byte_end":1659,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ generally lead you to interesting places. Still, there are important bits","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1660,"byte_end":1737,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ you don't want to miss, so read on for a tour of the `async-std` and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1738,"byte_end":1810,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/ its documentation!","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1811,"byte_end":1833,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1834,"byte_end":1837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Once you are familiar with the contents of `async-std` you may","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1838,"byte_end":1904,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/ begin to find the verbosity of the prose distracting. At this stage in your","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1905,"byte_end":1984,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ development you may want to press the `[-]` button near the top of the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":1985,"byte_end":2059,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ page to collapse it into a more skimmable view.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2060,"byte_end":2111,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2112,"byte_end":2115,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ While you are looking at that `[-]` button also notice the `[src]`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2116,"byte_end":2186,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ button. Rust's API documentation comes with the source code and you are","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2187,"byte_end":2262,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ encouraged to read it. The `async-std` source is generally high","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2263,"byte_end":2330,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ quality and a peek behind the curtains is often enlightening.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2331,"byte_end":2396,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2397,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Modules in this crate are organized in the same way as in `std`, except blocking","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2401,"byte_end":2485,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"/ functions have been replaced with async functions and threads have been replaced with","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2486,"byte_end":2575,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ lightweight tasks.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2576,"byte_end":2598,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2599,"byte_end":2602,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You can find more information, reading materials, and other resources here:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2603,"byte_end":2682,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2683,"byte_end":2686,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * [The async-std website](https://async.rs/)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2687,"byte_end":2735,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ * [The async-std book](https://book.async.rs)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2736,"byte_end":2785,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/ * [GitHub repository](https://github.com/async-rs/async-std)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2786,"byte_end":2850,"line_start":58,"line_end":58,"column_start":1,"column_end":65}},{"value":"/ * [List of code examples](https://github.com/async-rs/async-std/tree/master/examples)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2851,"byte_end":2940,"line_start":59,"line_end":59,"column_start":1,"column_end":90}},{"value":"/ * [Discord chat](https://discord.gg/JvZeVNe)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2941,"byte_end":2989,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2990,"byte_end":2993,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # What is in the `async-std` documentation?","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":2994,"byte_end":3041,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3042,"byte_end":3045,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ First, `async-std` is divided into a number of focused","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3046,"byte_end":3104,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/ modules, [all listed further down this page](#modules). These modules are","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3105,"byte_end":3182,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ the bedrock upon which async Rust is forged, and they have mighty names","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3183,"byte_end":3258,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ like [`async_std::os`] and [`async_std::task`]. Modules' documentation","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3259,"byte_end":3333,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ typically includes an overview of the module along with examples, and are","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3334,"byte_end":3411,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ a smart place to start familiarizing yourself with the library.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3412,"byte_end":3479,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3480,"byte_end":3483,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Second, `async-std` defines [The Async Prelude], a small collection","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3484,"byte_end":3555,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"/ of items - mostly traits - that should be imported into every module of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3556,"byte_end":3631,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ every async crate. The traits in the prelude are pervasive, making the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3632,"byte_end":3706,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ prelude documentation a good entry point to learning about the library.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3707,"byte_end":3782,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3783,"byte_end":3786,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [The Async Prelude]: prelude/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3787,"byte_end":3830,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/ [`async_std::os`]: os/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3831,"byte_end":3867,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ [`async_std::task`]: task/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3868,"byte_end":3908,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3909,"byte_end":3912,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ And finally, `async-std` exports a number of async macros, and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3913,"byte_end":3979,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ [lists them on this page](#macros).","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":3980,"byte_end":4019,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4020,"byte_end":4023,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Contributing changes to the documentation","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4024,"byte_end":4071,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4072,"byte_end":4075,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Check out `async-std`'s contribution guidelines [here](https://async.rs/contribute).","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4076,"byte_end":4164,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"/ The source for this documentation can be found on [GitHub](https://github.com/async-rs).","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4165,"byte_end":4257,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/ To contribute changes, make sure you read the guidelines first, then submit","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4258,"byte_end":4337,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ pull requests for your suggested changes.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4338,"byte_end":4383,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4384,"byte_end":4387,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Contributions are appreciated! If you see a part of the docs that can be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4388,"byte_end":4464,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ improved, submit a PR, or chat with us first on","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4465,"byte_end":4516,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/ [Discord](https://discord.gg/JvZeVNe).","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4517,"byte_end":4559,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4560,"byte_end":4563,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # A tour of `async-std`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4564,"byte_end":4591,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4592,"byte_end":4595,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The rest of this crate documentation is dedicated to pointing out notable","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4596,"byte_end":4673,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ features of `async-std`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4674,"byte_end":4702,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4703,"byte_end":4706,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Platform abstractions and I/O","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4707,"byte_end":4743,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4744,"byte_end":4747,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Besides basic data types, `async-std` is largely concerned with","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4748,"byte_end":4815,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/ abstracting over differences in common platforms, most notably Windows and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4816,"byte_end":4894,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ Unix derivatives.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4895,"byte_end":4916,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4917,"byte_end":4920,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Common types of I/O, including [files], [TCP], [UDP], are defined in the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4921,"byte_end":4997,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"/ [`io`], [`fs`], and [`net`] modules.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":4998,"byte_end":5038,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5039,"byte_end":5042,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The [`task`] module contains `async-std`'s task abstractions. [`sync`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5043,"byte_end":5117,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ contains further primitive shared memory types. [`channel`]  contains the channel types for message passing.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5118,"byte_end":5230,"line_start":109,"line_end":109,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5231,"byte_end":5234,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [files]: fs/struct.File.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5235,"byte_end":5267,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/ [TCP]: net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5268,"byte_end":5304,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [UDP]: net/struct.UdpSocket.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5305,"byte_end":5341,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"/ [`io`]: io/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5342,"byte_end":5367,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"/ [`sync`]: sync/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5368,"byte_end":5397,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ [`channel`]: channel/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5398,"byte_end":5433,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5434,"byte_end":5437,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Timeouts, intervals, and delays","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5438,"byte_end":5476,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5477,"byte_end":5480,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ `async-std` provides several methods to manipulate time:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5481,"byte_end":5541,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5542,"byte_end":5545,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ * [`task::sleep`] to wait for a duration to pass without blocking.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5546,"byte_end":5616,"line_start":122,"line_end":122,"column_start":1,"column_end":71}},{"value":"/ * [`stream::interval`] for emitting an event at a set interval.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5617,"byte_end":5684,"line_start":123,"line_end":123,"column_start":1,"column_end":68}},{"value":"/ * [`future::timeout`] to time-out futures if they don't resolve within a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5685,"byte_end":5761,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/   set interval.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5762,"byte_end":5781,"line_start":125,"line_end":125,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5782,"byte_end":5785,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: task/fn.sleep.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5786,"byte_end":5825,"line_start":127,"line_end":127,"column_start":1,"column_end":40}},{"value":"/ [`stream::interval`]: stream/fn.interval.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5826,"byte_end":5875,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/ [`future::timeout`]: future/fn.timeout.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5876,"byte_end":5923,"line_start":129,"line_end":129,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5924,"byte_end":5927,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5928,"byte_end":5942,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5943,"byte_end":5946,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ All examples require the [`\"attributes\"` feature](#features) to be enabled.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":5947,"byte_end":6026,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ This feature is not enabled by default because it significantly impacts","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6027,"byte_end":6102,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ compile times. See [`task::block_on`] for an alternative way to start","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6103,"byte_end":6176,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ executing tasks.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6177,"byte_end":6197,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6198,"byte_end":6201,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Call an async function from the main function:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6202,"byte_end":6252,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6253,"byte_end":6256,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ async fn say_hello() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6368,"byte_end":6394,"line_start":142,"line_end":142,"column_start":1,"column_end":27}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6395,"byte_end":6429,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6430,"byte_end":6435,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6436,"byte_end":6439,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6440,"byte_end":6462,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6463,"byte_end":6484,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/     say_hello().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6485,"byte_end":6511,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6512,"byte_end":6517,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6518,"byte_end":6525,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6526,"byte_end":6529,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Await two futures concurrently, and return a tuple of their output:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6530,"byte_end":6601,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6602,"byte_end":6605,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6717,"byte_end":6747,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6748,"byte_end":6751,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6752,"byte_end":6774,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6775,"byte_end":6796,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/     let a = async { 1u8 };","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6797,"byte_end":6827,"line_start":160,"line_end":160,"column_start":1,"column_end":31}},{"value":"/     let b = async { 2u8 };","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6828,"byte_end":6858,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"/     assert_eq!(a.join(b).await, (1u8, 2u8))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6859,"byte_end":6906,"line_start":162,"line_end":162,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6907,"byte_end":6912,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6913,"byte_end":6920,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6921,"byte_end":6924,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Create a UDP server that echoes back each received message to the sender:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":6925,"byte_end":7002,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7003,"byte_end":7006,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7124,"byte_end":7158,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7159,"byte_end":7162,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7163,"byte_end":7185,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7186,"byte_end":7230,"line_start":173,"line_end":173,"column_start":1,"column_end":45}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7231,"byte_end":7293,"line_start":174,"line_end":174,"column_start":1,"column_end":63}},{"value":"/     println!(\"Listening on {}\", socket.local_addr()?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7294,"byte_end":7352,"line_start":175,"line_end":175,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7353,"byte_end":7356,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7357,"byte_end":7395,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7396,"byte_end":7399,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7400,"byte_end":7414,"line_start":179,"line_end":179,"column_start":1,"column_end":15}},{"value":"/         let (recv, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7415,"byte_end":7480,"line_start":180,"line_end":180,"column_start":1,"column_end":66}},{"value":"/         let sent = socket.send_to(&buf[..recv], &peer).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7481,"byte_end":7547,"line_start":181,"line_end":181,"column_start":1,"column_end":67}},{"value":"/         println!(\"Sent {} out of {} bytes to {}\", sent, recv, peer);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7548,"byte_end":7620,"line_start":182,"line_end":182,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7621,"byte_end":7630,"line_start":183,"line_end":183,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7631,"byte_end":7636,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7637,"byte_end":7644,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ [`task::block_on`]: task/fn.block_on.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7645,"byte_end":7690,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7691,"byte_end":7694,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7695,"byte_end":7709,"line_start":188,"line_end":188,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7710,"byte_end":7713,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7714,"byte_end":7735,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7736,"byte_end":7745,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7746,"byte_end":7788,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7789,"byte_end":7887,"line_start":193,"line_end":193,"column_start":1,"column_end":99}},{"value":"/ ><code>unstable</code></span>","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7888,"byte_end":7921,"line_start":194,"line_end":194,"column_start":1,"column_end":34}},{"value":"/ are available only when the `unstable` Cargo feature is enabled:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7922,"byte_end":7990,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7991,"byte_end":7994,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":7995,"byte_end":8006,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8007,"byte_end":8035,"line_start":198,"line_end":198,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8036,"byte_end":8057,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"/ features = [\"unstable\"]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8058,"byte_end":8085,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8086,"byte_end":8093,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8094,"byte_end":8097,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8098,"byte_end":8119,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8120,"byte_end":8129,"line_start":204,"line_end":204,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8130,"byte_end":8172,"line_start":205,"line_end":205,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8173,"byte_end":8271,"line_start":206,"line_end":206,"column_start":1,"column_end":99}},{"value":"/ ><code>attributes</code></span>","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8272,"byte_end":8307,"line_start":207,"line_end":207,"column_start":1,"column_end":36}},{"value":"/ are available only when the `attributes` Cargo feature is enabled:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8308,"byte_end":8378,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8379,"byte_end":8382,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8383,"byte_end":8394,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8395,"byte_end":8423,"line_start":211,"line_end":211,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8424,"byte_end":8445,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/ features = [\"attributes\"]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8446,"byte_end":8475,"line_start":213,"line_end":213,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8476,"byte_end":8483,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8484,"byte_end":8487,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 1.0 runtime is also simultaneously possible","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8488,"byte_end":8566,"line_start":216,"line_end":216,"column_start":1,"column_end":79}},{"value":"/ using the `tokio1` Cargo feature:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8567,"byte_end":8604,"line_start":217,"line_end":217,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8605,"byte_end":8608,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8609,"byte_end":8620,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8621,"byte_end":8649,"line_start":220,"line_end":220,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8650,"byte_end":8671,"line_start":221,"line_end":221,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio1\"]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8672,"byte_end":8697,"line_start":222,"line_end":222,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8698,"byte_end":8705,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8706,"byte_end":8709,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.2 runtime is possible using the `tokio02`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8710,"byte_end":8788,"line_start":225,"line_end":225,"column_start":1,"column_end":79}},{"value":"/ Cargo feature:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8789,"byte_end":8807,"line_start":226,"line_end":226,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8808,"byte_end":8811,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8812,"byte_end":8823,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8824,"byte_end":8852,"line_start":229,"line_end":229,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8853,"byte_end":8874,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio02\"]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8875,"byte_end":8901,"line_start":231,"line_end":231,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8902,"byte_end":8909,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8910,"byte_end":8913,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.3 runtime is also simultaneously possible","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8914,"byte_end":8992,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ using the `tokio03` Cargo feature:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":8993,"byte_end":9031,"line_start":235,"line_end":235,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9032,"byte_end":9035,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9036,"byte_end":9047,"line_start":237,"line_end":237,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9048,"byte_end":9076,"line_start":238,"line_end":238,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9077,"byte_end":9098,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio03\"]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9099,"byte_end":9125,"line_start":240,"line_end":240,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9126,"byte_end":9133,"line_start":241,"line_end":241,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9134,"byte_end":9137,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ Additionally it's possible to only use the core traits and combinators by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9138,"byte_end":9215,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/ only enabling the `std` Cargo feature:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9216,"byte_end":9258,"line_start":244,"line_end":244,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9259,"byte_end":9262,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9263,"byte_end":9274,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9275,"byte_end":9303,"line_start":247,"line_end":247,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9304,"byte_end":9325,"line_start":248,"line_end":248,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9326,"byte_end":9354,"line_start":249,"line_end":249,"column_start":1,"column_end":29}},{"value":"/ features = [\"std\"]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9355,"byte_end":9377,"line_start":250,"line_end":250,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9378,"byte_end":9385,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9386,"byte_end":9389,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ And to use async-std on `no_std` targets that only support `alloc` only","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9390,"byte_end":9465,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/ enable the `alloc` Cargo feature:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9466,"byte_end":9503,"line_start":254,"line_end":254,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9504,"byte_end":9507,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9508,"byte_end":9519,"line_start":256,"line_end":256,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9520,"byte_end":9548,"line_start":257,"line_end":257,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9549,"byte_end":9570,"line_start":258,"line_end":258,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9571,"byte_end":9599,"line_start":259,"line_end":259,"column_start":1,"column_end":29}},{"value":"/ features = [\"alloc\"]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9600,"byte_end":9624,"line_start":260,"line_end":260,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9625,"byte_end":9632,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9633,"byte_end":9636,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ # Runtime configuration","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9637,"byte_end":9664,"line_start":263,"line_end":263,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9665,"byte_end":9668,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Several environment variables are available to tune the async-std","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9669,"byte_end":9738,"line_start":265,"line_end":265,"column_start":1,"column_end":70}},{"value":"/ runtime:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9739,"byte_end":9751,"line_start":266,"line_end":266,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9752,"byte_end":9755,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ * `ASYNC_STD_THREAD_COUNT`: The number of threads that the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9756,"byte_end":9818,"line_start":268,"line_end":268,"column_start":1,"column_end":63}},{"value":"/ async-std runtime will start. By default, this is one per logical","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9819,"byte_end":9888,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ cpu as reported by the [num_cpus](num_cpus) crate, which may be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9889,"byte_end":9956,"line_start":270,"line_end":270,"column_start":1,"column_end":68}},{"value":"/ different than the number of physical cpus. Async-std _will panic_","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":9957,"byte_end":10027,"line_start":271,"line_end":271,"column_start":1,"column_end":71}},{"value":"/ if this is set to any value other than a positive integer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":10028,"byte_end":10090,"line_start":272,"line_end":272,"column_start":1,"column_end":63}},{"value":"/ * `ASYNC_STD_THREAD_NAME`: The name that async-std's runtime","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":10091,"byte_end":10155,"line_start":273,"line_end":273,"column_start":1,"column_end":65}},{"value":"/ threads report to the operating system. The default value is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":10156,"byte_end":10220,"line_start":274,"line_end":274,"column_start":1,"column_end":65}},{"value":"/ `\"async-std/runtime\"`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":10221,"byte_end":10247,"line_start":275,"line_end":275,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":10248,"byte_end":10251,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":10345,"byte_end":10416,"line_start":280,"line_end":280,"column_start":1,"column_end":72}},{"value":"allow(clippy :: mutex_atomic, clippy :: module_inception)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":10417,"byte_end":10474,"line_start":281,"line_end":281,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1998},{"krate":0,"index":2001},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2008},{"krate":0,"index":2011},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2017},{"krate":0,"index":2020},{"krate":0,"index":2023},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2036},{"krate":0,"index":2039},{"krate":0,"index":2049},{"krate":0,"index":2107},{"krate":0,"index":2118},{"krate":0,"index":2151},{"krate":0,"index":2164},{"krate":0,"index":2178},{"krate":0,"index":2189},{"krate":0,"index":2206},{"krate":0,"index":2222},{"krate":0,"index":2271},{"krate":0,"index":2310},{"krate":0,"index":2390},{"krate":0,"index":2393}],"decl_id":null,"docs":" Types and traits for working with asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16620,"byte_end":16645,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Types and traits for working with asynchronous tasks.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13471895,"byte_end":13471952,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13471953,"byte_end":13471956,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is similar to [`std::thread`], except it uses asynchronous tasks in place of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13471957,"byte_end":13472049,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ threads.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472050,"byte_end":13472062,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472063,"byte_end":13472066,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472067,"byte_end":13472124,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472125,"byte_end":13472128,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## The task model","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472129,"byte_end":13472150,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472151,"byte_end":13472154,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An executing asynchronous Rust program consists of a collection of native OS threads, on top of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472155,"byte_end":13472254,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ which multiple stackless coroutines are multiplexed. We refer to these as \"tasks\".  Tasks can","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472255,"byte_end":13472352,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ be named, and provide some built-in support for synchronization.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472353,"byte_end":13472421,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472422,"byte_end":13472425,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Communication between tasks can be done through channels, Rust's message-passing types, along","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472426,"byte_end":13472523,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ with [other forms of tasks synchronization](../sync/index.html) and shared-memory data","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472524,"byte_end":13472614,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/ structures. In particular, types that are guaranteed to be threadsafe are easily shared between","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472615,"byte_end":13472714,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ tasks using the atomically-reference-counted container, [`Arc`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472715,"byte_end":13472783,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472784,"byte_end":13472787,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Fatal logic errors in Rust cause *thread panic*, during which a thread will unwind the stack,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472788,"byte_end":13472885,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ running destructors and freeing owned resources. If a panic occurs inside a task, there is no","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472886,"byte_end":13472983,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ meaningful way of recovering, so the panic will propagate through any thread boundaries all the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13472984,"byte_end":13473083,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ way to the root task. This is also known as a \"panic = abort\" model.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473084,"byte_end":13473156,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473157,"byte_end":13473160,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Spawning a task","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473161,"byte_end":13473183,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473184,"byte_end":13473187,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A new task can be spawned using the [`task::spawn`][`spawn`] function:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473188,"byte_end":13473262,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473263,"byte_end":13473266,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473267,"byte_end":13473280,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473281,"byte_end":13473305,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473306,"byte_end":13473309,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473310,"byte_end":13473333,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/     // some work here","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473334,"byte_end":13473359,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473360,"byte_end":13473367,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473368,"byte_end":13473375,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473376,"byte_end":13473379,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ In this example, the spawned task is \"detached\" from the current task. This means that it can","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473380,"byte_end":13473477,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"/ outlive its parent (the task that spawned it), unless this parent is the root task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473478,"byte_end":13473565,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473566,"byte_end":13473569,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The root task can also wait on the completion of the child task; a call to [`spawn`] produces a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473570,"byte_end":13473669,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ [`JoinHandle`], which implements `Future` and can be `await`ed:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473670,"byte_end":13473737,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473738,"byte_end":13473741,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473742,"byte_end":13473749,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473750,"byte_end":13473774,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473775,"byte_end":13473778,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473779,"byte_end":13473818,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473819,"byte_end":13473824,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ let child = task::spawn(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473825,"byte_end":13473860,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/     // some work here","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473861,"byte_end":13473886,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473887,"byte_end":13473894,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ // some work here","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473895,"byte_end":13473916,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ let res = child.await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473917,"byte_end":13473943,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473944,"byte_end":13473949,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473950,"byte_end":13473958,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473959,"byte_end":13473966,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473967,"byte_end":13473970,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `await` operator returns the final value produced by the child task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13473971,"byte_end":13474047,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474048,"byte_end":13474051,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Configuring tasks","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474052,"byte_end":13474076,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474077,"byte_end":13474080,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ A new task can be configured before it is spawned via the [`Builder`] type,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474081,"byte_end":13474160,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ which currently allows you to set the name for the child task:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474161,"byte_end":13474227,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474228,"byte_end":13474231,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474232,"byte_end":13474239,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474240,"byte_end":13474272,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474273,"byte_end":13474297,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474298,"byte_end":13474301,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474302,"byte_end":13474341,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474342,"byte_end":13474347,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ task::Builder::new().name(\"child1\".to_string()).spawn(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474348,"byte_end":13474413,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474414,"byte_end":13474448,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474449,"byte_end":13474456,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474457,"byte_end":13474462,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474463,"byte_end":13474471,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474472,"byte_end":13474479,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474480,"byte_end":13474483,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## The `Task` type","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474484,"byte_end":13474506,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474507,"byte_end":13474510,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Tasks are represented via the [`Task`] type, which you can get in one of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474511,"byte_end":13474587,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ two ways:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474588,"byte_end":13474601,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474602,"byte_end":13474605,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ * By spawning a new task, e.g., using the [`task::spawn`][`spawn`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474606,"byte_end":13474676,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/   function, and calling [`task`][`JoinHandle::task`] on the [`JoinHandle`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474677,"byte_end":13474756,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ * By requesting the current task, using the [`task::current`] function.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474757,"byte_end":13474832,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474833,"byte_end":13474836,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ## Task-local storage","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474837,"byte_end":13474862,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474863,"byte_end":13474866,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This module also provides an implementation of task-local storage for Rust","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474867,"byte_end":13474945,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ programs. Task-local storage is a method of storing data into a global","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13474946,"byte_end":13475020,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ variable that each task in the program will have its own copy of.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475021,"byte_end":13475090,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ Tasks do not share this data, so accesses do not need to be synchronized.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475091,"byte_end":13475168,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475169,"byte_end":13475172,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ A task-local key owns the value it contains and will destroy the value when the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475173,"byte_end":13475256,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"/ task exits. It is created with the [`task_local!`] macro and can contain any","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475257,"byte_end":13475337,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ value that is `'static` (no borrowed pointers). It provides an accessor function,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475338,"byte_end":13475423,"line_start":94,"line_end":94,"column_start":1,"column_end":86}},{"value":"/ [`with`], that yields a shared reference to the value to the specified","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475424,"byte_end":13475498,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ closure. Task-local keys allow only shared access to values, as there would be no","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475499,"byte_end":13475584,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/ way to guarantee uniqueness if mutable borrows were allowed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475585,"byte_end":13475649,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475650,"byte_end":13475653,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Naming tasks","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475654,"byte_end":13475673,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475674,"byte_end":13475677,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Tasks are able to have associated names for identification purposes. By default, spawned","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475678,"byte_end":13475770,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/ tasks are unnamed. To specify a name for a task, build the task with [`Builder`] and pass","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475771,"byte_end":13475864,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"/ the desired task name to [`Builder::name`]. To retrieve the task name from within the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475865,"byte_end":13475954,"line_start":103,"line_end":103,"column_start":1,"column_end":90}},{"value":"/ task, use [`Task::name`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475955,"byte_end":13475984,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475985,"byte_end":13475988,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: ../sync/struct.Arc.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13475989,"byte_end":13476025,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476026,"byte_end":13476054,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476055,"byte_end":13476097,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`JoinHandle::task`]: struct.JoinHandle.html#method.task","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476098,"byte_end":13476158,"line_start":109,"line_end":109,"column_start":1,"column_end":61}},{"value":"/ [`join`]: struct.JoinHandle.html#method.join","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476159,"byte_end":13476207,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"/ [`panic!`]: https://doc.rust-lang.org/std/macro.panic.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476208,"byte_end":13476270,"line_start":111,"line_end":111,"column_start":1,"column_end":63}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476271,"byte_end":13476307,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476308,"byte_end":13476362,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"/ [`task::current`]: fn.current.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476363,"byte_end":13476401,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/ [`Task`]: struct.Task.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476402,"byte_end":13476432,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ [`Task::name`]: struct.Task.html#method.name","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476433,"byte_end":13476481,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/ [`task_local!`]: ../macro.task_local.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476482,"byte_end":13476527,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"/ [`with`]: struct.LocalKey.html#method.with","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\mod.rs","byte_start":13476528,"byte_end":13476574,"line_start":118,"line_end":118,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617503,"byte_end":13617512,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cooperatively gives up a timeslice to the task scheduler.","sig":null,"attributes":[{"value":"/ Cooperatively gives up a timeslice to the task scheduler.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13616900,"byte_end":13616961,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13616962,"byte_end":13616965,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calling this function will move the currently executing future to the back","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13616966,"byte_end":13617044,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ of the execution queue, making room for other futures to execute. This is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617045,"byte_end":13617122,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ especially useful after running CPU-intensive operations inside a future.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617123,"byte_end":13617200,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617201,"byte_end":13617204,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also [`task::spawn_blocking`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617205,"byte_end":13617243,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617244,"byte_end":13617247,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617248,"byte_end":13617300,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617301,"byte_end":13617304,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617305,"byte_end":13617319,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617320,"byte_end":13617323,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617324,"byte_end":13617340,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617341,"byte_end":13617344,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617345,"byte_end":13617352,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617353,"byte_end":13617392,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617393,"byte_end":13617398,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617399,"byte_end":13617423,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617424,"byte_end":13617427,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ task::yield_now().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617428,"byte_end":13617456,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617457,"byte_end":13617462,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617463,"byte_end":13617471,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617472,"byte_end":13617479,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617480,"byte_end":13617489,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618814,"byte_end":13618822,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"block_on","qualname":"::task::block_on::block_on","value":"pub fn block_on<F, T>(F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task and blocks the current thread on its result.","sig":null,"attributes":[{"value":"/ Spawns a task and blocks the current thread on its result.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618130,"byte_end":13618192,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618193,"byte_end":13618196,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Calling this function is similar to [spawning] a thread and immediately [joining] it, except an","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618197,"byte_end":13618296,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ asynchronous task will be spawned.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618297,"byte_end":13618335,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618336,"byte_end":13618339,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::spawn_blocking`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618340,"byte_end":13618379,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618380,"byte_end":13618383,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618384,"byte_end":13618436,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618437,"byte_end":13618440,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [spawning]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618441,"byte_end":13618507,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/ [joining]: https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618508,"byte_end":13618594,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618595,"byte_end":13618598,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618599,"byte_end":13618613,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618614,"byte_end":13618617,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618618,"byte_end":13618631,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618632,"byte_end":13618656,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618657,"byte_end":13618660,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618661,"byte_end":13618676,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/     task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618677,"byte_end":13618707,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/         println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618708,"byte_end":13618746,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/     })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618747,"byte_end":13618757,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618758,"byte_end":13618763,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618764,"byte_end":13618771,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\block_on.rs","byte_start":13618772,"byte_end":13618806,"line_start":28,"line_end":28,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2313},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13619438,"byte_end":13619445,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Builder","qualname":"::task::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":2314}],"decl_id":null,"docs":" Task builder that configures the settings of a new task.\n","sig":null,"attributes":[{"value":"/ Task builder that configures the settings of a new task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13619340,"byte_end":13619400,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13619559,"byte_end":13619562,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder.\n","sig":null,"attributes":[{"value":"/ Creates a new builder.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13619507,"byte_end":13619533,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13619538,"byte_end":13619547,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13619682,"byte_end":13619686,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"pub fn name(Self, String) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configures the name of the task.\n","sig":null,"attributes":[{"value":"/ Configures the name of the task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13619620,"byte_end":13619656,"line_start":24,"line_end":24,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13619661,"byte_end":13619670,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13620305,"byte_end":13620310,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Builder>::spawn","value":"pub fn spawn<F, T>(Self, F) -> io::Result<JoinHandle<T>> where\nF: Future<Output = T> + Send + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13620207,"byte_end":13620254,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13620259,"byte_end":13620293,"line_start":49,"line_end":49,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13620972,"byte_end":13620977,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"local","qualname":"<Builder>::local","value":"pub fn local<F, T>(Self, F) -> io::Result<JoinHandle<T>> where\nF: Future<Output = T> + 'static, T: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task locally with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task locally with the configured settings.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13620839,"byte_end":13620894,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"cfg(all(not(target_os = \"unknown\"), feature = \"unstable\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13620899,"byte_end":13620960,"line_start":69,"line_end":69,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13623302,"byte_end":13623310,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"blocking","qualname":"<Builder>::blocking","value":"pub fn blocking<F, T>(Self, F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings, blocking on its execution.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings, blocking on its execution.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13623177,"byte_end":13623251,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13623256,"byte_end":13623290,"line_start":140,"line_end":140,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625755,"byte_end":13625762,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"current","qualname":"::task::current::current","value":"pub fn current() -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625225,"byte_end":13625266,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625267,"byte_end":13625270,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625271,"byte_end":13625283,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625284,"byte_end":13625287,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will panic if not called within the context of a task created by [`block_on`],","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625288,"byte_end":13625384,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ [`spawn`], or [`Builder::spawn`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625385,"byte_end":13625422,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625423,"byte_end":13625426,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625427,"byte_end":13625461,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625462,"byte_end":13625490,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625491,"byte_end":13625547,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625548,"byte_end":13625551,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625552,"byte_end":13625566,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625567,"byte_end":13625570,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625571,"byte_end":13625578,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625579,"byte_end":13625618,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625619,"byte_end":13625624,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625625,"byte_end":13625649,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625650,"byte_end":13625653,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ println!(\"The name of this task is {:?}\", task::current().name());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625654,"byte_end":13625724,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625725,"byte_end":13625730,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625731,"byte_end":13625739,"line_start":23,"line_end":23,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625740,"byte_end":13625747,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626391,"byte_end":13626402,"line_start":46,"line_end":46,"column_start":8,"column_end":19},"name":"try_current","qualname":"::task::current::try_current","value":"pub fn try_current() -> Option<Task>","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task if called within the context of a task created by [`block_on`],\n [`spawn`], or [`Builder::spawn`], otherwise returns `None`.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task if called within the context of a task created by [`block_on`],","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625861,"byte_end":13625965,"line_start":29,"line_end":29,"column_start":1,"column_end":105}},{"value":"/ [`spawn`], or [`Builder::spawn`], otherwise returns `None`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13625966,"byte_end":13626029,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626030,"byte_end":13626033,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626034,"byte_end":13626068,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626069,"byte_end":13626097,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626098,"byte_end":13626154,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626155,"byte_end":13626158,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626159,"byte_end":13626173,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626174,"byte_end":13626177,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626178,"byte_end":13626185,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626186,"byte_end":13626210,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626211,"byte_end":13626214,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ match task::try_current() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626215,"byte_end":13626246,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/     Some(t) => println!(\"The name of this task is {:?}\", t.name()),","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626247,"byte_end":13626318,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/     None    => println!(\"Not inside a task!\"),","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626319,"byte_end":13626369,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626370,"byte_end":13626375,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\current.rs","byte_start":13626376,"byte_end":13626383,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2327},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13626859,"byte_end":13626869,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"JoinHandle","qualname":"::task::join_handle::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":2330}],"decl_id":null,"docs":" A handle that awaits the result of a task.","sig":null,"attributes":[{"value":"/ A handle that awaits the result of a task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13626568,"byte_end":13626614,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13626615,"byte_end":13626618,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`JoinHandle`] will detach the task, meaning that there is no longer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13626619,"byte_end":13626702,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ a handle to the task and no way to `join` on it.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13626703,"byte_end":13626755,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13626756,"byte_end":13626759,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created when a task is [spawned].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13626760,"byte_end":13626797,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13626798,"byte_end":13626801,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [spawned]: fn.spawn.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13626802,"byte_end":13626830,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627678,"byte_end":13627682,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"task","qualname":"<JoinHandle<T>>::task","value":"pub fn task(&Self) -> &Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying task.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627341,"byte_end":13627385,"line_start":34,"line_end":34,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627390,"byte_end":13627393,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627398,"byte_end":13627412,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627417,"byte_end":13627420,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627425,"byte_end":13627432,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627437,"byte_end":13627476,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627481,"byte_end":13627486,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627491,"byte_end":13627515,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627520,"byte_end":13627523,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627528,"byte_end":13627564,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/     1 + 2","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627569,"byte_end":13627582,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627587,"byte_end":13627594,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ println!(\"id = {}\", handle.task().id());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627599,"byte_end":13627643,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627648,"byte_end":13627653,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627658,"byte_end":13627666,"line_start":48,"line_end":48,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627809,"byte_end":13627815,"line_start":55,"line_end":55,"column_start":18,"column_end":24},"name":"cancel","qualname":"<JoinHandle<T>>::cancel","value":"pub async fn cancel(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cancel this task.\n","sig":null,"attributes":[{"value":"/ Cancel this task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627731,"byte_end":13627752,"line_start":53,"line_end":53,"column_start":5,"column_end":26}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627757,"byte_end":13627791,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2161},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629650,"byte_end":13629655,"line_start":31,"line_end":31,"column_start":14,"column_end":19},"name":"sleep","qualname":"::task::sleep::sleep","value":"pub async fn sleep(Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sleeps for the specified amount of time.","sig":null,"attributes":[{"value":"/ Sleeps for the specified amount of time.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629036,"byte_end":13629080,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629081,"byte_end":13629084,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function might sleep for slightly longer than the specified duration but never less.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629085,"byte_end":13629178,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629179,"byte_end":13629182,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::thread::sleep`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629183,"byte_end":13629247,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629248,"byte_end":13629251,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::thread::sleep`]: https://doc.rust-lang.org/std/thread/fn.sleep.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629252,"byte_end":13629330,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629331,"byte_end":13629334,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also: [`stream::interval`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629335,"byte_end":13629370,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629371,"byte_end":13629374,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`stream::interval`]: ../stream/fn.interval.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629375,"byte_end":13629427,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629428,"byte_end":13629431,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629432,"byte_end":13629446,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629447,"byte_end":13629450,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629451,"byte_end":13629458,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629459,"byte_end":13629498,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629499,"byte_end":13629504,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629505,"byte_end":13629533,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629534,"byte_end":13629537,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629538,"byte_end":13629562,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629563,"byte_end":13629566,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629567,"byte_end":13629613,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629614,"byte_end":13629619,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629620,"byte_end":13629628,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\sleep.rs","byte_start":13629629,"byte_end":13629636,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630240,"byte_end":13630245,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> + Send +\n'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task.","sig":null,"attributes":[{"value":"/ Spawns a task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13629814,"byte_end":13629832,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13629833,"byte_end":13629836,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is similar to [`std::thread::spawn`], except it spawns an asynchronous task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13629837,"byte_end":13629931,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13629932,"byte_end":13629935,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13629936,"byte_end":13630007,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630008,"byte_end":13630011,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630012,"byte_end":13630026,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630027,"byte_end":13630030,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630031,"byte_end":13630038,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630039,"byte_end":13630078,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630079,"byte_end":13630084,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630085,"byte_end":13630109,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630110,"byte_end":13630113,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630114,"byte_end":13630150,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     1 + 2","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630151,"byte_end":13630164,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630165,"byte_end":13630172,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630173,"byte_end":13630176,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630177,"byte_end":13630209,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630210,"byte_end":13630215,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630216,"byte_end":13630224,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn.rs","byte_start":13630225,"byte_end":13630232,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2186},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13631170,"byte_end":13631184,"line_start":33,"line_end":33,"column_start":8,"column_end":22},"name":"spawn_blocking","qualname":"::task::spawn_blocking::spawn_blocking","value":"pub fn spawn_blocking<F, T>(F) -> JoinHandle<T> where F: FnOnce() -> T +\nSend + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a blocking task.","sig":null,"attributes":[{"value":"/ Spawns a blocking task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630457,"byte_end":13630484,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630485,"byte_end":13630488,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The task will be spawned onto a thread pool specifically dedicated to blocking tasks. This","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630489,"byte_end":13630583,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ is useful to prevent long-running synchronous operations from blocking the main futures","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630584,"byte_end":13630675,"line_start":6,"line_end":6,"column_start":1,"column_end":92}},{"value":"/ executor.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630676,"byte_end":13630689,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630690,"byte_end":13630693,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::block_on`], [`task::spawn`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630694,"byte_end":13630744,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630745,"byte_end":13630748,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`task::block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630749,"byte_end":13630789,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ [`task::spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630790,"byte_end":13630824,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630825,"byte_end":13630828,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630829,"byte_end":13630843,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630844,"byte_end":13630847,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630848,"byte_end":13630864,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630865,"byte_end":13630868,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630869,"byte_end":13630876,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"unstable\")]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630877,"byte_end":13630911,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630912,"byte_end":13630951,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630952,"byte_end":13630957,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630958,"byte_end":13630982,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630983,"byte_end":13630986,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13630987,"byte_end":13631016,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/     println!(\"long-running task here\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13631017,"byte_end":13631060,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13631061,"byte_end":13631067,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13631068,"byte_end":13631079,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13631080,"byte_end":13631085,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13631086,"byte_end":13631094,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13631095,"byte_end":13631102,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_blocking.rs","byte_start":13631153,"byte_end":13631162,"line_start":32,"line_end":32,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":2334},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13631458,"byte_end":13631462,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":2335},{"krate":0,"index":2336}],"decl_id":null,"docs":" A handle to a task.\n","sig":null,"attributes":[{"value":"/ A handle to a task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13631406,"byte_end":13631429,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13631843,"byte_end":13631845,"line_start":28,"line_end":28,"column_start":12,"column_end":14},"name":"id","qualname":"<Task>::id","value":"pub fn id(&Self) -> TaskId","parent":null,"children":[],"decl_id":null,"docs":" Gets the task's unique identifier.\n","sig":null,"attributes":[{"value":"/ Gets the task's unique identifier.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13631779,"byte_end":13631817,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13631822,"byte_end":13631831,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13632082,"byte_end":13632086,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"name","qualname":"<Task>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this task.","sig":null,"attributes":[{"value":"/ Returns the name of this task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13631892,"byte_end":13631926,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13631931,"byte_end":13631934,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The name is configured by [`Builder::name`] before spawning.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13631939,"byte_end":13632003,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13632008,"byte_end":13632011,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13632016,"byte_end":13632070,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632714,"byte_end":13632720,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"TaskId","qualname":"::task::task_id::TaskId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a task.","sig":null,"attributes":[{"value":"/ A unique identifier for a task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632461,"byte_end":13632496,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632497,"byte_end":13632500,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632501,"byte_end":13632515,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632516,"byte_end":13632519,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632520,"byte_end":13632527,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632528,"byte_end":13632552,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632553,"byte_end":13632556,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632557,"byte_end":13632583,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/     println!(\"id = {:?}\", task::current().id());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632584,"byte_end":13632636,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632637,"byte_end":13632643,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632644,"byte_end":13632651,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2357},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633610,"byte_end":13633618,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { __init, __key }","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360}],"decl_id":null,"docs":" The key for accessing a task-local value.","sig":null,"attributes":[{"value":"/ The key for accessing a task-local value.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633424,"byte_end":13633469,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633470,"byte_end":13633473,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Every task-local value is lazily initialized on first access and destroyed when the task","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633474,"byte_end":13633566,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ completes.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633567,"byte_end":13633581,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2359},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633667,"byte_end":13633673,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"__init","qualname":"::task::task_local::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":2357},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2360},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633714,"byte_end":13633719,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"__key","qualname":"::task::task_local::LocalKey::__key","value":"std::sync::atomic::AtomicU32","parent":{"krate":0,"index":2357},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634741,"byte_end":13634745,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Gets a reference to the task-local value with this key.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633777,"byte_end":13633836,"line_start":22,"line_end":22,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633841,"byte_end":13633844,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633849,"byte_end":13633917,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633922,"byte_end":13633925,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633930,"byte_end":13634022,"line_start":26,"line_end":26,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634027,"byte_end":13634030,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634035,"byte_end":13634047,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634052,"byte_end":13634055,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a task created by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634060,"byte_end":13634142,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634147,"byte_end":13634198,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634203,"byte_end":13634206,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634211,"byte_end":13634245,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634250,"byte_end":13634278,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634283,"byte_end":13634339,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634344,"byte_end":13634347,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634352,"byte_end":13634366,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634371,"byte_end":13634374,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634379,"byte_end":13634386,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634391,"byte_end":13634396,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634401,"byte_end":13634425,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634430,"byte_end":13634433,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634438,"byte_end":13634462,"line_start":43,"line_end":43,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634467,"byte_end":13634497,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634502,"byte_end":13634505,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634510,"byte_end":13634527,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/     static NUMBER: Cell<u32> = Cell::new(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634532,"byte_end":13634580,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634585,"byte_end":13634590,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634595,"byte_end":13634598,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634603,"byte_end":13634629,"line_start":50,"line_end":50,"column_start":5,"column_end":31}},{"value":"/     let v = NUMBER.with(|c| c.get());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634634,"byte_end":13634675,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, 5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634680,"byte_end":13634705,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634710,"byte_end":13634717,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634722,"byte_end":13634729,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13636031,"byte_end":13636039,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Attempts to get a reference to the task-local value with this key.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13634935,"byte_end":13635005,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635010,"byte_end":13635013,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635018,"byte_end":13635086,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635091,"byte_end":13635094,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635099,"byte_end":13635191,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635196,"byte_end":13635199,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if not called within the context of a task created by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635204,"byte_end":13635292,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635297,"byte_end":13635348,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635353,"byte_end":13635356,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635361,"byte_end":13635395,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635400,"byte_end":13635428,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635433,"byte_end":13635489,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635494,"byte_end":13635497,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635502,"byte_end":13635516,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635521,"byte_end":13635524,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635529,"byte_end":13635536,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635541,"byte_end":13635546,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635551,"byte_end":13635575,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635580,"byte_end":13635583,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635588,"byte_end":13635612,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635617,"byte_end":13635647,"line_start":83,"line_end":83,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635652,"byte_end":13635655,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635660,"byte_end":13635677,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/     static VAL: Cell<u32> = Cell::new(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635682,"byte_end":13635727,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635732,"byte_end":13635737,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635742,"byte_end":13635745,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635750,"byte_end":13635776,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/     let v = VAL.try_with(|c| c.get());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635781,"byte_end":13635823,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(v, Ok(5));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635828,"byte_end":13635857,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635862,"byte_end":13635869,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635874,"byte_end":13635877,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // Returns an error because not called within the context of a task.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635882,"byte_end":13635954,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert!(VAL.try_with(|c| c.get()).is_err());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13635959,"byte_end":13636007,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13636012,"byte_end":13636019,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2364},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13637592,"byte_end":13637603,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":2365}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`].","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13637425,"byte_end":13637473,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13637474,"byte_end":13637477,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`LocalKey::try_with`]: struct.LocalKey.html#method.try_with","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13637478,"byte_end":13637542,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2404},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770908,"byte_end":13770919,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn_local::spawn_local","value":"pub fn spawn_local<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> +\n'static, T: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task onto the thread-local executor.","sig":null,"attributes":[{"value":"/ Spawns a task onto the thread-local executor.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770525,"byte_end":13770574,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770575,"byte_end":13770578,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770579,"byte_end":13770593,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770594,"byte_end":13770597,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770598,"byte_end":13770605,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"unstable\")]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770606,"byte_end":13770640,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770641,"byte_end":13770680,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770681,"byte_end":13770686,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770687,"byte_end":13770711,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770712,"byte_end":13770715,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn_local(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770716,"byte_end":13770758,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/     1 + 2","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770759,"byte_end":13770772,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770773,"byte_end":13770780,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770781,"byte_end":13770784,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770785,"byte_end":13770817,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770818,"byte_end":13770823,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770824,"byte_end":13770832,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770833,"byte_end":13770840,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\spawn_local.rs","byte_start":13770891,"byte_end":13770900,"line_start":24,"line_end":24,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":2407},{"krate":0,"index":2410},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2683},{"krate":0,"index":2712},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2750}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16620,"byte_end":16645,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Asynchronous values.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13477921,"byte_end":13477945,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13477946,"byte_end":13477949,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Base Futures Concurrency","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13477950,"byte_end":13477981,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13477982,"byte_end":13477985,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Often it's desireable to await multiple futures as if it was a single","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13477986,"byte_end":13478059,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ future. The `join` family of operations converts multiple futures into a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478060,"byte_end":13478136,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ single future that returns all of their outputs. The `race` family of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478137,"byte_end":13478210,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ operations converts multiple future into a single future that returns the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478211,"byte_end":13478288,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ first output.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478289,"byte_end":13478306,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478307,"byte_end":13478310,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For operating on futures the following functions can be used:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478311,"byte_end":13478376,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478377,"byte_end":13478380,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ | Name               | Return signature | When does it return?     |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478381,"byte_end":13478453,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ | ---                | ---              | ---                      |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478454,"byte_end":13478526,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ | [`Future::join`]   | `(T1, T2)`       | Wait for all to complete","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478527,"byte_end":13478597,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ | [`Future::race`]   | `T`              | Return on first value","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478598,"byte_end":13478665,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478666,"byte_end":13478669,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Fallible Futures Concurrency","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478670,"byte_end":13478705,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478706,"byte_end":13478709,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For operating on futures that return `Result` additional `try_` variants of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478710,"byte_end":13478789,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ the functions mentioned before can be used. These functions are aware of `Result`,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478790,"byte_end":13478876,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/ and will behave slightly differently from their base variants.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478877,"byte_end":13478943,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478944,"byte_end":13478947,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_join`, if any of the futures returns `Err` all","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13478948,"byte_end":13479018,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ futures are dropped and an error is returned. This is referred to as","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479019,"byte_end":13479091,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ \"short-circuiting\".","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479092,"byte_end":13479115,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479116,"byte_end":13479119,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_race`, instead of returning the first future that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479120,"byte_end":13479193,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ completes it returns the first future that _successfully_ completes. This","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479194,"byte_end":13479271,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ means `try_race` will keep going until any one of the futures returns","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479272,"byte_end":13479345,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ `Ok`, or _all_ futures have returned `Err`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479346,"byte_end":13479393,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479394,"byte_end":13479397,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ However sometimes it can be useful to use the base variants of the functions","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479398,"byte_end":13479478,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ even on futures that return `Result`. Here is an overview of operations that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479479,"byte_end":13479559,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ work on `Result`, and their respective semantics:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479560,"byte_end":13479613,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479614,"byte_end":13479617,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ | Name                   | Return signature               | When does it return? |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479618,"byte_end":13479704,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"/ | ---                    | ---                            | ---                  |","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479705,"byte_end":13479791,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"/ | [`Future::join`]       | `(Result<T, E>, Result<T, E>)` | Wait for all to complete","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479792,"byte_end":13479880,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/ | [`Future::try_join`]   | `Result<(T1, T2), E>`          | Return on first `Err`, wait for all to complete","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479881,"byte_end":13479992,"line_start":40,"line_end":40,"column_start":1,"column_end":112}},{"value":"/ | [`Future::race`]       | `Result<T, E>`                 | Return on first value","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13479993,"byte_end":13480078,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ | [`Future::try_race`]   | `Result<T, E>`                 | Return on first `Ok`, reject on last Err","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480079,"byte_end":13480183,"line_start":42,"line_end":42,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480184,"byte_end":13480187,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`Future::join`]: trait.Future.html#method.join","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480188,"byte_end":13480239,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_join`]: trait.Future.html#method.try_join","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480240,"byte_end":13480299,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/ [`Future::race`]: trait.Future.html#method.race","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480300,"byte_end":13480351,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_race`]: trait.Future.html#method.try_race","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\mod.rs","byte_start":13480352,"byte_end":13480411,"line_start":47,"line_end":47,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":11995},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\delay.rs","byte_start":13779152,"byte_end":13779163,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"DelayFuture","qualname":"::future::future::delay::DelayFuture","value":"DelayFuture {  }","parent":null,"children":[{"krate":0,"index":11997},{"krate":0,"index":11998}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\delay.rs","byte_start":13779285,"byte_end":13779288,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayFuture<F>>::new","value":"pub fn new(F, Duration) -> DelayFuture<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11954},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\flatten.rs","byte_start":13780128,"byte_end":13780141,"line_start":11,"line_end":11,"column_start":16,"column_end":29},"name":"FlattenFuture","qualname":"::future::future::flatten::FlattenFuture","value":"FlattenFuture {  }","parent":null,"children":[{"krate":0,"index":11957}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11862},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\race.rs","byte_start":13781791,"byte_end":13781795,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Race","qualname":"::future::future::race::Race","value":"Race {  }","parent":null,"children":[{"krate":0,"index":11865},{"krate":0,"index":11866}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11817},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\try_race.rs","byte_start":13783043,"byte_end":13783050,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryRace","qualname":"::future::future::try_race::TryRace","value":"TryRace {  }","parent":null,"children":[{"krate":0,"index":11820},{"krate":0,"index":11821}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11772},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\join.rs","byte_start":13784811,"byte_end":13784815,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Join","qualname":"::future::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":11775},{"krate":0,"index":11776}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11727},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\try_join.rs","byte_start":13786228,"byte_end":13786235,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryJoin","qualname":"::future::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":11730},{"krate":0,"index":11731}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2414},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771637,"byte_end":13771646,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2419},{"krate":0,"index":2423},{"krate":0,"index":2425},{"krate":0,"index":2430}],"decl_id":null,"docs":"    Extension methods for [`Future`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772135,"byte_end":13772140,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"delay","qualname":"::future::future::FutureExt::delay","value":"pub fn delay(Self, Duration) -> DelayFuture<Self> where Self: Sized","parent":{"krate":0,"index":2414},"children":[],"decl_id":null,"docs":" Returns a Future that delays execution for a specified time.","sig":null,"attributes":[{"value":"/ Returns a Future that delays execution for a specified time.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771661,"byte_end":13771725,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771730,"byte_end":13771733,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771738,"byte_end":13771752,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771757,"byte_end":13771760,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771765,"byte_end":13771772,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771777,"byte_end":13771816,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771821,"byte_end":13771851,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771856,"byte_end":13771882,"line_start":38,"line_end":38,"column_start":5,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771887,"byte_end":13771915,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771920,"byte_end":13771923,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let a = future::ready(1).delay(Duration::from_millis(2000));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771928,"byte_end":13771992,"line_start":41,"line_end":41,"column_start":5,"column_end":69}},{"value":"/ dbg!(a.await);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771997,"byte_end":13772015,"line_start":42,"line_end":42,"column_start":5,"column_end":23}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772020,"byte_end":13772028,"line_start":43,"line_end":43,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772033,"byte_end":13772040,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772045,"byte_end":13772073,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772768,"byte_end":13772775,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self)\n-> FlattenFuture<Self, <Self::Output as IntoFuture>::Future> where\nSelf: Sized, <Self as Future>::Output: IntoFuture","parent":{"krate":0,"index":2414},"children":[],"decl_id":null,"docs":" Flatten out the execution of this future when the result itself\n can be converted into another future.","sig":null,"attributes":[{"value":"/ Flatten out the execution of this future when the result itself","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772267,"byte_end":13772334,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ can be converted into another future.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772339,"byte_end":13772380,"line_start":55,"line_end":55,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772385,"byte_end":13772388,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772393,"byte_end":13772407,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772412,"byte_end":13772415,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772420,"byte_end":13772427,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772432,"byte_end":13772471,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772476,"byte_end":13772506,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772511,"byte_end":13772514,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772519,"byte_end":13772565,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772570,"byte_end":13772611,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772616,"byte_end":13772648,"line_start":65,"line_end":65,"column_start":5,"column_end":37}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772653,"byte_end":13772661,"line_start":66,"line_end":66,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772666,"byte_end":13772673,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13772678,"byte_end":13772706,"line_start":68,"line_end":68,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13773994,"byte_end":13773998,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"race","qualname":"::future::future::FutureExt::race","value":"pub fn race<F>(Self, F) -> Race<Self, F> where Self: std::future::Future +\nSized, F: std::future::Future<Output = <Self as std::future::Future>::Output>","parent":{"krate":0,"index":2414},"children":[],"decl_id":null,"docs":"        Waits for one of two similarly-typed futures to complete.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13773904,"byte_end":13773932,"line_start":109,"line_end":109,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13775375,"byte_end":13775383,"line_start":157,"line_end":157,"column_start":8,"column_end":16},"name":"try_race","qualname":"::future::future::FutureExt::try_race","value":"pub fn try_race<F, T, E>(Self, F) -> TryRace<Self, F> where\nSelf: std::future::Future<Output = Result<T, E>> + Sized,\nF: std::future::Future<Output = <Self as std::future::Future>::Output>","parent":{"krate":0,"index":2414},"children":[],"decl_id":null,"docs":"        Waits for one of two similarly-typed fallible futures to complete.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13775285,"byte_end":13775313,"line_start":155,"line_end":155,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13776371,"byte_end":13776375,"line_start":194,"line_end":194,"column_start":8,"column_end":12},"name":"join","qualname":"::future::future::FutureExt::join","value":"pub fn join<F>(Self, F) -> Join<Self, F> where Self: std::future::Future +\nSized, F: std::future::Future","parent":{"krate":0,"index":2414},"children":[],"decl_id":null,"docs":"        Waits for two similarly-typed futures to complete.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13776258,"byte_end":13776309,"line_start":192,"line_end":192,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13777611,"byte_end":13777619,"line_start":241,"line_end":241,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::future::FutureExt::try_join","value":"pub fn try_join<F, A, B, E>(Self, F) -> TryJoin<Self, F> where\nSelf: std::future::Future<Output = Result<A, E>> + Sized,\nF: std::future::Future<Output = Result<B, E>>","parent":{"krate":0,"index":2414},"children":[],"decl_id":null,"docs":"        Waits for two similarly-typed fallible futures to complete.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13777498,"byte_end":13777549,"line_start":239,"line_end":239,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13778701,"byte_end":13778708,"line_start":280,"line_end":280,"column_start":8,"column_end":15},"name":"timeout","qualname":"::future::future::FutureExt::timeout","value":"pub fn timeout(Self, Duration) -> TimeoutFuture<Self> where Self: Sized","parent":{"krate":0,"index":2414},"children":[],"decl_id":null,"docs":"        Waits for both the future and a timeout, if the timeout completes before\n        the future, it returns a TimeoutError.","sig":null,"attributes":[{"value":"cfg(any(all(feature = \"default\", feature = \"unstable\"), feature = \"docs\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13778562,"byte_end":13778639,"line_start":278,"line_end":278,"column_start":5,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":2672},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788405,"byte_end":13788412,"line_start":27,"line_end":27,"column_start":14,"column_end":21},"name":"pending","qualname":"::future::pending::pending","value":"pub async fn pending<T>() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Never resolves to a value.","sig":null,"attributes":[{"value":"/ Never resolves to a value.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788013,"byte_end":13788043,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788044,"byte_end":13788047,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788048,"byte_end":13788062,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788063,"byte_end":13788066,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788067,"byte_end":13788074,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788075,"byte_end":13788114,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788115,"byte_end":13788120,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788121,"byte_end":13788149,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788150,"byte_end":13788153,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788154,"byte_end":13788180,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788181,"byte_end":13788203,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788204,"byte_end":13788207,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_secs(1);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788208,"byte_end":13788245,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ let fut = future::pending();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788246,"byte_end":13788278,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788279,"byte_end":13788282,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let res: io::Result<()> = io::timeout(dur, fut).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788283,"byte_end":13788341,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788342,"byte_end":13788368,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788369,"byte_end":13788374,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788375,"byte_end":13788383,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788384,"byte_end":13788391,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2697},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789303,"byte_end":13789310,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub async fn poll_fn<F, T>(F) -> /*impl Trait*/ where F: FnMut(&mut Context)\n-> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13788788,"byte_end":13788859,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13788860,"byte_end":13788863,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13788864,"byte_end":13788930,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13788931,"byte_end":13788934,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13788935,"byte_end":13788949,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13788950,"byte_end":13788953,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13788954,"byte_end":13788961,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13788962,"byte_end":13789001,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789002,"byte_end":13789007,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789008,"byte_end":13789034,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use async_std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789035,"byte_end":13789076,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789077,"byte_end":13789080,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn poll_greeting(_: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789081,"byte_end":13789140,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/     Poll::Ready(\"hello world\".to_string())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789141,"byte_end":13789187,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789188,"byte_end":13789193,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789194,"byte_end":13789197,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::poll_fn(poll_greeting).await, \"hello world\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789198,"byte_end":13789266,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789267,"byte_end":13789272,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789273,"byte_end":13789281,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789282,"byte_end":13789289,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2713},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13790090,"byte_end":13790095,"line_start":18,"line_end":18,"column_start":14,"column_end":19},"name":"ready","qualname":"::future::ready::ready","value":"pub async fn ready<T>(T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Resolves to the provided value.","sig":null,"attributes":[{"value":"/ Resolves to the provided value.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13789701,"byte_end":13789736,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13789737,"byte_end":13789740,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::convert::identity`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13789741,"byte_end":13789809,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13789810,"byte_end":13789813,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13789814,"byte_end":13789900,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13789901,"byte_end":13789904,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13789905,"byte_end":13789919,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13789920,"byte_end":13789923,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13789924,"byte_end":13789931,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13789932,"byte_end":13789971,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13789972,"byte_end":13789977,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13789978,"byte_end":13790004,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13790005,"byte_end":13790008,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::ready(10).await, 10);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13790009,"byte_end":13790053,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13790054,"byte_end":13790059,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13790060,"byte_end":13790068,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\ready.rs","byte_start":13790069,"byte_end":13790076,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481685,"byte_end":13481692,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"name":"timeout","qualname":"::future::timeout::timeout","value":"pub async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where\nF: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Awaits a future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits a future or times out after a duration of time.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481157,"byte_end":13481215,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481216,"byte_end":13481219,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you want to await an I/O future consider using","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481220,"byte_end":13481273,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ [`io::timeout`](../io/fn.timeout.html) instead.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481274,"byte_end":13481325,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481326,"byte_end":13481329,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481330,"byte_end":13481344,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481345,"byte_end":13481348,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481349,"byte_end":13481356,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481357,"byte_end":13481431,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481432,"byte_end":13481437,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481438,"byte_end":13481466,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481467,"byte_end":13481470,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481471,"byte_end":13481497,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481498,"byte_end":13481501,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let never = future::pending::<()>();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481502,"byte_end":13481542,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ let dur = Duration::from_millis(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481543,"byte_end":13481582,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ assert!(future::timeout(dur, never).await.is_err());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481583,"byte_end":13481639,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481640,"byte_end":13481645,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481646,"byte_end":13481663,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481664,"byte_end":13481671,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11690},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13481910,"byte_end":13481923,"line_start":41,"line_end":41,"column_start":16,"column_end":29},"name":"TimeoutFuture","qualname":"::future::timeout::TimeoutFuture","value":"TimeoutFuture {  }","parent":null,"children":[{"krate":0,"index":11692},{"krate":0,"index":11693}],"decl_id":null,"docs":" A future that times out after a duration of time.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2717},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13482855,"byte_end":13482867,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::future::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":2718}],"decl_id":null,"docs":" An error returned when a future times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a future times out.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13482752,"byte_end":13482798,"line_start":74,"line_end":74,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790869,"byte_end":13790879,"line_start":35,"line_end":35,"column_start":11,"column_end":21},"name":"IntoFuture","qualname":"::future::into_future::IntoFuture","value":"IntoFuture","parent":null,"children":[{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744}],"decl_id":null,"docs":" Convert a type into a `Future`.","sig":null,"attributes":[{"value":"/ Convert a type into a `Future`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790151,"byte_end":13790186,"line_start":3,"line_end":3,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790187,"byte_end":13790190,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790191,"byte_end":13790205,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790206,"byte_end":13790209,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790210,"byte_end":13790217,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use async_std::future::{Future, IntoFuture};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790218,"byte_end":13790266,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790267,"byte_end":13790289,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/ use async_std::pin::Pin;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790290,"byte_end":13790318,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790319,"byte_end":13790322,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ struct Client;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790323,"byte_end":13790341,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790342,"byte_end":13790345,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ impl Client {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790346,"byte_end":13790363,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"/     pub async fn send(self) -> io::Result<()> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790364,"byte_end":13790415,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/         // Send a request","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790416,"byte_end":13790445,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790446,"byte_end":13790464,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790465,"byte_end":13790474,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790475,"byte_end":13790480,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790481,"byte_end":13790484,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ impl IntoFuture for Client {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790485,"byte_end":13790517,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/     type Output = io::Result<()>;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790518,"byte_end":13790555,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790556,"byte_end":13790559,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     type Future = Pin<Box<dyn Future<Output = Self::Output>>>;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790560,"byte_end":13790626,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790627,"byte_end":13790630,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     fn into_future(self) -> Self::Future {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790631,"byte_end":13790677,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/         Box::pin(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790678,"byte_end":13790706,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/             self.send().await","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790707,"byte_end":13790740,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/         })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790741,"byte_end":13790755,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790756,"byte_end":13790765,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790766,"byte_end":13790771,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790772,"byte_end":13790779,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790780,"byte_end":13790808,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790941,"byte_end":13790947,"line_start":37,"line_end":37,"column_start":10,"column_end":16},"name":"Output","qualname":"::future::into_future::IntoFuture::Output","value":"type Output;","parent":{"krate":0,"index":2741},"children":[],"decl_id":null,"docs":" The type of value produced on completion.\n","sig":null,"attributes":[{"value":"/ The type of value produced on completion.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790886,"byte_end":13790931,"line_start":36,"line_end":36,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":2743},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13791014,"byte_end":13791020,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Future","qualname":"::future::into_future::IntoFuture::Future","value":"type Future: Future<Output = Self::Output>;","parent":{"krate":0,"index":2741},"children":[],"decl_id":null,"docs":" Which kind of future are we turning this into?\n","sig":null,"attributes":[{"value":"/ Which kind of future are we turning this into?","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13790954,"byte_end":13791004,"line_start":39,"line_end":39,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13791098,"byte_end":13791109,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::into_future::IntoFuture::into_future","value":"pub fn into_future(Self) -> Self::Future","parent":{"krate":0,"index":2741},"children":[],"decl_id":null,"docs":" Create a future from a value\n","sig":null,"attributes":[{"value":"/ Create a future from a value","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13791058,"byte_end":13791090,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":1806},{"krate":0,"index":1829},{"krate":0,"index":1853},{"krate":0,"index":1882},{"krate":0,"index":1911},{"krate":0,"index":1931},{"krate":0,"index":3223},{"krate":0,"index":3421},{"krate":0,"index":3430},{"krate":0,"index":3452},{"krate":0,"index":3467},{"krate":0,"index":3474},{"krate":0,"index":3505},{"krate":0,"index":3518},{"krate":0,"index":3559},{"krate":0,"index":3585},{"krate":0,"index":3613},{"krate":0,"index":3639},{"krate":0,"index":3642},{"krate":0,"index":3645},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3652},{"krate":0,"index":3655},{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3662},{"krate":0,"index":3665},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3672},{"krate":0,"index":3675},{"krate":0,"index":3678},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3685},{"krate":0,"index":3688}],"decl_id":null,"docs":" Composable asynchronous iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16620,"byte_end":16645,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Composable asynchronous iteration.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483070,"byte_end":13483108,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483109,"byte_end":13483112,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::iter`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483113,"byte_end":13483166,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483167,"byte_end":13483170,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If you've found yourself with an asynchronous collection of some kind,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483171,"byte_end":13483245,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ and needed to perform an operation on the elements of said collection,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483246,"byte_end":13483320,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ you'll quickly run into 'streams'. Streams are heavily used in idiomatic","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483321,"byte_end":13483397,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ asynchronous Rust code, so it's worth becoming familiar with them.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483398,"byte_end":13483468,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483469,"byte_end":13483472,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Before explaining more, let's talk about how this module is structured:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483473,"byte_end":13483548,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483549,"byte_end":13483552,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483553,"byte_end":13483571,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483572,"byte_end":13483575,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This module is largely organized by type:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483576,"byte_end":13483621,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483622,"byte_end":13483625,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [Traits] are the core portion: these traits define what kind of streams","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483626,"byte_end":13483703,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/   exist and what you can do with them. The methods of these traits are worth","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483704,"byte_end":13483784,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   putting some extra study time into.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483785,"byte_end":13483826,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ * [Functions] provide some helpful ways to create some basic streams.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483827,"byte_end":13483900,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ * [Structs] are often the return types of the various methods on this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483901,"byte_end":13483974,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/   module's traits. You'll usually want to look at the method that creates","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13483975,"byte_end":13484052,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   the `struct`, rather than the `struct` itself. For more detail about why,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484053,"byte_end":13484132,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   see '[Implementing Stream](#implementing-stream)'.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484133,"byte_end":13484189,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484190,"byte_end":13484193,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [Traits]: #traits","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484194,"byte_end":13484215,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ [Functions]: #functions","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484216,"byte_end":13484243,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ [Structs]: #structs","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484244,"byte_end":13484267,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484268,"byte_end":13484271,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ That's it! Let's dig into streams.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484272,"byte_end":13484310,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484311,"byte_end":13484314,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484315,"byte_end":13484327,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484328,"byte_end":13484331,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The heart and soul of this module is the [`Stream`] trait. The core of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484332,"byte_end":13484406,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ [`Stream`] looks like this:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484407,"byte_end":13484438,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484439,"byte_end":13484442,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484443,"byte_end":13484450,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484451,"byte_end":13484494,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484495,"byte_end":13484519,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ trait Stream {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484520,"byte_end":13484538,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/     type Item;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484539,"byte_end":13484557,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/     fn poll_next(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484558,"byte_end":13484651,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484652,"byte_end":13484657,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484658,"byte_end":13484665,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484666,"byte_end":13484669,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ A stream has a method, [`next`], which when called, returns an","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484670,"byte_end":13484736,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ [`Poll`]<[`Option`]`<Item>>`. [`next`] will return `Ready(Some(Item))`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484737,"byte_end":13484811,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ as long as there are elements, and once they've all been exhausted, will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484812,"byte_end":13484888,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ return `None` to indicate that iteration is finished. If we're waiting on","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484889,"byte_end":13484966,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ something asynchronous to resolve `Pending` is returned.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13484967,"byte_end":13485027,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485028,"byte_end":13485031,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Individual streams may choose to resume iteration, and so calling","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485032,"byte_end":13485101,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ [`next`] again may or may not eventually start returning `Ready(Some(Item))`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485102,"byte_end":13485182,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ again at some point.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485183,"byte_end":13485207,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485208,"byte_end":13485211,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]'s full definition includes a number of other methods as well,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485212,"byte_end":13485288,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ but they are default methods, built on top of [`next`], and so you get","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485289,"byte_end":13485363,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ them for free.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485364,"byte_end":13485382,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485383,"byte_end":13485386,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Streams are also composable, and it's common to chain them together to do","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485387,"byte_end":13485464,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ more complex forms of processing. See the [Adapters](#adapters) section","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485465,"byte_end":13485540,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ below for more details.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485541,"byte_end":13485568,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485569,"byte_end":13485572,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../task/enum.Poll.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485573,"byte_end":13485609,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485610,"byte_end":13485643,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ [`next`]: trait.Stream.html#tymethod.next","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485644,"byte_end":13485689,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`Option`]: ../../std/option/enum.Option.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485690,"byte_end":13485739,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485740,"byte_end":13485743,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # The three forms of streaming","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485744,"byte_end":13485778,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485779,"byte_end":13485782,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ There are three common methods which can create streams from a collection:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485783,"byte_end":13485861,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485862,"byte_end":13485865,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `stream()`, which iterates over `&T`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485866,"byte_end":13485909,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/ * `stream_mut()`, which iterates over `&mut T`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485910,"byte_end":13485961,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/ * `into_stream()`, which iterates over `T`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13485962,"byte_end":13486009,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486010,"byte_end":13486013,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Various things in async-std may implement one or more of the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486014,"byte_end":13486078,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ three, where appropriate.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486079,"byte_end":13486108,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486109,"byte_end":13486112,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Implementing Stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486113,"byte_end":13486138,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486139,"byte_end":13486142,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Creating a stream of your own involves two steps: creating a `struct` to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486143,"byte_end":13486219,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ hold the stream's state, and then `impl`ementing [`Stream`] for that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486220,"byte_end":13486292,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ `struct`. This is why there are so many `struct`s in this module: there is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486293,"byte_end":13486371,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ one for each stream and iterator adapter.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486372,"byte_end":13486417,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486418,"byte_end":13486421,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Let's make a stream named `Counter` which counts from `1` to `5`:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486422,"byte_end":13486491,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486492,"byte_end":13486495,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486496,"byte_end":13486503,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486504,"byte_end":13486536,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486537,"byte_end":13486580,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486581,"byte_end":13486605,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/ // First, the struct:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486606,"byte_end":13486631,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486632,"byte_end":13486635,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ /// A stream which counts from one to five","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486636,"byte_end":13486682,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"/ struct Counter {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486683,"byte_end":13486703,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"/     count: usize,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486704,"byte_end":13486725,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486726,"byte_end":13486731,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486732,"byte_end":13486735,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // we want our count to start at one, so let's add a new() method to help.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486736,"byte_end":13486814,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ // This isn't strictly necessary, but is convenient. Note that we start","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486815,"byte_end":13486890,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ // `count` at zero, we'll see why in `next()`'s implementation below.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486891,"byte_end":13486964,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/ impl Counter {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486965,"byte_end":13486983,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"/     fn new() -> Counter {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13486984,"byte_end":13487013,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"/         Counter { count: 0 }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487014,"byte_end":13487046,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487047,"byte_end":13487056,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487057,"byte_end":13487062,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487063,"byte_end":13487066,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // Then, we implement `Stream` for our `Counter`:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487067,"byte_end":13487120,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487121,"byte_end":13487124,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ impl Stream for Counter {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487125,"byte_end":13487154,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"/     // we will be counting with usize","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487155,"byte_end":13487196,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/     type Item = usize;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487197,"byte_end":13487223,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487224,"byte_end":13487227,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     // poll_next() is the only required method","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487228,"byte_end":13487278,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487279,"byte_end":13487377,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/         // Increment our count. This is why we started at zero.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487378,"byte_end":13487445,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"/         self.count += 1;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487446,"byte_end":13487474,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487475,"byte_end":13487478,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/         // Check to see if we've finished counting or not.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487479,"byte_end":13487541,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/         if self.count < 6 {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487542,"byte_end":13487573,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"/             Poll::Ready(Some(self.count))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487574,"byte_end":13487619,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487620,"byte_end":13487640,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"/             Poll::Ready(None)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487641,"byte_end":13487674,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487675,"byte_end":13487688,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487689,"byte_end":13487698,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487699,"byte_end":13487704,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487705,"byte_end":13487708,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487709,"byte_end":13487738,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487739,"byte_end":13487813,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487814,"byte_end":13487819,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ let mut counter = Counter::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487820,"byte_end":13487857,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487858,"byte_end":13487861,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487862,"byte_end":13487904,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487905,"byte_end":13487927,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487928,"byte_end":13487931,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487932,"byte_end":13487974,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487975,"byte_end":13487997,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13487998,"byte_end":13488001,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488002,"byte_end":13488044,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488045,"byte_end":13488067,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488068,"byte_end":13488071,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488072,"byte_end":13488114,"line_start":142,"line_end":142,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488115,"byte_end":13488137,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488138,"byte_end":13488141,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488142,"byte_end":13488184,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488185,"byte_end":13488207,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488208,"byte_end":13488213,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488214,"byte_end":13488231,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488232,"byte_end":13488239,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488240,"byte_end":13488243,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This will print `1` through `5`, each on their own line.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488244,"byte_end":13488304,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488305,"byte_end":13488308,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Calling `next().await` this way gets repetitive. Rust has a construct which","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488309,"byte_end":13488388,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/ can call `next()` on your stream, until it reaches `None`. Let's go over","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488389,"byte_end":13488465,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"/ that next.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488466,"byte_end":13488480,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488481,"byte_end":13488484,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # while let Loops and IntoStream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488485,"byte_end":13488521,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488522,"byte_end":13488525,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Rust's `while let` loop syntax is an idiomatic way to iterate over streams. Here's a basic","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488526,"byte_end":13488620,"line_start":159,"line_end":159,"column_start":1,"column_end":95}},{"value":"/ example of `while let`:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488621,"byte_end":13488648,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488649,"byte_end":13488652,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488653,"byte_end":13488660,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488661,"byte_end":13488735,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488736,"byte_end":13488741,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488742,"byte_end":13488774,"line_start":165,"line_end":165,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488775,"byte_end":13488803,"line_start":166,"line_end":166,"column_start":1,"column_end":29}},{"value":"/ let mut values = stream::from_iter(1u8..6);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488804,"byte_end":13488851,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488852,"byte_end":13488855,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = values.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488856,"byte_end":13488901,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488902,"byte_end":13488928,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488929,"byte_end":13488934,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488935,"byte_end":13488940,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488941,"byte_end":13488958,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488959,"byte_end":13488966,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488967,"byte_end":13488970,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers one through five, each on their own line. But","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13488971,"byte_end":13489048,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ you'll notice something here: we never called anything on our vector to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489049,"byte_end":13489124,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/ produce a stream. What gives?","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489125,"byte_end":13489158,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489159,"byte_end":13489162,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ There's a trait in the standard library for converting something into an","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489163,"byte_end":13489239,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ stream: [`IntoStream`]. This trait has one method, [`into_stream`],","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489240,"byte_end":13489311,"line_start":181,"line_end":181,"column_start":1,"column_end":72}},{"value":"/ which converts the thing implementing [`IntoStream`] into a stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489312,"byte_end":13489383,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489384,"byte_end":13489387,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Unlike `std::iter::IntoIterator`, `IntoStream` does not have compiler","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489388,"byte_end":13489461,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ support yet. This means that automatic conversions like with `for` loops","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489462,"byte_end":13489538,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"/ doesn't occur yet, and `into_stream` or `from_iter` as above will always","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489539,"byte_end":13489615,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ have to be called manually.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489616,"byte_end":13489647,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489648,"byte_end":13489651,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489652,"byte_end":13489693,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ [`into_stream`]: trait.IntoStream.html#tymethod.into_stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489694,"byte_end":13489757,"line_start":190,"line_end":190,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489758,"byte_end":13489761,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ # Adapters","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489762,"byte_end":13489776,"line_start":192,"line_end":192,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489777,"byte_end":13489780,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ Functions which take an [`Stream`] and return another [`Stream`] are","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489781,"byte_end":13489853,"line_start":194,"line_end":194,"column_start":1,"column_end":73}},{"value":"/ often called 'stream adapters', as they are a form of the 'adapter","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489854,"byte_end":13489924,"line_start":195,"line_end":195,"column_start":1,"column_end":71}},{"value":"/ pattern'.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489925,"byte_end":13489938,"line_start":196,"line_end":196,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489939,"byte_end":13489942,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Common stream adapters include [`map`], [`take`], and [`filter`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13489943,"byte_end":13490012,"line_start":198,"line_end":198,"column_start":1,"column_end":70}},{"value":"/ For more, see their documentation.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490013,"byte_end":13490051,"line_start":199,"line_end":199,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490052,"byte_end":13490055,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490056,"byte_end":13490097,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490098,"byte_end":13490141,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"/ [`filter`]: trait.Stream.html#method.filter","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490142,"byte_end":13490189,"line_start":203,"line_end":203,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490190,"byte_end":13490193,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ # Laziness","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490194,"byte_end":13490208,"line_start":205,"line_end":205,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490209,"byte_end":13490212,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ Streams (and stream [adapters](#adapters)) are *lazy*. This means that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490213,"byte_end":13490287,"line_start":207,"line_end":207,"column_start":1,"column_end":75}},{"value":"/ just creating a stream doesn't _do_ a whole lot. Nothing really happens","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490288,"byte_end":13490363,"line_start":208,"line_end":208,"column_start":1,"column_end":76}},{"value":"/ until you call [`next`]. This is sometimes a source of confusion when","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490364,"byte_end":13490437,"line_start":209,"line_end":209,"column_start":1,"column_end":74}},{"value":"/ creating a stream solely for its side effects. For example, the [`map`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490438,"byte_end":13490513,"line_start":210,"line_end":210,"column_start":1,"column_end":76}},{"value":"/ method calls a closure on each element it iterates over:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490514,"byte_end":13490574,"line_start":211,"line_end":211,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490575,"byte_end":13490578,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490579,"byte_end":13490586,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490587,"byte_end":13490619,"line_start":214,"line_end":214,"column_start":1,"column_end":33}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490620,"byte_end":13490694,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490695,"byte_end":13490700,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490701,"byte_end":13490733,"line_start":217,"line_end":217,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490734,"byte_end":13490762,"line_start":218,"line_end":218,"column_start":1,"column_end":29}},{"value":"/ let v = stream::repeat(1u8).take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490763,"byte_end":13490803,"line_start":219,"line_end":219,"column_start":1,"column_end":41}},{"value":"/ v.map(|x| println!(\"{}\", x));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490804,"byte_end":13490837,"line_start":220,"line_end":220,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490838,"byte_end":13490843,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490844,"byte_end":13490861,"line_start":222,"line_end":222,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490862,"byte_end":13490869,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490870,"byte_end":13490873,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ This will not print any values, as we only created a stream, rather than","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490874,"byte_end":13490950,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ using it. The compiler will warn us about this kind of behavior:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13490951,"byte_end":13491019,"line_start":226,"line_end":226,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491020,"byte_end":13491023,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491024,"byte_end":13491035,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ warning: unused result that must be used: streams are lazy and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491036,"byte_end":13491102,"line_start":229,"line_end":229,"column_start":1,"column_end":67}},{"value":"/ do nothing unless consumed","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491103,"byte_end":13491133,"line_start":230,"line_end":230,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491134,"byte_end":13491141,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491142,"byte_end":13491145,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ The idiomatic way to write a [`map`] for its side effects is to use a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491146,"byte_end":13491219,"line_start":233,"line_end":233,"column_start":1,"column_end":74}},{"value":"/ `while let` loop instead:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491220,"byte_end":13491249,"line_start":234,"line_end":234,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491250,"byte_end":13491253,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491254,"byte_end":13491261,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491262,"byte_end":13491336,"line_start":237,"line_end":237,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491337,"byte_end":13491342,"line_start":238,"line_end":238,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491343,"byte_end":13491375,"line_start":239,"line_end":239,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491376,"byte_end":13491404,"line_start":240,"line_end":240,"column_start":1,"column_end":29}},{"value":"/ let mut v = stream::repeat(1u8).take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491405,"byte_end":13491449,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491450,"byte_end":13491453,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = &v.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491454,"byte_end":13491495,"line_start":243,"line_end":243,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491496,"byte_end":13491522,"line_start":244,"line_end":244,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491523,"byte_end":13491528,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491529,"byte_end":13491534,"line_start":246,"line_end":246,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491535,"byte_end":13491552,"line_start":247,"line_end":247,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491553,"byte_end":13491560,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491561,"byte_end":13491564,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491565,"byte_end":13491606,"line_start":250,"line_end":250,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491607,"byte_end":13491610,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ The two most common ways to evaluate a stream are to use a `while let` loop","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491611,"byte_end":13491690,"line_start":252,"line_end":252,"column_start":1,"column_end":80}},{"value":"/ like this, or using the [`collect`] method to produce a new collection.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491691,"byte_end":13491766,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491767,"byte_end":13491770,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491771,"byte_end":13491820,"line_start":255,"line_end":255,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491821,"byte_end":13491824,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # Infinity","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491825,"byte_end":13491839,"line_start":257,"line_end":257,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491840,"byte_end":13491843,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Streams do not have to be finite. As an example, a repeat stream is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491844,"byte_end":13491915,"line_start":259,"line_end":259,"column_start":1,"column_end":72}},{"value":"/ an infinite stream:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491916,"byte_end":13491939,"line_start":260,"line_end":260,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491940,"byte_end":13491943,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491944,"byte_end":13491951,"line_start":262,"line_end":262,"column_start":1,"column_end":8}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491952,"byte_end":13491980,"line_start":263,"line_end":263,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::repeat(1u8);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13491981,"byte_end":13492019,"line_start":264,"line_end":264,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492020,"byte_end":13492027,"line_start":265,"line_end":265,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492028,"byte_end":13492031,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ It is common to use the [`take`] stream adapter to turn an infinite","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492032,"byte_end":13492103,"line_start":267,"line_end":267,"column_start":1,"column_end":72}},{"value":"/ stream into a finite one:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492104,"byte_end":13492133,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492134,"byte_end":13492137,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492138,"byte_end":13492145,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492146,"byte_end":13492220,"line_start":271,"line_end":271,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492221,"byte_end":13492226,"line_start":272,"line_end":272,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492227,"byte_end":13492259,"line_start":273,"line_end":273,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492260,"byte_end":13492288,"line_start":274,"line_end":274,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::from_iter(0u8..);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492289,"byte_end":13492332,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"/ let mut five_numbers = numbers.take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492333,"byte_end":13492376,"line_start":276,"line_end":276,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492377,"byte_end":13492380,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ while let Some(number) = five_numbers.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492381,"byte_end":13492437,"line_start":278,"line_end":278,"column_start":1,"column_end":57}},{"value":"/     println!(\"{}\", number);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492438,"byte_end":13492469,"line_start":279,"line_end":279,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492470,"byte_end":13492475,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492476,"byte_end":13492481,"line_start":281,"line_end":281,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492482,"byte_end":13492499,"line_start":282,"line_end":282,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492500,"byte_end":13492507,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492508,"byte_end":13492511,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers `0` through `4`, each on their own line.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492512,"byte_end":13492584,"line_start":285,"line_end":285,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492585,"byte_end":13492588,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ Bear in mind that methods on infinite streams, even those for which a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492589,"byte_end":13492662,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ result can be determined mathematically in finite time, may not terminate.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492663,"byte_end":13492741,"line_start":288,"line_end":288,"column_start":1,"column_end":79}},{"value":"/ Specifically, methods such as [`min`], which in the general case require","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492742,"byte_end":13492818,"line_start":289,"line_end":289,"column_start":1,"column_end":77}},{"value":"/ traversing every element in the stream, are likely not to return","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492819,"byte_end":13492887,"line_start":290,"line_end":290,"column_start":1,"column_end":69}},{"value":"/ successfully for any infinite streams.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492888,"byte_end":13492930,"line_start":291,"line_end":291,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492931,"byte_end":13492934,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492935,"byte_end":13492948,"line_start":293,"line_end":293,"column_start":1,"column_end":14}},{"value":"/ let ones = async_std::stream::repeat(1);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492949,"byte_end":13492993,"line_start":294,"line_end":294,"column_start":1,"column_end":45}},{"value":"/ let least = ones.min().await.unwrap(); // Oh no! An infinite loop!","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13492994,"byte_end":13493064,"line_start":295,"line_end":295,"column_start":1,"column_end":71}},{"value":"/ // `ones.min()` causes an infinite loop, so we won't reach this point!","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493065,"byte_end":13493139,"line_start":296,"line_end":296,"column_start":1,"column_end":75}},{"value":"/ println!(\"The smallest number one is {}.\", least);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493140,"byte_end":13493194,"line_start":297,"line_end":297,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493195,"byte_end":13493202,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493203,"byte_end":13493206,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ [`std::iter`]: https://doc.rust-lang.org/std/iter/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493207,"byte_end":13493271,"line_start":300,"line_end":300,"column_start":1,"column_end":65}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493272,"byte_end":13493315,"line_start":301,"line_end":301,"column_start":1,"column_end":44}},{"value":"/ [`min`]: trait.Stream.html#method.min","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\mod.rs","byte_start":13493316,"byte_end":13493357,"line_start":302,"line_end":302,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\all.rs","byte_start":13553184,"byte_end":13553193,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\all.rs","byte_start":13553133,"byte_end":13553172,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\any.rs","byte_start":13554539,"byte_end":13554548,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\any.rs","byte_start":13554488,"byte_end":13554527,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11641},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\chain.rs","byte_start":13556195,"byte_end":13556200,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11644},{"krate":0,"index":11645}],"decl_id":null,"docs":" A stream that chains two streams one after another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11605},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cloned.rs","byte_start":13557527,"byte_end":13557533,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Cloned","qualname":"::stream::stream::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":11607}],"decl_id":null,"docs":" A stream that clones the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11552},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cmp.rs","byte_start":13558457,"byte_end":13558466,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"CmpFuture","qualname":"::stream::stream::cmp::CmpFuture","value":"CmpFuture {  }","parent":null,"children":[{"krate":0,"index":11555},{"krate":0,"index":11556},{"krate":0,"index":11557},{"krate":0,"index":11558}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11516},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\copied.rs","byte_start":13561148,"byte_end":13561154,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Copied","qualname":"::stream::stream::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":11518}],"decl_id":null,"docs":" A stream that copies the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11476},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cycle.rs","byte_start":13561913,"byte_end":13561918,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":11478},{"krate":0,"index":11479}],"decl_id":null,"docs":" A stream that will repeatedly yield the same list of elements.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11436},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\enumerate.rs","byte_start":13562796,"byte_end":13562805,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":11438},{"krate":0,"index":11439}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11391},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\eq.rs","byte_start":13563882,"byte_end":13563890,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"EqFuture","qualname":"::stream::stream::eq::EqFuture","value":"EqFuture {  }","parent":null,"children":[{"krate":0,"index":11394},{"krate":0,"index":11395}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11342},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\filter.rs","byte_start":13565429,"byte_end":13565435,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11345},{"krate":0,"index":11346}],"decl_id":null,"docs":" A stream to filter elements of another stream with a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11293},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\filter_map.rs","byte_start":13566408,"byte_end":13566417,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11296},{"krate":0,"index":11297}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find.rs","byte_start":13567396,"byte_end":13567406,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"FindFuture","qualname":"::stream::stream::find::FindFuture","value":"FindFuture {  }","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find.rs","byte_start":13567345,"byte_end":13567384,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find_map.rs","byte_start":13568392,"byte_end":13568405,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"FindMapFuture","qualname":"::stream::stream::find_map::FindMapFuture","value":"FindMapFuture {  }","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find_map.rs","byte_start":13568341,"byte_end":13568380,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11231},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\fold.rs","byte_start":13569482,"byte_end":13569492,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":11235},{"krate":0,"index":11236},{"krate":0,"index":11237}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11186},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\for_each.rs","byte_start":13570682,"byte_end":13570695,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"ForEachFuture","qualname":"::stream::stream::for_each::ForEachFuture","value":"ForEachFuture {  }","parent":null,"children":[{"krate":0,"index":11189},{"krate":0,"index":11190}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11143},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\fuse.rs","byte_start":13571875,"byte_end":13571879,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":11145},{"krate":0,"index":11146}],"decl_id":null,"docs":" A stream that yields `None` forever after the underlying stream yields `None` once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11102},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\ge.rs","byte_start":13573035,"byte_end":13573043,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GeFuture","qualname":"::stream::stream::ge::GeFuture","value":"GeFuture {  }","parent":null,"children":[{"krate":0,"index":11105}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11061},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\gt.rs","byte_start":13574268,"byte_end":13574276,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GtFuture","qualname":"::stream::stream::gt::GtFuture","value":"GtFuture {  }","parent":null,"children":[{"krate":0,"index":11064}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11012},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\inspect.rs","byte_start":13575505,"byte_end":13575512,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":11015},{"krate":0,"index":11016}],"decl_id":null,"docs":" A stream that does something with each element of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10967},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\last.rs","byte_start":13576374,"byte_end":13576384,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"LastFuture","qualname":"::stream::stream::last::LastFuture","value":"LastFuture {  }","parent":null,"children":[{"krate":0,"index":10970},{"krate":0,"index":10971}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10926},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\le.rs","byte_start":13577597,"byte_end":13577605,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LeFuture","qualname":"::stream::stream::le::LeFuture","value":"LeFuture {  }","parent":null,"children":[{"krate":0,"index":10929}],"decl_id":null,"docs":" Determines if the elements of this `Stream` are lexicographically\n less or equal to those of another.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10885},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\lt.rs","byte_start":13578840,"byte_end":13578848,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LtFuture","qualname":"::stream::stream::lt::LtFuture","value":"LtFuture {  }","parent":null,"children":[{"krate":0,"index":10888}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10836},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\map.rs","byte_start":13579846,"byte_end":13579849,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":10839},{"krate":0,"index":10840}],"decl_id":null,"docs":" A stream that maps value of another stream with a function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10791},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max.rs","byte_start":13580673,"byte_end":13580682,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MaxFuture","qualname":"::stream::stream::max::MaxFuture","value":"MaxFuture {  }","parent":null,"children":[{"krate":0,"index":10794},{"krate":0,"index":10795}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10734},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max_by.rs","byte_start":13581950,"byte_end":13581961,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MaxByFuture","qualname":"::stream::stream::max_by::MaxByFuture","value":"MaxByFuture {  }","parent":null,"children":[{"krate":0,"index":10738},{"krate":0,"index":10739},{"krate":0,"index":10740}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10677},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13583374,"byte_end":13583388,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MaxByKeyFuture","qualname":"::stream::stream::max_by_key::MaxByKeyFuture","value":"MaxByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":10681},{"krate":0,"index":10682},{"krate":0,"index":10683}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10632},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min.rs","byte_start":13585028,"byte_end":13585037,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MinFuture","qualname":"::stream::stream::min::MinFuture","value":"MinFuture {  }","parent":null,"children":[{"krate":0,"index":10635},{"krate":0,"index":10636}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10575},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min_by.rs","byte_start":13586302,"byte_end":13586313,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MinByFuture","qualname":"::stream::stream::min_by::MinByFuture","value":"MinByFuture {  }","parent":null,"children":[{"krate":0,"index":10579},{"krate":0,"index":10580},{"krate":0,"index":10581}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10518},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13587752,"byte_end":13587766,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MinByKeyFuture","qualname":"::stream::stream::min_by_key::MinByKeyFuture","value":"MinByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":10522},{"krate":0,"index":10523},{"krate":0,"index":10524}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10473},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\ne.rs","byte_start":13589526,"byte_end":13589534,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"NeFuture","qualname":"::stream::stream::ne::NeFuture","value":"NeFuture {  }","parent":null,"children":[{"krate":0,"index":10476},{"krate":0,"index":10477}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\next.rs","byte_start":13590834,"byte_end":13590844,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"NextFuture","qualname":"::stream::stream::next::NextFuture","value":"NextFuture {  }","parent":null,"children":[{"krate":0,"index":1164}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\next.rs","byte_start":13590783,"byte_end":13590822,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\nth.rs","byte_start":13591324,"byte_end":13591333,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"NthFuture","qualname":"::stream::stream::nth::NthFuture","value":"NthFuture {  }","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\nth.rs","byte_start":13591273,"byte_end":13591312,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10420},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13592587,"byte_end":13592603,"line_start":17,"line_end":17,"column_start":16,"column_end":32},"name":"PartialCmpFuture","qualname":"::stream::stream::partial_cmp::PartialCmpFuture","value":"PartialCmpFuture {  }","parent":null,"children":[{"krate":0,"index":10423},{"krate":0,"index":10424},{"krate":0,"index":10425},{"krate":0,"index":10426}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\position.rs","byte_start":13595332,"byte_end":13595346,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"PositionFuture","qualname":"::stream::stream::position::PositionFuture","value":"PositionFuture {  }","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\position.rs","byte_start":13595281,"byte_end":13595320,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10362},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\scan.rs","byte_start":13596818,"byte_end":13596822,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":10366},{"krate":0,"index":10367}],"decl_id":null,"docs":" A stream to maintain state while polling another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10322},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\skip.rs","byte_start":13598038,"byte_end":13598042,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":10324},{"krate":0,"index":10325}],"decl_id":null,"docs":" A stream to skip first n elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10273},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\skip_while.rs","byte_start":13599257,"byte_end":13599266,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":10276},{"krate":0,"index":10277}],"decl_id":null,"docs":" A stream to skip elements of another stream based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10229},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\step_by.rs","byte_start":13600800,"byte_end":13600806,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"StepBy","qualname":"::stream::stream::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":10231},{"krate":0,"index":10232},{"krate":0,"index":10233}],"decl_id":null,"docs":" A stream that steps a given amount of elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10186},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\take.rs","byte_start":13602209,"byte_end":13602213,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10188},{"krate":0,"index":10189}],"decl_id":null,"docs":" A stream that yields the first `n` items of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10137},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\take_while.rs","byte_start":13603448,"byte_end":13603457,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":10140},{"krate":0,"index":10141}],"decl_id":null,"docs":" A stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_fold.rs","byte_start":13604466,"byte_end":13604479,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"TryFoldFuture","qualname":"::stream::stream::try_fold::TryFoldFuture","value":"TryFoldFuture {  }","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_fold.rs","byte_start":13604415,"byte_end":13604454,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13605806,"byte_end":13605822,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"TryForEachFuture","qualname":"::stream::stream::try_for_each::TryForEachFuture","value":"TryForEachFuture {  }","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13605755,"byte_end":13605794,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10088},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\zip.rs","byte_start":13607180,"byte_end":13607183,"line_start":17,"line_end":17,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":10091},{"krate":0,"index":10092},{"krate":0,"index":10093}],"decl_id":null,"docs":" A stream that takes items from two other streams simultaneously.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10051},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\count.rs","byte_start":13823626,"byte_end":13823637,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"name":"CountFuture","qualname":"::stream::stream::count::CountFuture","value":"CountFuture {  }","parent":null,"children":[{"krate":0,"index":10053},{"krate":0,"index":10054}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10002},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\merge.rs","byte_start":13824939,"byte_end":13824944,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":10005},{"krate":0,"index":10006}],"decl_id":null,"docs":" A stream that merges two other streams into a single stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9965},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\flatten.rs","byte_start":13826680,"byte_end":13826687,"line_start":18,"line_end":18,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":9967},{"krate":0,"index":9968}],"decl_id":null,"docs":" A stream that flattens one level of nesting in an stream of things that can be turned into\n streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9912},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\flat_map.rs","byte_start":13828825,"byte_end":13828832,"line_start":19,"line_end":19,"column_start":16,"column_end":23},"name":"FlatMap","qualname":"::stream::stream::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":9916},{"krate":0,"index":9917}],"decl_id":null,"docs":" A stream that maps each element to a stream, and yields the elements of the produced\n streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9850},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\partition.rs","byte_start":13830332,"byte_end":13830347,"line_start":13,"line_end":13,"column_start":16,"column_end":31},"name":"PartitionFuture","qualname":"::stream::stream::partition::PartitionFuture","value":"PartitionFuture {  }","parent":null,"children":[{"krate":0,"index":9854},{"krate":0,"index":9855},{"krate":0,"index":9856}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9806},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\timeout.rs","byte_start":13831807,"byte_end":13831814,"line_start":16,"line_end":16,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":9808},{"krate":0,"index":9809},{"krate":0,"index":9810}],"decl_id":null,"docs":" A stream with timeout time set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\timeout.rs","byte_start":13833022,"byte_end":13833034,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::stream::stream::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":3177}],"decl_id":null,"docs":" An error returned when a stream times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a stream times out.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\timeout.rs","byte_start":13832817,"byte_end":13832863,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\timeout.rs","byte_start":13832914,"byte_end":13832965,"line_start":56,"line_end":56,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9761},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\throttle.rs","byte_start":13833832,"byte_end":13833840,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::stream::stream::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":9763},{"krate":0,"index":9764},{"krate":0,"index":9765},{"krate":0,"index":9766}],"decl_id":null,"docs":" A stream that only yields one element once every `duration`.","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9720},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\delay.rs","byte_start":13835344,"byte_end":13835349,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Delay","qualname":"::stream::stream::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":9722},{"krate":0,"index":9723},{"krate":0,"index":9724}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9657},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\unzip.rs","byte_start":13836332,"byte_end":13836343,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"UnzipFuture","qualname":"::stream::stream::unzip::UnzipFuture","value":"UnzipFuture {  }","parent":null,"children":[{"krate":0,"index":9661},{"krate":0,"index":9662}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1686},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13497207,"byte_end":13497216,"line_start":153,"line_end":153,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1695},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1713},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":1723},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1735},{"krate":0,"index":1737},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1755},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1764},{"krate":0,"index":1767},{"krate":0,"index":1769},{"krate":0,"index":1774},{"krate":0,"index":1777},{"krate":0,"index":1779},{"krate":0,"index":1781},{"krate":0,"index":1783},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1798},{"krate":0,"index":1801}],"decl_id":null,"docs":"    Extension methods for [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13497949,"byte_end":13497953,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> NextFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13498497,"byte_end":13498501,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates a stream that yields its first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13499138,"byte_end":13499148,"line_start":234,"line_end":234,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<P>(Self, P) -> TakeWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates a stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13500331,"byte_end":13500339,"line_start":276,"line_end":276,"column_start":8,"column_end":16},"name":"throttle","qualname":"::stream::stream::StreamExt::throttle","value":"pub fn throttle(Self, Duration) -> Throttle<Self> where Self: Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Limit the amount of items yielded per timeslice in a stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13500241,"byte_end":13500269,"line_start":274,"line_end":274,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13501145,"byte_end":13501152,"line_start":312,"line_end":312,"column_start":8,"column_end":15},"name":"step_by","qualname":"::stream::stream::StreamExt::step_by","value":"pub fn step_by(Self, usize) -> StepBy<Self> where Self: Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates a stream that yields each `step`th element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13501964,"byte_end":13501969,"line_start":346,"line_end":346,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Takes two streams and creates a new stream over both in sequence.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13502749,"byte_end":13502755,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"cloned","qualname":"::stream::stream::StreamExt::cloned","value":"pub fn cloned<'a, T>(Self) -> Cloned<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Clone + 'a","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13503517,"byte_end":13503523,"line_start":413,"line_end":413,"column_start":8,"column_end":14},"name":"copied","qualname":"::stream::stream::StreamExt::copied","value":"pub fn copied<'a, T>(Self) -> Copied<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Copy + 'a","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13504263,"byte_end":13504268,"line_start":445,"line_end":445,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Clone + Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates a stream that yields the provided values infinitely and in order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13505074,"byte_end":13505083,"line_start":478,"line_end":478,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates a stream that gives the current element's count as well as the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13506282,"byte_end":13506287,"line_start":519,"line_end":519,"column_start":8,"column_end":13},"name":"delay","qualname":"::stream::stream::StreamExt::delay","value":"pub fn delay(Self, std::time::Duration) -> Delay<Self> where Self: Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates a stream that is delayed before it starts yielding items.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13506169,"byte_end":13506220,"line_start":517,"line_end":517,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13507012,"byte_end":13507015,"line_start":549,"line_end":549,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<B, F>(Self, F) -> Map<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> B","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Takes a closure and creates a stream that calls that closure on every element of this stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13507839,"byte_end":13507846,"line_start":585,"line_end":585,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> ()","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        A combinator that does something with each element in the stream, passing the value\n        on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13508755,"byte_end":13508759,"line_start":629,"line_end":629,"column_start":8,"column_end":12},"name":"last","qualname":"::stream::stream::StreamExt::last","value":"pub fn last(Self) -> LastFuture<Self, Self::Item> where Self: Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Returns the last element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13509567,"byte_end":13509571,"line_start":661,"line_end":661,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates a stream which ends after the first `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13510241,"byte_end":13510247,"line_start":691,"line_end":691,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<P>(Self, P) -> Filter<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates a stream that uses a predicate to determine if an element should be yielded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13511339,"byte_end":13511347,"line_start":731,"line_end":731,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where Self: Sized,\nU: IntoStream, F: FnMut(Self::Item) -> U","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates an stream that works like map, but flattens nested structure.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13511249,"byte_end":13511277,"line_start":729,"line_end":729,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13512160,"byte_end":13512167,"line_start":765,"line_end":765,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self: Sized,\nSelf::Item: IntoStream","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates an stream that flattens nested structure.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13512070,"byte_end":13512098,"line_start":763,"line_end":763,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13513027,"byte_end":13513037,"line_start":806,"line_end":806,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<B, F>(Self, F) -> FilterMap<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Both filters and maps a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13513922,"byte_end":13513932,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::stream::stream::StreamExt::min_by_key","value":"pub fn min_by_key<B, F>(Self, F) -> MinByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value with respect to the\n        specified key function. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13514888,"byte_end":13514898,"line_start":874,"line_end":874,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::stream::stream::StreamExt::max_by_key","value":"pub fn max_by_key<B, F>(Self, F) -> MaxByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value with respect to the\n        specified key function. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13515931,"byte_end":13515937,"line_start":913,"line_end":913,"column_start":8,"column_end":14},"name":"min_by","qualname":"::stream::stream::StreamExt::min_by","value":"pub fn min_by<F>(Self, F) -> MinByFuture<Self, F, Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value with respect to the\n        specified comparison function. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13516793,"byte_end":13516796,"line_start":947,"line_end":947,"column_start":8,"column_end":11},"name":"max","qualname":"::stream::stream::StreamExt::max","value":"pub fn max(Self) -> MaxFuture<Self, Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13517590,"byte_end":13517593,"line_start":980,"line_end":980,"column_start":8,"column_end":11},"name":"min","qualname":"::stream::stream::StreamExt::min","value":"pub fn min(Self) -> MinFuture<Self, Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13518557,"byte_end":13518563,"line_start":1017,"line_end":1017,"column_start":8,"column_end":14},"name":"max_by","qualname":"::stream::stream::StreamExt::max_by","value":"pub fn max_by<F>(Self, F) -> MaxByFuture<Self, F, Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value with respect to the\n        specified comparison function. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13520037,"byte_end":13520040,"line_start":1081,"line_end":1081,"column_start":8,"column_end":11},"name":"nth","qualname":"::stream::stream::StreamExt::nth","value":"pub fn nth(&mut Self, usize) -> NthFuture<, Self> where Self: Unpin + Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Returns the nth element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13521406,"byte_end":13521409,"line_start":1137,"line_end":1137,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13521389,"byte_end":13521398,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13522500,"byte_end":13522504,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"find","qualname":"::stream::stream::StreamExt::find","value":"pub fn find<P>(&mut Self, P) -> FindFuture<, Self, P> where Self: Unpin +\nSized, P: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Searches for an element in a stream that satisfies a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13523181,"byte_end":13523189,"line_start":1214,"line_end":1214,"column_start":8,"column_end":16},"name":"find_map","qualname":"::stream::stream::StreamExt::find_map","value":"pub fn find_map<F, B>(&mut Self, F) -> FindMapFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Applies function to the elements of stream and returns the first non-none result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13523902,"byte_end":13523906,"line_start":1247,"line_end":1247,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        A combinator that applies a function to every element in a stream\n        producing a single, final value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13524773,"byte_end":13524782,"line_start":1285,"line_end":1285,"column_start":8,"column_end":17},"name":"partition","qualname":"::stream::stream::StreamExt::partition","value":"pub fn partition<B, F>(Self, F) -> PartitionFuture<Self, F, B> where\nSelf: Sized, F: FnMut(&Self::Item) -> bool, B: Default + Extend<Self::Item>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        A combinator that applies a function to every element in a stream\n        creating two collections from it.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13524683,"byte_end":13524711,"line_start":1283,"line_end":1283,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13525592,"byte_end":13525600,"line_start":1321,"line_end":1321,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<F>(Self, F) -> ForEachFuture<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> ()","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Call a closure on each element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13526986,"byte_end":13526989,"line_start":1377,"line_end":1377,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13526969,"byte_end":13526978,"line_start":1376,"line_end":1376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13528401,"byte_end":13528407,"line_start":1432,"line_end":1432,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Borrows an stream, rather than consuming it.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13528311,"byte_end":13528339,"line_start":1430,"line_end":1430,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13529675,"byte_end":13529679,"line_start":1473,"line_end":1473,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<St, B, F>(Self, St, F) -> Scan<Self, St, F> where Self: Sized,\nF: FnMut(&mut St, Self::Item) -> Option<B>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        A stream adaptor similar to [`fold`] that holds internal state and produces a new\n        stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13529658,"byte_end":13529667,"line_start":1472,"line_end":1472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13530687,"byte_end":13530697,"line_start":1508,"line_end":1508,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<P>(Self, P) -> SkipWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Combinator that `skip`s elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13531354,"byte_end":13531358,"line_start":1536,"line_end":1536,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Creates a combinator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13532438,"byte_end":13532445,"line_start":1577,"line_end":1577,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Stream + Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Await a stream or times out after a duration of time.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13532325,"byte_end":13532376,"line_start":1575,"line_end":1575,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13533299,"byte_end":13533307,"line_start":1612,"line_end":1612,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::stream::StreamExt::try_fold","value":"pub fn try_fold<B, F, T, E>(&mut Self, T, F) -> TryFoldFuture<, Self, F, T>\nwhere Self: Unpin + Sized, F: FnMut(B, Self::Item) -> Result<T, E>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        A combinator that applies a function as long as it returns successfully, producing a single, final value.\n        Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13534404,"byte_end":13534416,"line_start":1658,"line_end":1658,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::stream::StreamExt::try_for_each","value":"pub fn try_for_each<F, E>(&mut Self, F) -> TryForEachFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Result<(), E>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Applies a falliable function to each element in a stream, stopping at first error and returning it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13535936,"byte_end":13535939,"line_start":1706,"line_end":1706,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<U>(Self, U) -> Zip<Self, U> where Self: Sized, U: Stream","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        'Zips up' two streams into a single stream of pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13535919,"byte_end":13535928,"line_start":1705,"line_end":1705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13536911,"byte_end":13536916,"line_start":1743,"line_end":1743,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> UnzipFuture<Self, FromA, FromB>\nwhere FromA: Default + Extend<A>, FromB: Default + Extend<B>,\nSelf: Stream<Item = (A, B)> + Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Converts an stream of pairs into a pair of containers.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13536821,"byte_end":13536849,"line_start":1741,"line_end":1741,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13539064,"byte_end":13539071,"line_start":1805,"line_end":1805,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<'a, B>(Self) -> Pin<Box<dyn Future<Output = B> + Send + 'a>>\nwhere Self: Sized + 'a + Send, B: FromStream<Self::Item>, Self::Item: Send","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Transforms a stream into a collection.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13538974,"byte_end":13539002,"line_start":1803,"line_end":1803,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13540144,"byte_end":13540149,"line_start":1843,"line_end":1843,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Combines multiple streams into a single stream of all their outputs.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13540054,"byte_end":13540082,"line_start":1841,"line_end":1841,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13541294,"byte_end":13541305,"line_start":1878,"line_end":1878,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::stream::stream::StreamExt::partial_cmp","value":"pub fn partial_cmp<S>(Self, S) -> PartialCmpFuture<Self, S> where\nSelf: Sized + Stream, S: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Lexicographically compares the elements of this `Stream` with those\n        of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13542292,"byte_end":13542300,"line_start":1918,"line_end":1918,"column_start":8,"column_end":16},"name":"position","qualname":"::stream::stream::StreamExt::position","value":"pub fn position<P>(&mut Self, P) -> PositionFuture<, Self, P> where\nSelf: Unpin + Sized, P: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Searches for an element in a Stream that satisfies a predicate, returning\n        its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13543443,"byte_end":13543446,"line_start":1956,"line_end":1956,"column_start":8,"column_end":11},"name":"cmp","qualname":"::stream::stream::StreamExt::cmp","value":"pub fn cmp<S>(Self, S) -> CmpFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: Ord","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Lexicographically compares the elements of this `Stream` with those\n        of another using 'Ord'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13544205,"byte_end":13544210,"line_start":1990,"line_end":1990,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"pub fn count(Self) -> CountFuture<Self> where Self: Sized","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Counts the number of elements in the stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13544115,"byte_end":13544143,"line_start":1988,"line_end":1988,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13545173,"byte_end":13545175,"line_start":2022,"line_end":2022,"column_start":8,"column_end":10},"name":"ne","qualname":"::stream::stream::StreamExt::ne","value":"pub fn ne<S>(Self, S) -> NeFuture<Self, S> where Self: Sized, S: Sized +\nStream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        not equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13546242,"byte_end":13546244,"line_start":2059,"line_end":2059,"column_start":8,"column_end":10},"name":"ge","qualname":"::stream::stream::StreamExt::ge","value":"pub fn ge<S>(Self, S) -> GeFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        greater than or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13547303,"byte_end":13547305,"line_start":2096,"line_end":2096,"column_start":8,"column_end":10},"name":"eq","qualname":"::stream::stream::StreamExt::eq","value":"pub fn eq<S>(Self, S) -> EqFuture<Self, S> where Self: Sized + Stream,\nS: Sized + Stream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13548362,"byte_end":13548364,"line_start":2133,"line_end":2133,"column_start":8,"column_end":10},"name":"gt","qualname":"::stream::stream::StreamExt::gt","value":"pub fn gt<S>(Self, S) -> GtFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        greater than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13549417,"byte_end":13549419,"line_start":2170,"line_end":2170,"column_start":8,"column_end":10},"name":"le","qualname":"::stream::stream::StreamExt::le","value":"pub fn le<S>(Self, S) -> LeFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        less or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13550466,"byte_end":13550468,"line_start":2207,"line_end":2207,"column_start":8,"column_end":10},"name":"lt","qualname":"::stream::stream::StreamExt::lt","value":"pub fn lt<S>(Self, S) -> LtFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        less than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13551529,"byte_end":13551532,"line_start":2252,"line_end":2252,"column_start":8,"column_end":11},"name":"sum","qualname":"::stream::stream::StreamExt::sum","value":"pub fn sum<'a, S>(Self) -> Pin<Box<dyn Future<Output = S> + 'a>> where\nSelf: Sized + Stream<Item = S> + 'a, S: Sum<Self::Item>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Sums the elements of a stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13551439,"byte_end":13551467,"line_start":2250,"line_end":2250,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13552734,"byte_end":13552741,"line_start":2298,"line_end":2298,"column_start":8,"column_end":15},"name":"product","qualname":"::stream::stream::StreamExt::product","value":"pub fn product<'a, P>(Self) -> Pin<Box<dyn Future<Output = P> + 'a>> where\nSelf: Sized + Stream<Item = P> + 'a, P: Product","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"        Multiplies all elements of the stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13552644,"byte_end":13552672,"line_start":2296,"line_end":2296,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13609056,"byte_end":13609061,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ Creates a stream that doesn't yield any items.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608625,"byte_end":13608675,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608676,"byte_end":13608679,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`empty`] function. See its","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608680,"byte_end":13608743,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608744,"byte_end":13608771,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608772,"byte_end":13608775,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608776,"byte_end":13608804,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608805,"byte_end":13608808,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608809,"byte_end":13608823,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608824,"byte_end":13608827,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608828,"byte_end":13608835,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608836,"byte_end":13608875,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608876,"byte_end":13608881,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608882,"byte_end":13608912,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608913,"byte_end":13608939,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608940,"byte_end":13608943,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::empty::<i32>();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608944,"byte_end":13608983,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608984,"byte_end":13608987,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13608988,"byte_end":13609025,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13609026,"byte_end":13609031,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13609032,"byte_end":13609040,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13609041,"byte_end":13609048,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13609298,"byte_end":13609303,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3192}],"decl_id":null,"docs":" A stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ A stream that doesn't yield any items.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13609132,"byte_end":13609174,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13609175,"byte_end":13609178,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This stream is constructed by the [`empty`] function.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13609179,"byte_end":13609236,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13609237,"byte_end":13609240,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13609241,"byte_end":13609269,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3196},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13609823,"byte_end":13609829,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"FromFn","qualname":"::stream::from_fn::FromFn","value":"FromFn {  }","parent":null,"children":[{"krate":0,"index":3198}],"decl_id":null,"docs":" A stream that yields elements by calling a closure.","sig":null,"attributes":[{"value":"/ A stream that yields elements by calling a closure.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13609599,"byte_end":13609654,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13609655,"byte_end":13609658,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`from_fn`] function. See its","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13609659,"byte_end":13609722,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13609723,"byte_end":13609750,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13609751,"byte_end":13609754,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`from_fn`]: fn.from_fn.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13609755,"byte_end":13609787,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1845},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610689,"byte_end":13610696,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"from_fn","qualname":"::stream::from_fn::from_fn","value":"pub fn from_fn<T, F>(F) -> FromFn<F> where F: FnMut() -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a provided closure is called.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a provided closure is called.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13609880,"byte_end":13609968,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13609969,"byte_end":13609972,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows creating a custom stream with any behaviour without using the more verbose","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13609973,"byte_end":13610063,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ syntax of creating a dedicated type and implementing a `Stream` trait for it.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610064,"byte_end":13610145,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610146,"byte_end":13610149,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610150,"byte_end":13610164,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610165,"byte_end":13610168,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610169,"byte_end":13610176,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610177,"byte_end":13610216,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610217,"byte_end":13610222,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610223,"byte_end":13610253,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610254,"byte_end":13610280,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610281,"byte_end":13610284,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0u8;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610285,"byte_end":13610309,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ let s = stream::from_fn(|| {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610310,"byte_end":13610342,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/     count += 1;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610343,"byte_end":13610362,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/     if count > 3 {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610363,"byte_end":13610385,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         None","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610386,"byte_end":13610402,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610403,"byte_end":13610419,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/         Some(count)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610420,"byte_end":13610443,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610444,"byte_end":13610453,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610454,"byte_end":13610461,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610462,"byte_end":13610465,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610466,"byte_end":13610493,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610494,"byte_end":13610497,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610498,"byte_end":13610538,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610539,"byte_end":13610579,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610580,"byte_end":13610620,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610621,"byte_end":13610658,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610659,"byte_end":13610664,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610665,"byte_end":13610673,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610674,"byte_end":13610681,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9618},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611505,"byte_end":13611513,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"name":"FromIter","qualname":"::stream::from_iter::FromIter","value":"FromIter {  }","parent":null,"children":[{"krate":0,"index":9620}],"decl_id":null,"docs":" A stream that was created from iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1873},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13612013,"byte_end":13612022,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::stream::from_iter::from_iter","value":"pub fn from_iter<I: IntoIterator>(I) -> FromIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator into a stream.","sig":null,"attributes":[{"value":"/ Converts an iterator into a stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611545,"byte_end":13611584,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611585,"byte_end":13611588,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611589,"byte_end":13611603,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611604,"byte_end":13611607,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611608,"byte_end":13611615,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611616,"byte_end":13611655,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611656,"byte_end":13611661,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611662,"byte_end":13611692,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611693,"byte_end":13611719,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611720,"byte_end":13611723,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::from_iter(vec![0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611724,"byte_end":13611776,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611777,"byte_end":13611780,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(0));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611781,"byte_end":13611821,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611822,"byte_end":13611862,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611863,"byte_end":13611903,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611904,"byte_end":13611944,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611945,"byte_end":13611982,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611983,"byte_end":13611988,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611989,"byte_end":13611997,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13611998,"byte_end":13612005,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13613108,"byte_end":13613112,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields a single item.","sig":null,"attributes":[{"value":"/ Creates a stream that yields a single item.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612775,"byte_end":13612822,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612823,"byte_end":13612826,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612827,"byte_end":13612841,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612842,"byte_end":13612845,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612846,"byte_end":13612853,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612854,"byte_end":13612893,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612894,"byte_end":13612899,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612900,"byte_end":13612930,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612931,"byte_end":13612957,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612958,"byte_end":13612961,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::once(7);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612962,"byte_end":13612994,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612995,"byte_end":13612998,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13612999,"byte_end":13613039,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13613040,"byte_end":13613077,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13613078,"byte_end":13613083,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13613084,"byte_end":13613092,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13613093,"byte_end":13613100,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9579},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13613412,"byte_end":13613416,"line_start":40,"line_end":40,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":9581}],"decl_id":null,"docs":" A stream that yields a single item.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1925},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614302,"byte_end":13614308,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ Creates a stream that yields the same item repeatedly.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13613953,"byte_end":13614011,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614012,"byte_end":13614015,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614016,"byte_end":13614030,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614031,"byte_end":13614034,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614035,"byte_end":13614042,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614043,"byte_end":13614082,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614083,"byte_end":13614088,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614089,"byte_end":13614119,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614120,"byte_end":13614146,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614147,"byte_end":13614150,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::repeat(7);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614151,"byte_end":13614185,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614186,"byte_end":13614189,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614190,"byte_end":13614230,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614231,"byte_end":13614271,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614272,"byte_end":13614277,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614278,"byte_end":13614286,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614287,"byte_end":13614294,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614595,"byte_end":13614601,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3207}],"decl_id":null,"docs":" A stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ A stream that yields the same item repeatedly.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614379,"byte_end":13614429,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614430,"byte_end":13614433,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat`] function. See its","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614434,"byte_end":13614496,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614497,"byte_end":13614524,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614525,"byte_end":13614528,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614529,"byte_end":13614559,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3214},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615177,"byte_end":13615187,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":3216}],"decl_id":null,"docs":" A stream that repeats elements of type `T` endlessly by applying a provided closure.","sig":null,"attributes":[{"value":"/ A stream that repeats elements of type `T` endlessly by applying a provided closure.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13614908,"byte_end":13614996,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13614997,"byte_end":13615000,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat_with`] function. See its","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615001,"byte_end":13615068,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615069,"byte_end":13615096,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615097,"byte_end":13615100,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`repeat_with`]: fn.repeat_with.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615101,"byte_end":13615141,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1947},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616293,"byte_end":13616304,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<T, F>(F) -> RepeatWith<F> where F: FnMut() -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615242,"byte_end":13615344,"line_start":19,"line_end":19,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615345,"byte_end":13615348,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615349,"byte_end":13615363,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615364,"byte_end":13615367,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615368,"byte_end":13615384,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615385,"byte_end":13615388,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615389,"byte_end":13615396,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615397,"byte_end":13615436,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615437,"byte_end":13615442,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615443,"byte_end":13615473,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615474,"byte_end":13615500,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615501,"byte_end":13615504,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let s = stream::repeat_with(|| 1);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615505,"byte_end":13615543,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615544,"byte_end":13615547,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615548,"byte_end":13615575,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615576,"byte_end":13615579,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615580,"byte_end":13615620,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615621,"byte_end":13615661,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615662,"byte_end":13615702,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615703,"byte_end":13615743,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615744,"byte_end":13615752,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615753,"byte_end":13615760,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615761,"byte_end":13615764,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Going finite:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615765,"byte_end":13615782,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615783,"byte_end":13615786,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615787,"byte_end":13615794,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615795,"byte_end":13615834,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615835,"byte_end":13615840,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615841,"byte_end":13615871,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615872,"byte_end":13615898,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615899,"byte_end":13615902,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut n = 1;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615903,"byte_end":13615921,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ let s = stream::repeat_with(|| {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615922,"byte_end":13615958,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     let item = n;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615959,"byte_end":13615980,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     n *= 2;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615981,"byte_end":13615996,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     item","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615997,"byte_end":13616009,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/ })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616010,"byte_end":13616016,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ .take(4);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616017,"byte_end":13616030,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616031,"byte_end":13616034,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616035,"byte_end":13616062,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616063,"byte_end":13616066,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616067,"byte_end":13616107,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616108,"byte_end":13616148,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(4));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616149,"byte_end":13616189,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(8));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616190,"byte_end":13616230,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616231,"byte_end":13616268,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616269,"byte_end":13616277,"line_start":65,"line_end":65,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616278,"byte_end":13616285,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\next_back.rs","byte_start":13844657,"byte_end":13844671,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"NextBackFuture","qualname":"::stream::double_ended_stream::next_back::NextBackFuture","value":"NextBackFuture {  }","parent":null,"children":[{"krate":0,"index":3257}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\next_back.rs","byte_start":13844606,"byte_end":13844645,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3279},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\nth_back.rs","byte_start":13845182,"byte_end":13845195,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"NthBackFuture","qualname":"::stream::double_ended_stream::nth_back::NthBackFuture","value":"NthBackFuture {  }","parent":null,"children":[{"krate":0,"index":3282},{"krate":0,"index":3283}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\nth_back.rs","byte_start":13845131,"byte_end":13845170,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3310},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfind.rs","byte_start":13846204,"byte_end":13846215,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"RFindFuture","qualname":"::stream::double_ended_stream::rfind::RFindFuture","value":"RFindFuture {  }","parent":null,"children":[{"krate":0,"index":3314},{"krate":0,"index":3315}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfind.rs","byte_start":13846153,"byte_end":13846192,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9522},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfold.rs","byte_start":13847301,"byte_end":13847312,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"RFoldFuture","qualname":"::stream::double_ended_stream::rfold::RFoldFuture","value":"RFoldFuture {  }","parent":null,"children":[{"krate":0,"index":9526},{"krate":0,"index":9527},{"krate":0,"index":9528}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9465},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\try_rfold.rs","byte_start":13848539,"byte_end":13848553,"line_start":12,"line_end":12,"column_start":16,"column_end":30},"name":"TryRFoldFuture","qualname":"::stream::double_ended_stream::try_rfold::TryRFoldFuture","value":"TryRFoldFuture {  }","parent":null,"children":[{"krate":0,"index":9469},{"krate":0,"index":9470},{"krate":0,"index":9471}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13838127,"byte_end":13838144,"line_start":27,"line_end":27,"column_start":11,"column_end":28},"name":"DoubleEndedStream","qualname":"::stream::double_ended_stream::DoubleEndedStream","value":"DoubleEndedStream: Stream","parent":null,"children":[{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3412},{"krate":0,"index":3414},{"krate":0,"index":3417}],"decl_id":null,"docs":" A stream able to yield elements from both ends.","sig":null,"attributes":[{"value":"/ A stream able to yield elements from both ends.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13837748,"byte_end":13837799,"line_start":18,"line_end":18,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13837800,"byte_end":13837803,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Something that implements `DoubleEndedStream` has one extra capability","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13837804,"byte_end":13837878,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ over something that implements [`Stream`]: the ability to also take","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13837879,"byte_end":13837950,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ `Item`s from the back, as well as the front.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13837951,"byte_end":13837999,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13838000,"byte_end":13838003,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13838004,"byte_end":13838037,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13838038,"byte_end":13838066,"line_start":25,"line_end":25,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3409},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13840372,"byte_end":13840386,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"poll_next_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::poll_next_back","value":"pub fn poll_next_back(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":0,"index":3408},"children":[],"decl_id":null,"docs":"        Attempts to receive the next item from the back of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13841278,"byte_end":13841287,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"next_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::next_back","value":"pub fn next_back(&mut Self) -> NextBackFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":3408},"children":[],"decl_id":null,"docs":"            Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3411},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13841930,"byte_end":13841938,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"nth_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::nth_back","value":"pub fn nth_back(&mut Self, usize) -> NthBackFuture<, Self> where Self: Unpin +\nSized","parent":{"krate":0,"index":3408},"children":[],"decl_id":null,"docs":"            Returns the nth element from the back of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3412},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13842620,"byte_end":13842625,"line_start":175,"line_end":175,"column_start":8,"column_end":13},"name":"rfind","qualname":"::stream::double_ended_stream::DoubleEndedStream::rfind","value":"pub fn rfind<P>(&mut Self, P) -> RFindFuture<, Self, P> where Self: Unpin +\nSized, P: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":3408},"children":[],"decl_id":null,"docs":"            Returns the first element from the right that matches the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13843259,"byte_end":13843264,"line_start":203,"line_end":203,"column_start":8,"column_end":13},"name":"rfold","qualname":"::stream::double_ended_stream::DoubleEndedStream::rfold","value":"pub fn rfold<B, F>(Self, B, F) -> RFoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":3408},"children":[],"decl_id":null,"docs":"            # Examples","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13844261,"byte_end":13844270,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_rfold","qualname":"::stream::double_ended_stream::DoubleEndedStream::try_rfold","value":"pub fn try_rfold<B, F, E>(Self, B, F) -> TryRFoldFuture<Self, F, B> where\nSelf: Sized, F: FnMut(B, Self::Item) -> Result<B, E>","parent":{"krate":0,"index":3408},"children":[],"decl_id":null,"docs":"            A combinator that applies a function as long as it returns successfully, producing a single, final value.\n            Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852123,"byte_end":13852138,"line_start":81,"line_end":81,"column_start":11,"column_end":26},"name":"ExactSizeStream","qualname":"::stream::exact_size_stream::ExactSizeStream","value":"ExactSizeStream: Stream","parent":null,"children":[{"krate":0,"index":3426}],"decl_id":null,"docs":" A stream that knows its exact length.","sig":null,"attributes":[{"value":"/ A stream that knows its exact length.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13849728,"byte_end":13849769,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13849770,"byte_end":13849773,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Many [`Stream`]s don't know how many times they will iterate, but some do.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13849774,"byte_end":13849852,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ If a stream knows how many times it can iterate, providing access to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13849853,"byte_end":13849925,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ that information can be useful. For example, if you want to iterate","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13849926,"byte_end":13849997,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ backwards, a good start is to know where the end is.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13849998,"byte_end":13850054,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850055,"byte_end":13850058,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ When implementing an `ExactSizeStream`, you must also implement","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850059,"byte_end":13850126,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`Stream`]. When doing so, the implementation of [`size_hint`] *must*","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850127,"byte_end":13850200,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ return the exact size of the stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850201,"byte_end":13850241,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850242,"byte_end":13850245,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850246,"byte_end":13850279,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/ [`size_hint`]: trait.Stream.html#method.size_hint","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850280,"byte_end":13850333,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850334,"byte_end":13850337,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The [`len`] method has a default implementation, so you usually shouldn't","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850338,"byte_end":13850415,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ implement it. However, you may be able to provide a more performant","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850416,"byte_end":13850487,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ implementation than the default, so overriding it in this case makes sense.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850488,"byte_end":13850567,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850568,"byte_end":13850571,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`len`]: #method.len","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850572,"byte_end":13850596,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850597,"byte_end":13850600,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850601,"byte_end":13850615,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850616,"byte_end":13850619,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850620,"byte_end":13850636,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850637,"byte_end":13850640,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850641,"byte_end":13850648,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ // a finite range knows exactly how many times it will iterate","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850649,"byte_end":13850715,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ let five = 0..5;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850716,"byte_end":13850736,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850737,"byte_end":13850740,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, five.len());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850741,"byte_end":13850771,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850772,"byte_end":13850779,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850780,"byte_end":13850783,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ In the [module level docs][moddocs], we implemented an [`Stream`],","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850784,"byte_end":13850854,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ `Counter`. Let's implement `ExactSizeStream` for it as well:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850855,"byte_end":13850919,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850920,"byte_end":13850923,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [moddocs]: index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850924,"byte_end":13850949,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850950,"byte_end":13850953,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850954,"byte_end":13850961,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13850962,"byte_end":13850999,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851000,"byte_end":13851024,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851025,"byte_end":13851057,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ # struct Counter {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851058,"byte_end":13851080,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/ #     count: usize,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851081,"byte_end":13851104,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851105,"byte_end":13851112,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # impl Counter {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851113,"byte_end":13851133,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/ #     fn new() -> Counter {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851134,"byte_end":13851165,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ #         Counter { count: 0 }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851166,"byte_end":13851200,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851201,"byte_end":13851212,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851213,"byte_end":13851220,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ # impl Stream for Counter {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851221,"byte_end":13851252,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ #     type Item = usize;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851253,"byte_end":13851281,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ #     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851282,"byte_end":13851383,"line_start":53,"line_end":53,"column_start":1,"column_end":102}},{"value":"/ #         self.count += 1;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851384,"byte_end":13851414,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ #         if self.count < 6 {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851415,"byte_end":13851448,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/ #             Poll::Ready(Some(self.count))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851449,"byte_end":13851496,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #         } else {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851497,"byte_end":13851519,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"/ #             Poll::Ready(None)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851520,"byte_end":13851555,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/ #         }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851556,"byte_end":13851571,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851572,"byte_end":13851583,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851584,"byte_end":13851591,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851592,"byte_end":13851631,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851632,"byte_end":13851637,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ impl ExactSizeStream for Counter {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851638,"byte_end":13851676,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/     // We can easily calculate the remaining number of iterations.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851677,"byte_end":13851747,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/     fn len(&self) -> usize {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851748,"byte_end":13851780,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/         5 - self.count","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851781,"byte_end":13851807,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851808,"byte_end":13851817,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851818,"byte_end":13851823,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851824,"byte_end":13851827,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851828,"byte_end":13851857,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851858,"byte_end":13851861,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let counter = Counter::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851862,"byte_end":13851895,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851896,"byte_end":13851899,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, counter.len());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851900,"byte_end":13851933,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/ # });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851934,"byte_end":13851943,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851944,"byte_end":13851951,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13851952,"byte_end":13851990,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852034,"byte_end":13852062,"line_start":79,"line_end":79,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852916,"byte_end":13852919,"line_start":105,"line_end":105,"column_start":8,"column_end":11},"name":"len","qualname":"::stream::exact_size_stream::ExactSizeStream::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":3425},"children":[],"decl_id":null,"docs":" Returns the exact number of times the stream will iterate.","sig":null,"attributes":[{"value":"/ Returns the exact number of times the stream will iterate.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852153,"byte_end":13852215,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852220,"byte_end":13852223,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method has a default implementation, so you usually should not","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852228,"byte_end":13852299,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ implement it directly. However, if you can provide a more efficient","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852304,"byte_end":13852375,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ implementation, you can do so. See the [trait-level] docs for an","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852380,"byte_end":13852448,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/ example.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852453,"byte_end":13852465,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852470,"byte_end":13852473,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function has the same safety guarantees as the [`size_hint`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852478,"byte_end":13852547,"line_start":89,"line_end":89,"column_start":5,"column_end":74}},{"value":"/ function.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852552,"byte_end":13852565,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852570,"byte_end":13852573,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [trait-level]: trait.ExactSizeStream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852578,"byte_end":13852623,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"/ [`size_hint`]: trait.Stream.html#method.size_hint","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852628,"byte_end":13852681,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852686,"byte_end":13852689,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852694,"byte_end":13852708,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852713,"byte_end":13852716,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852721,"byte_end":13852737,"line_start":97,"line_end":97,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852742,"byte_end":13852745,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852750,"byte_end":13852757,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ // a finite range knows exactly how many times it will iterate","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852762,"byte_end":13852828,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ let five = 0..5;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852833,"byte_end":13852853,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852858,"byte_end":13852861,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, five.len());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852866,"byte_end":13852896,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852901,"byte_end":13852908,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3440},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854446,"byte_end":13854452,"line_start":32,"line_end":32,"column_start":11,"column_end":17},"name":"Extend","qualname":"::stream::extend::Extend","value":"Extend<A>","parent":null,"children":[{"krate":0,"index":3442}],"decl_id":null,"docs":" Extends a collection with the contents of a stream.","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13853517,"byte_end":13853572,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13853573,"byte_end":13853576,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Streams produce a series of values asynchronously, and collections can also be thought of as a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13853577,"byte_end":13853675,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ series of values. The `Extend` trait bridges this gap, allowing you to extend a collection","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13853676,"byte_end":13853770,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ asynchronously by including the contents of that stream. When extending a collection with an","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13853771,"byte_end":13853867,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ already existing key, that entry is updated or, in the case of collections that permit multiple","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13853868,"byte_end":13853967,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/ entries with equal keys, that entry is inserted.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13853968,"byte_end":13854020,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854021,"byte_end":13854024,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854025,"byte_end":13854040,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854041,"byte_end":13854044,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854045,"byte_end":13854052,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854053,"byte_end":13854092,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854093,"byte_end":13854098,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854099,"byte_end":13854129,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854130,"byte_end":13854156,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854157,"byte_end":13854160,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut v: Vec<usize> = vec![1, 2];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854161,"byte_end":13854200,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/ let s = stream::repeat(3usize).take(3);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854201,"byte_end":13854244,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ stream::Extend::extend(&mut v, s).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854245,"byte_end":13854289,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854290,"byte_end":13854293,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![1, 2, 3, 3, 3]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854294,"byte_end":13854333,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854334,"byte_end":13854339,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854340,"byte_end":13854348,"line_start":28,"line_end":28,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854349,"byte_end":13854356,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854357,"byte_end":13854385,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854525,"byte_end":13854531,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"extend","qualname":"::stream::extend::Extend::extend","value":"pub fn extend<'a, T: IntoStream<Item = A> + 'a>(&'a mut Self, T)\n-> Pin<Box<dyn Future<Output = ()> + Send + 'a>> where\n<T as IntoStream>::IntoStream: Send","parent":{"krate":0,"index":3440},"children":[],"decl_id":null,"docs":" Extends a collection with the contents of a stream.\n","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854462,"byte_end":13854517,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855685,"byte_end":13855691,"line_start":70,"line_end":70,"column_start":14,"column_end":20},"name":"extend","qualname":"::stream::extend::extend","value":"pub async fn extend<'a, C, T, S, '_>(&'_ mut C, S) -> /*impl Trait*/ where\nC: Extend<T>, S: IntoStream<Item = T> + 'a,\n<S as IntoStream>::IntoStream: Send","parent":null,"children":[],"decl_id":null,"docs":" Extends a collection with the contents of a stream.","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854721,"byte_end":13854776,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854777,"byte_end":13854780,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Streams produce a series of values asynchronously, and collections can also be thought of as a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854781,"byte_end":13854879,"line_start":44,"line_end":44,"column_start":1,"column_end":99}},{"value":"/ series of values. The [`Extend`] trait bridges this gap, allowing you to extend a collection","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854880,"byte_end":13854976,"line_start":45,"line_end":45,"column_start":1,"column_end":97}},{"value":"/ asynchronously by including the contents of that stream. When extending a collection with an","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13854977,"byte_end":13855073,"line_start":46,"line_end":46,"column_start":1,"column_end":97}},{"value":"/ already existing key, that entry is updated or, in the case of collections that permit multiple","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855074,"byte_end":13855173,"line_start":47,"line_end":47,"column_start":1,"column_end":100}},{"value":"/ entries with equal keys, that entry is inserted.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855174,"byte_end":13855226,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855227,"byte_end":13855230,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Extend`]: trait.Extend.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855231,"byte_end":13855264,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855265,"byte_end":13855268,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855269,"byte_end":13855284,"line_start":52,"line_end":52,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855285,"byte_end":13855288,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855289,"byte_end":13855296,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855297,"byte_end":13855336,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855337,"byte_end":13855342,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855343,"byte_end":13855373,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855374,"byte_end":13855400,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855401,"byte_end":13855404,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let mut v: Vec<usize> = vec![1, 2];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855405,"byte_end":13855444,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ let s = stream::repeat(3usize).take(3);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855445,"byte_end":13855488,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ stream::extend(&mut v, s).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855489,"byte_end":13855525,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855526,"byte_end":13855529,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![1, 2, 3, 3, 3]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855530,"byte_end":13855569,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855570,"byte_end":13855575,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855576,"byte_end":13855584,"line_start":66,"line_end":66,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855585,"byte_end":13855592,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\extend.rs","byte_start":13855593,"byte_end":13855621,"line_start":68,"line_end":68,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858871,"byte_end":13858881,"line_start":118,"line_end":118,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::from_stream::FromStream","value":"FromStream<T: Send>","parent":null,"children":[{"krate":0,"index":3464}],"decl_id":null,"docs":" Conversion from a `Stream`.","sig":null,"attributes":[{"value":"/ Conversion from a `Stream`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13855964,"byte_end":13855995,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13855996,"byte_end":13855999,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ By implementing `FromStream` for a type, you define how it will be created from a stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856000,"byte_end":13856093,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ This is common for types which describe a collection of some kind.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856094,"byte_end":13856164,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856165,"byte_end":13856168,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See also: [`IntoStream`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856169,"byte_end":13856198,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856199,"byte_end":13856202,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856203,"byte_end":13856217,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856218,"byte_end":13856221,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856222,"byte_end":13856238,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856239,"byte_end":13856242,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856243,"byte_end":13856250,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856251,"byte_end":13856325,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856326,"byte_end":13856331,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856332,"byte_end":13856362,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream::{self, FromStream};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856363,"byte_end":13856409,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856410,"byte_end":13856413,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856414,"byte_end":13856461,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856462,"byte_end":13856465,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let v = Vec::from_stream(five_fives).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856466,"byte_end":13856513,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856514,"byte_end":13856517,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856518,"byte_end":13856557,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856558,"byte_end":13856563,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856564,"byte_end":13856581,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856582,"byte_end":13856589,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856590,"byte_end":13856593,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Using `collect` to  implicitly use `FromStream`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856594,"byte_end":13856645,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856646,"byte_end":13856649,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856650,"byte_end":13856657,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856658,"byte_end":13856732,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856733,"byte_end":13856738,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856739,"byte_end":13856769,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856770,"byte_end":13856796,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856797,"byte_end":13856844,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856845,"byte_end":13856848,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let v: Vec<i32> = five_fives.collect().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856849,"byte_end":13856898,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856899,"byte_end":13856902,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856903,"byte_end":13856942,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856943,"byte_end":13856948,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856949,"byte_end":13856966,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856967,"byte_end":13856974,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856975,"byte_end":13856978,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromStream` for your type:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13856979,"byte_end":13857023,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857024,"byte_end":13857027,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857028,"byte_end":13857035,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857036,"byte_end":13857066,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream::{self, FromStream, IntoStream};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857067,"byte_end":13857125,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857126,"byte_end":13857148,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857149,"byte_end":13857152,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // A sample collection, that's just a wrapper over Vec<T>","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857153,"byte_end":13857214,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/ #[derive(Debug)]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857215,"byte_end":13857235,"line_start":56,"line_end":56,"column_start":1,"column_end":21}},{"value":"/ struct MyCollection(Vec<i32>);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857236,"byte_end":13857270,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857271,"byte_end":13857274,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Let's give it some methods so we can create one and add things","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857275,"byte_end":13857344,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ // to it.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857345,"byte_end":13857358,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ impl MyCollection {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857359,"byte_end":13857382,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/     fn new() -> MyCollection {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857383,"byte_end":13857417,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/         MyCollection(Vec::new())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857418,"byte_end":13857454,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857455,"byte_end":13857464,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857465,"byte_end":13857468,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     fn add(&mut self, elem: i32) {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857469,"byte_end":13857507,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"/         self.0.push(elem);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857508,"byte_end":13857538,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857539,"byte_end":13857548,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857549,"byte_end":13857554,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857555,"byte_end":13857558,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // and we'll implement FromIterator","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857559,"byte_end":13857598,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ impl FromStream<i32> for MyCollection {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857599,"byte_end":13857642,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/     fn from_stream<'a, S: IntoStream<Item = i32> + 'a>(","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857643,"byte_end":13857702,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/         stream: S,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857703,"byte_end":13857725,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/     ) -> Pin<Box<dyn Future<Output = Self> + 'a + Send>>","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857726,"byte_end":13857786,"line_start":75,"line_end":75,"column_start":1,"column_end":61}},{"value":"/    where","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857787,"byte_end":13857799,"line_start":76,"line_end":76,"column_start":1,"column_end":13}},{"value":"/        <S as IntoStream>::IntoStream: Send,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857800,"byte_end":13857847,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/    {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857848,"byte_end":13857856,"line_start":78,"line_end":78,"column_start":1,"column_end":9}},{"value":"/         let stream = stream.into_stream();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857857,"byte_end":13857903,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857904,"byte_end":13857907,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/         Box::pin(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857908,"byte_end":13857941,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/             let mut c = MyCollection::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857942,"byte_end":13857990,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857991,"byte_end":13857994,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/             let mut v = vec![];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13857995,"byte_end":13858030,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/             stream::extend(&mut v, stream).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858031,"byte_end":13858084,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858085,"byte_end":13858088,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/             for i in v {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858089,"byte_end":13858117,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/                 c.add(i);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858118,"byte_end":13858147,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/             }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858148,"byte_end":13858165,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/             c","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858166,"byte_end":13858183,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/         })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858184,"byte_end":13858198,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858199,"byte_end":13858208,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858209,"byte_end":13858214,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858215,"byte_end":13858218,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858219,"byte_end":13858293,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858294,"byte_end":13858299,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ // Now we can make a new stream...","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858300,"byte_end":13858338,"line_start":97,"line_end":97,"column_start":1,"column_end":39}},{"value":"/ let stream = stream::repeat(5).take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858339,"byte_end":13858382,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858383,"byte_end":13858386,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // ...and make a MyCollection out of it","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858387,"byte_end":13858430,"line_start":100,"line_end":100,"column_start":1,"column_end":44}},{"value":"/ let c = MyCollection::from_stream(stream).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858431,"byte_end":13858483,"line_start":101,"line_end":101,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858484,"byte_end":13858487,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c.0, vec![5, 5, 5, 5, 5]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858488,"byte_end":13858529,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858530,"byte_end":13858533,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // collect works too!","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858534,"byte_end":13858559,"line_start":105,"line_end":105,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858560,"byte_end":13858563,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(5).take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858564,"byte_end":13858607,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/ let c: MyCollection = stream.collect().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858608,"byte_end":13858657,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858658,"byte_end":13858661,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c.0, vec![5, 5, 5, 5, 5]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858662,"byte_end":13858703,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858704,"byte_end":13858709,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858710,"byte_end":13858727,"line_start":112,"line_end":112,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858728,"byte_end":13858735,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858736,"byte_end":13858739,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858740,"byte_end":13858781,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858782,"byte_end":13858810,"line_start":116,"line_end":116,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859406,"byte_end":13859417,"line_start":139,"line_end":139,"column_start":8,"column_end":19},"name":"from_stream","qualname":"::stream::from_stream::FromStream::from_stream","value":"pub fn from_stream<'a, S: IntoStream<Item = T> + 'a>(S)\n-> Pin<Box<dyn Future<Output = Self> + Send + 'a>> where\n<S as IntoStream>::IntoStream: Send","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Creates a value from a stream.","sig":null,"attributes":[{"value":"/ Creates a value from a stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858897,"byte_end":13858931,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858936,"byte_end":13858939,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858944,"byte_end":13858958,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858963,"byte_end":13858966,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858971,"byte_end":13858987,"line_start":123,"line_end":123,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13858992,"byte_end":13858995,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859000,"byte_end":13859007,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859012,"byte_end":13859086,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859091,"byte_end":13859096,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859101,"byte_end":13859131,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ use async_std::stream::{self, FromStream};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859136,"byte_end":13859182,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859187,"byte_end":13859190,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859195,"byte_end":13859242,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859247,"byte_end":13859250,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let v = Vec::from_stream(five_fives).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859255,"byte_end":13859302,"line_start":133,"line_end":133,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859307,"byte_end":13859310,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859315,"byte_end":13859354,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859359,"byte_end":13859364,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859369,"byte_end":13859386,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_stream.rs","byte_start":13859391,"byte_end":13859398,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13860460,"byte_end":13860471,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"FusedStream","qualname":"::stream::fused_stream::FusedStream","value":"FusedStream: Stream","parent":null,"children":[],"decl_id":null,"docs":" A stream that always continues to yield `None` when exhausted.","sig":null,"attributes":[{"value":"/ A stream that always continues to yield `None` when exhausted.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13859615,"byte_end":13859681,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13859682,"byte_end":13859685,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Calling next on a fused stream that has returned `None` once is guaranteed","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13859686,"byte_end":13859764,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ to return [`None`] again. This trait should be implemented by all streams","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13859765,"byte_end":13859842,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ that behave this way because it allows optimizing [`Stream::fuse`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13859843,"byte_end":13859914,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13859915,"byte_end":13859918,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Note: In general, you should not use `FusedStream` in generic bounds if","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13859919,"byte_end":13859994,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ you need a fused stream. Instead, you should just call [`Stream::fuse`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13859995,"byte_end":13860070,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ on the stream. If the stream is already fused, the additional [`Fuse`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13860071,"byte_end":13860145,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ wrapper will be a no-op with no performance penalty.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13860146,"byte_end":13860202,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13860203,"byte_end":13860206,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13860207,"byte_end":13860287,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ [`Stream::fuse`]: trait.Stream.html#method.fuse","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13860288,"byte_end":13860339,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Fuse`]: struct.Fuse.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13860340,"byte_end":13860370,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13860371,"byte_end":13860399,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3501},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861870,"byte_end":13861878,"line_start":46,"line_end":46,"column_start":8,"column_end":16},"name":"interval","qualname":"::stream::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that yields at a set interval.","sig":null,"attributes":[{"value":"/ Creates a new stream that yields at a set interval.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13860719,"byte_end":13860774,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13860775,"byte_end":13860778,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The stream first yields after `dur`, and continues to yield every","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13860779,"byte_end":13860848,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ `dur` after that. The stream accounts for time elapsed between calls, and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13860849,"byte_end":13860926,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ will adjust accordingly to prevent time skews.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13860927,"byte_end":13860977,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13860978,"byte_end":13860981,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Each interval may be slightly longer than the specified duration, but never","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13860982,"byte_end":13861061,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ less.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861062,"byte_end":13861071,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861072,"byte_end":13861075,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Note that intervals are not intended for high resolution timers, but rather","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861076,"byte_end":13861155,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ they will likely fire some granularity after the exact instant that they're","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861156,"byte_end":13861235,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ otherwise indicated to fire at.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861236,"byte_end":13861271,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861272,"byte_end":13861275,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::sleep`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861276,"byte_end":13861306,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861307,"byte_end":13861310,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: ../task/fn.sleep.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861311,"byte_end":13861353,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861354,"byte_end":13861357,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861358,"byte_end":13861372,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861373,"byte_end":13861376,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Basic example:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861377,"byte_end":13861395,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861396,"byte_end":13861399,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861400,"byte_end":13861413,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861414,"byte_end":13861444,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861445,"byte_end":13861471,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861472,"byte_end":13861500,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861501,"byte_end":13861504,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861505,"byte_end":13861579,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861580,"byte_end":13861585,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ let mut interval = stream::interval(Duration::from_secs(4));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861586,"byte_end":13861650,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/ while let Some(_) = interval.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861651,"byte_end":13861698,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/     println!(\"prints every four seconds\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861699,"byte_end":13861745,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861746,"byte_end":13861751,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861752,"byte_end":13861757,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861758,"byte_end":13861775,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861776,"byte_end":13861783,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861784,"byte_end":13861812,"line_start":44,"line_end":44,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3691},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13862289,"byte_end":13862297,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"Interval","qualname":"::stream::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":3692},{"krate":0,"index":3693}],"decl_id":null,"docs":" A stream representing notifications at fixed interval","sig":null,"attributes":[{"value":"/ A stream representing notifications at fixed interval","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13861988,"byte_end":13862045,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13862046,"byte_end":13862049,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`interval`] function. See its","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13862050,"byte_end":13862114,"line_start":55,"line_end":55,"column_start":1,"column_end":65}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13862115,"byte_end":13862142,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13862143,"byte_end":13862146,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: fn.interval.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13862147,"byte_end":13862181,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13862182,"byte_end":13862210,"line_start":59,"line_end":59,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3509},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863283,"byte_end":13863293,"line_start":18,"line_end":18,"column_start":11,"column_end":21},"name":"IntoStream","qualname":"::stream::into_stream::IntoStream","value":"IntoStream","parent":null,"children":[{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512}],"decl_id":null,"docs":" Conversion into a `Stream`.","sig":null,"attributes":[{"value":"/ Conversion into a `Stream`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13862773,"byte_end":13862804,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13862805,"byte_end":13862808,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ By implementing `IntoIterator` for a type, you define how it will be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13862809,"byte_end":13862881,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ converted to an iterator. This is common for types which describe a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13862882,"byte_end":13862953,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ collection of some kind.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13862954,"byte_end":13862982,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13862983,"byte_end":13862986,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`from_stream`]: #tymethod.from_stream","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13862987,"byte_end":13863029,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863030,"byte_end":13863063,"line_start":10,"line_end":10,"column_start":1,"column_end":34}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863064,"byte_end":13863113,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863114,"byte_end":13863117,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See also: [`FromStream`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863118,"byte_end":13863147,"line_start":13,"line_end":13,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863148,"byte_end":13863151,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863152,"byte_end":13863193,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863194,"byte_end":13863222,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":3510},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863359,"byte_end":13863363,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::into_stream::IntoStream::Item","value":"type Item;","parent":{"krate":0,"index":3509},"children":[],"decl_id":null,"docs":" The type of the elements being iterated over.\n","sig":null,"attributes":[{"value":"/ The type of the elements being iterated over.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863300,"byte_end":13863349,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":3511},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863430,"byte_end":13863440,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"name":"IntoStream","qualname":"::stream::into_stream::IntoStream::IntoStream","value":"type IntoStream: Stream<Item = Self::Item>;","parent":{"krate":0,"index":3509},"children":[],"decl_id":null,"docs":" Which kind of stream are we turning this into?\n","sig":null,"attributes":[{"value":"/ Which kind of stream are we turning this into?","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863370,"byte_end":13863420,"line_start":22,"line_end":22,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863516,"byte_end":13863527,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::into_stream::IntoStream::into_stream","value":"pub fn into_stream(Self) -> Self::IntoStream","parent":{"krate":0,"index":3509},"children":[],"decl_id":null,"docs":" Creates a stream from a value.\n","sig":null,"attributes":[{"value":"/ Creates a stream from a value.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863474,"byte_end":13863508,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3696},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864080,"byte_end":13864087,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":3698}],"decl_id":null,"docs":" A stream that never returns any items.","sig":null,"attributes":[{"value":"/ A stream that never returns any items.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13863876,"byte_end":13863918,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13863919,"byte_end":13863922,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`pending`] function. See its","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13863923,"byte_end":13863986,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13863987,"byte_end":13864014,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864015,"byte_end":13864018,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`pending`]: fn.pending.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864019,"byte_end":13864051,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864649,"byte_end":13864656,"line_start":42,"line_end":42,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that never returns any items.","sig":null,"attributes":[{"value":"/ Creates a stream that never returns any items.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864125,"byte_end":13864175,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864176,"byte_end":13864179,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864180,"byte_end":13864245,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864246,"byte_end":13864260,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864261,"byte_end":13864264,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864265,"byte_end":13864272,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864273,"byte_end":13864312,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864313,"byte_end":13864318,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864319,"byte_end":13864347,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864348,"byte_end":13864351,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864352,"byte_end":13864382,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864383,"byte_end":13864409,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864410,"byte_end":13864413,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_millis(100);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864414,"byte_end":13864455,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ let mut s = stream::pending::<()>().timeout(dur);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864456,"byte_end":13864509,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864510,"byte_end":13864513,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let item = s.next().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864514,"byte_end":13864544,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864545,"byte_end":13864548,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ assert!(item.is_some());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864549,"byte_end":13864577,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ assert!(item.unwrap().is_err());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864578,"byte_end":13864614,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864615,"byte_end":13864618,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864619,"byte_end":13864624,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864625,"byte_end":13864633,"line_start":40,"line_end":40,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864634,"byte_end":13864641,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":3569},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865878,"byte_end":13865885,"line_start":18,"line_end":18,"column_start":11,"column_end":18},"name":"Product","qualname":"::stream::product::Product","value":"Product<A = Self>: Sized","parent":null,"children":[{"krate":0,"index":3571}],"decl_id":null,"docs":" Trait to represent types that can be created by multiplying the elements of a stream.","sig":null,"attributes":[{"value":"/ Trait to represent types that can be created by multiplying the elements of a stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865258,"byte_end":13865347,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865348,"byte_end":13865351,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used to implement the [`product`] method on streams. Types which","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865352,"byte_end":13865434,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ implement the trait can be generated by the [`product`] method. Like","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865435,"byte_end":13865507,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ [`FromStream`] this trait should rarely be called directly and instead","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865508,"byte_end":13865582,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ interacted with through [`Stream::product`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865583,"byte_end":13865631,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865632,"byte_end":13865635,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`product`]: trait.Product.html#tymethod.product","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865636,"byte_end":13865688,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865689,"byte_end":13865730,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ [`Stream::product`]: trait.Stream.html#method.product","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865731,"byte_end":13865788,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865789,"byte_end":13865817,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3571},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13866021,"byte_end":13866028,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"product","qualname":"::stream::product::Product::product","value":"pub fn product<'a, S>(S) -> Pin<Box<dyn Future<Output = Self> + 'a>> where\nS: Stream<Item = A> + 'a","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" Method which takes a stream and generates `Self` from the elements by\n multiplying the items.\n","sig":null,"attributes":[{"value":"/ Method which takes a stream and generates `Self` from the elements by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865909,"byte_end":13865982,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ multiplying the items.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865987,"byte_end":13866013,"line_start":20,"line_end":20,"column_start":5,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":3605},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868627,"byte_end":13868637,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"successors","qualname":"::stream::successors::successors","value":"pub fn successors<F, T>(Option<T>, F) -> Successors<F, T> where F: FnMut(&T)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a closure is called with the previous\n value.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a closure is called with the previous","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868013,"byte_end":13868109,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ value.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868110,"byte_end":13868120,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868121,"byte_end":13868124,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868125,"byte_end":13868139,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868140,"byte_end":13868143,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868144,"byte_end":13868151,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868152,"byte_end":13868203,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868204,"byte_end":13868209,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868210,"byte_end":13868240,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868241,"byte_end":13868267,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868268,"byte_end":13868271,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::successors(Some(22), |&val| Some(val + 1));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868272,"byte_end":13868339,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868340,"byte_end":13868343,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(22));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868344,"byte_end":13868385,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(23));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868386,"byte_end":13868427,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(24));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868428,"byte_end":13868469,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(25));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868470,"byte_end":13868511,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868512,"byte_end":13868515,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868516,"byte_end":13868521,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868522,"byte_end":13868532,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868533,"byte_end":13868540,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13868541,"byte_end":13868569,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":9416},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13869141,"byte_end":13869151,"line_start":49,"line_end":49,"column_start":16,"column_end":26},"name":"Successors","qualname":"::stream::successors::Successors","value":"Successors {  }","parent":null,"children":[{"krate":0,"index":9419},{"krate":0,"index":9420}],"decl_id":null,"docs":" A stream that yields elements by calling an async closure with the previous value as an\n argument","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14282904,"byte_end":14282913,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3623},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870473,"byte_end":13870476,"line_start":18,"line_end":18,"column_start":11,"column_end":14},"name":"Sum","qualname":"::stream::sum::Sum","value":"Sum<A = Self>: Sized","parent":null,"children":[{"krate":0,"index":3625}],"decl_id":null,"docs":" Trait to represent types that can be created by summing up a stream.","sig":null,"attributes":[{"value":"/ Trait to represent types that can be created by summing up a stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13869902,"byte_end":13869974,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13869975,"byte_end":13869978,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used to implement the [`sum`] method on streams. Types which","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13869979,"byte_end":13870057,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ implement the trait can be generated by the [`sum`] method. Like","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870058,"byte_end":13870126,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ [`FromStream`] this trait should rarely be called directly and instead","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870127,"byte_end":13870201,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ interacted with through [`Stream::sum`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870202,"byte_end":13870246,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870247,"byte_end":13870250,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`sum`]: trait.Sum.html#tymethod.sum","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870251,"byte_end":13870291,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870292,"byte_end":13870333,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ [`Stream::sum`]: trait.Stream.html#method.sum","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870334,"byte_end":13870383,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870384,"byte_end":13870412,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870613,"byte_end":13870616,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"sum","qualname":"::stream::sum::Sum::sum","value":"pub fn sum<'a, S>(S) -> Pin<Box<dyn Future<Output = Self> + 'a>> where\nS: Stream<Item = A> + 'a","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":" Method which takes a stream and generates `Self` from the elements by\n \"summing up\" the items.\n","sig":null,"attributes":[{"value":"/ Method which takes a stream and generates `Self` from the elements by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870500,"byte_end":13870573,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ \"summing up\" the items.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870578,"byte_end":13870605,"line_start":20,"line_end":20,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":4282},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":4283},{"krate":0,"index":4319},{"krate":0,"index":4320},{"krate":0,"index":4323},{"krate":0,"index":4326},{"krate":0,"index":4329},{"krate":0,"index":4332},{"krate":0,"index":4335},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4342},{"krate":0,"index":4345},{"krate":0,"index":4348},{"krate":0,"index":4351},{"krate":0,"index":4352},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4361},{"krate":0,"index":4364},{"krate":0,"index":4365},{"krate":0,"index":4368},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4379},{"krate":0,"index":4382},{"krate":0,"index":4383},{"krate":0,"index":4386},{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4415},{"krate":0,"index":4609},{"krate":0,"index":4962},{"krate":0,"index":5009},{"krate":0,"index":5206},{"krate":0,"index":5232},{"krate":0,"index":5307},{"krate":0,"index":5369},{"krate":0,"index":5416},{"krate":0,"index":5484},{"krate":0,"index":5519},{"krate":0,"index":5547},{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5612},{"krate":0,"index":5615},{"krate":0,"index":5616},{"krate":0,"index":5619},{"krate":0,"index":5622},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5629},{"krate":0,"index":5630},{"krate":0,"index":5633},{"krate":0,"index":5636},{"krate":0,"index":5639},{"krate":0,"index":5679},{"krate":0,"index":5716},{"krate":0,"index":5763},{"krate":0,"index":5781}],"decl_id":null,"docs":" Traits, helpers, and type definitions for core I/O functionality.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Traits, helpers, and type definitions for core I/O functionality.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872444,"byte_end":13872513,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872514,"byte_end":13872517,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `async_std::io` module contains a number of common things you'll need","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872518,"byte_end":13872595,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ when doing input and output. The most core part of this module is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872596,"byte_end":13872665,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ the [`Read`] and [`Write`] traits, which provide the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872666,"byte_end":13872722,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/ most general interface for reading and writing input and output.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872723,"byte_end":13872791,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872792,"byte_end":13872795,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::io`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872796,"byte_end":13872847,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872848,"byte_end":13872851,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::io`]: https://doc.rust-lang.org/std/io/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872852,"byte_end":13872912,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872913,"byte_end":13872916,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Read and Write","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872917,"byte_end":13872937,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872938,"byte_end":13872941,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, [`Read`] and [`Write`] are implemented by a number","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13872942,"byte_end":13873021,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of other types, and you can implement them for your types too. As such,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873022,"byte_end":13873097,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ you'll see a few different types of I/O throughout the documentation in","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873098,"byte_end":13873173,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ this module: [`File`]s, [`TcpStream`]s, and sometimes even [`Vec<T>`]s. For","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873174,"byte_end":13873253,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ example, [`Read`] adds a [`read`][`Read::read`] method, which we can use on","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873254,"byte_end":13873333,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ [`File`]s:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873334,"byte_end":13873348,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873349,"byte_end":13873352,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873353,"byte_end":13873366,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873367,"byte_end":13873395,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873396,"byte_end":13873426,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873427,"byte_end":13873430,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873431,"byte_end":13873505,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873506,"byte_end":13873511,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873512,"byte_end":13873557,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873558,"byte_end":13873587,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873588,"byte_end":13873591,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873592,"byte_end":13873618,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873619,"byte_end":13873658,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873659,"byte_end":13873662,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873663,"byte_end":13873709,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873710,"byte_end":13873715,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873716,"byte_end":13873733,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873734,"byte_end":13873741,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873742,"byte_end":13873745,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Read`] and [`Write`] are so important, implementors of the two traits have a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873746,"byte_end":13873828,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ nickname: readers and writers. So you'll sometimes see 'a reader' instead","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873829,"byte_end":13873906,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ of 'a type that implements the [`Read`] trait'. Much easier!","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873907,"byte_end":13873971,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873972,"byte_end":13873975,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Seek and BufRead","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13873976,"byte_end":13873999,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874000,"byte_end":13874003,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Beyond that, there are two important traits that are provided: [`Seek`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874004,"byte_end":13874079,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ and [`BufRead`]. Both of these build on top of a reader to control","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874080,"byte_end":13874150,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ how the reading happens. [`Seek`] lets you control where the next byte is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874151,"byte_end":13874228,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ coming from:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874229,"byte_end":13874245,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874246,"byte_end":13874249,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874250,"byte_end":13874263,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874264,"byte_end":13874292,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874293,"byte_end":13874325,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874326,"byte_end":13874356,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874357,"byte_end":13874360,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874361,"byte_end":13874435,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874436,"byte_end":13874441,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874442,"byte_end":13874487,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874488,"byte_end":13874517,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874518,"byte_end":13874521,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // skip to the last 10 bytes of the file","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874522,"byte_end":13874566,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ f.seek(SeekFrom::End(-10)).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874567,"byte_end":13874605,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874606,"byte_end":13874609,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874610,"byte_end":13874636,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874637,"byte_end":13874676,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874677,"byte_end":13874680,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874681,"byte_end":13874727,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874728,"byte_end":13874733,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874734,"byte_end":13874751,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874752,"byte_end":13874759,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874760,"byte_end":13874763,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`] uses an internal buffer to provide a number of other ways to read, but","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874764,"byte_end":13874850,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"/ to show it off, we'll need to talk about buffers in general. Keep reading!","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874851,"byte_end":13874929,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874930,"byte_end":13874933,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## BufReader and BufWriter","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874934,"byte_end":13874964,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874965,"byte_end":13874968,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13874969,"byte_end":13875050,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875051,"byte_end":13875125,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with two structs, [`BufReader`] and [`BufWriter`], which wrap","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875126,"byte_end":13875207,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/ readers and writers. The wrapper uses a buffer, reducing the number of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875208,"byte_end":13875282,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875283,"byte_end":13875357,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875358,"byte_end":13875361,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`BufRead`] trait to add extra","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875362,"byte_end":13875438,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ methods to any reader:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875439,"byte_end":13875465,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875466,"byte_end":13875469,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875470,"byte_end":13875483,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875484,"byte_end":13875512,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875513,"byte_end":13875546,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875547,"byte_end":13875577,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875578,"byte_end":13875581,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875582,"byte_end":13875656,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875657,"byte_end":13875662,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875663,"byte_end":13875704,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/ let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875705,"byte_end":13875744,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875745,"byte_end":13875780,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875781,"byte_end":13875784,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // read a line into buffer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875785,"byte_end":13875815,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/ reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875816,"byte_end":13875857,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875858,"byte_end":13875861,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875862,"byte_end":13875889,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875890,"byte_end":13875895,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875896,"byte_end":13875913,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875914,"byte_end":13875921,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875922,"byte_end":13875925,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13875926,"byte_end":13876007,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"/ to [`write`][`Write::write`]:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876008,"byte_end":13876041,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876042,"byte_end":13876045,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876046,"byte_end":13876059,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876060,"byte_end":13876088,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876089,"byte_end":13876123,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876124,"byte_end":13876157,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876158,"byte_end":13876161,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876162,"byte_end":13876236,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876237,"byte_end":13876242,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876243,"byte_end":13876286,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876287,"byte_end":13876292,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/     let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876293,"byte_end":13876336,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876337,"byte_end":13876340,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     // write a byte to the buffer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876341,"byte_end":13876378,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"/     writer.write(&[42]).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876379,"byte_end":13876414,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"/ } // the buffer is flushed once writer goes out of scope","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876415,"byte_end":13876475,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"/ //","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876476,"byte_end":13876482,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876483,"byte_end":13876488,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876489,"byte_end":13876506,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876507,"byte_end":13876514,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876515,"byte_end":13876518,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Standard input and output","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876519,"byte_end":13876551,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876552,"byte_end":13876555,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ A very common source of input is standard input:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876556,"byte_end":13876608,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876609,"byte_end":13876612,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876613,"byte_end":13876626,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876627,"byte_end":13876649,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876650,"byte_end":13876653,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876654,"byte_end":13876728,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876729,"byte_end":13876734,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876735,"byte_end":13876769,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876770,"byte_end":13876773,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876774,"byte_end":13876819,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876820,"byte_end":13876823,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ println!(\"You typed: {}\", input.trim());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876824,"byte_end":13876868,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876869,"byte_end":13876874,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876875,"byte_end":13876892,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876893,"byte_end":13876900,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876901,"byte_end":13876904,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Note that you cannot use the [`?` operator] in functions that do not return","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876905,"byte_end":13876984,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ a [`Result<T, E>`][`Result`]. Instead, you can call [`.unwrap()`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13876985,"byte_end":13877054,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"/ or `match` on the return value to catch any possible errors:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877055,"byte_end":13877119,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877120,"byte_end":13877123,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877124,"byte_end":13877137,"line_start":147,"line_end":147,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877138,"byte_end":13877160,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877161,"byte_end":13877164,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877165,"byte_end":13877239,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877240,"byte_end":13877245,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877246,"byte_end":13877280,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877281,"byte_end":13877284,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await.unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877285,"byte_end":13877338,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877339,"byte_end":13877344,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877345,"byte_end":13877362,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877363,"byte_end":13877370,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877371,"byte_end":13877374,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ And a very common source of output is standard output:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877375,"byte_end":13877433,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877434,"byte_end":13877437,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877438,"byte_end":13877451,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877452,"byte_end":13877474,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877475,"byte_end":13877509,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877510,"byte_end":13877513,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877514,"byte_end":13877588,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877589,"byte_end":13877594,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"/ io::stdout().write(&[42]).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877595,"byte_end":13877632,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877633,"byte_end":13877638,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877639,"byte_end":13877656,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877657,"byte_end":13877664,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877665,"byte_end":13877668,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Of course, using [`io::stdout`] directly is less common than something like","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877669,"byte_end":13877748,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ [`println!`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877749,"byte_end":13877766,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877767,"byte_end":13877770,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ## Iterator types","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877771,"byte_end":13877792,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877793,"byte_end":13877796,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ A large number of the structures provided by `std::io` are for various","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877797,"byte_end":13877871,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"/ ways of iterating over I/O. For example, [`Lines`] is used to split over","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877872,"byte_end":13877948,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ lines:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877949,"byte_end":13877959,"line_start":179,"line_end":179,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877960,"byte_end":13877963,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877964,"byte_end":13877977,"line_start":181,"line_end":181,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13877978,"byte_end":13878006,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878007,"byte_end":13878040,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878041,"byte_end":13878071,"line_start":184,"line_end":184,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878072,"byte_end":13878075,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878076,"byte_end":13878150,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878151,"byte_end":13878156,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878157,"byte_end":13878198,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ let reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878199,"byte_end":13878234,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878235,"byte_end":13878238,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let mut lines = reader.lines();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878239,"byte_end":13878274,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"/ while let Some(line) = lines.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878275,"byte_end":13878322,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"/     println!(\"{}\", line?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878323,"byte_end":13878353,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878354,"byte_end":13878359,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878360,"byte_end":13878365,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878366,"byte_end":13878383,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878384,"byte_end":13878391,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878392,"byte_end":13878395,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Functions","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878396,"byte_end":13878412,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878413,"byte_end":13878416,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ There are a number of [functions][functions-list] that offer access to various","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878417,"byte_end":13878499,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"/ features. For example, we can use three of these functions to copy everything","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878500,"byte_end":13878581,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"/ from standard input to standard output:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878582,"byte_end":13878625,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878626,"byte_end":13878629,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878630,"byte_end":13878643,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878644,"byte_end":13878666,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878667,"byte_end":13878670,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878671,"byte_end":13878745,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878746,"byte_end":13878751,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/ io::copy(&mut io::stdin(), &mut io::stdout()).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878752,"byte_end":13878809,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878810,"byte_end":13878815,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878816,"byte_end":13878833,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878834,"byte_end":13878841,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878842,"byte_end":13878845,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [functions-list]: #functions-1","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878846,"byte_end":13878880,"line_start":215,"line_end":215,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878881,"byte_end":13878884,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ## io::Result","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878885,"byte_end":13878902,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878903,"byte_end":13878906,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Last, but certainly not least, is [`io::Result`]. This type is used","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878907,"byte_end":13878978,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"/ as the return type of many `std::io` functions that can cause an error, and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13878979,"byte_end":13879058,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ can be returned from your own functions as well. Many of the examples in this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879059,"byte_end":13879140,"line_start":221,"line_end":221,"column_start":1,"column_end":82}},{"value":"/ module use the [`?` operator]:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879141,"byte_end":13879175,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879176,"byte_end":13879179,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879180,"byte_end":13879187,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ #![allow(dead_code)]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879188,"byte_end":13879212,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879213,"byte_end":13879235,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879236,"byte_end":13879239,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ async fn read_input() -> io::Result<()> {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879240,"byte_end":13879285,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/     let mut input = String::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879286,"byte_end":13879324,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879325,"byte_end":13879328,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/     io::stdin().read_line(&mut input).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879329,"byte_end":13879378,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879379,"byte_end":13879382,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/     println!(\"You typed: {}\", input.trim());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879383,"byte_end":13879431,"line_start":233,"line_end":233,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879432,"byte_end":13879435,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879436,"byte_end":13879450,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879451,"byte_end":13879456,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879457,"byte_end":13879464,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879465,"byte_end":13879468,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The return type of `read_input`, [`io::Result<()>`][`io::Result`], is a very","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879469,"byte_end":13879549,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ common type for functions which don't have a 'real' return value, but do want to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879550,"byte_end":13879634,"line_start":240,"line_end":240,"column_start":1,"column_end":85}},{"value":"/ return errors if they happen. In this case, the only purpose of this function is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879635,"byte_end":13879719,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"/ to read the line and print it, so we use `()`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879720,"byte_end":13879770,"line_start":242,"line_end":242,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879771,"byte_end":13879774,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ## Platform-specific behavior","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879775,"byte_end":13879808,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879809,"byte_end":13879812,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Many I/O functions throughout the standard library are documented to indicate","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879813,"byte_end":13879894,"line_start":246,"line_end":246,"column_start":1,"column_end":82}},{"value":"/ what various library or syscalls they are delegated to. This is done to help","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879895,"byte_end":13879975,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"/ applications both understand what's happening under the hood as well as investigate","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13879976,"byte_end":13880063,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"/ any possibly unclear semantics. Note, however, that this is informative, not a binding","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880064,"byte_end":13880154,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"/ contract. The implementation of many of these functions are subject to change over","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880155,"byte_end":13880241,"line_start":250,"line_end":250,"column_start":1,"column_end":87}},{"value":"/ time and may call fewer or more syscalls/library functions.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880242,"byte_end":13880305,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880306,"byte_end":13880309,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880310,"byte_end":13880339,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880340,"byte_end":13880371,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880372,"byte_end":13880401,"line_start":255,"line_end":255,"column_start":1,"column_end":30}},{"value":"/ [`BufRead`]: trait.BufRead.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880402,"byte_end":13880437,"line_start":256,"line_end":256,"column_start":1,"column_end":36}},{"value":"/ [`File`]: ../fs/struct.File.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880438,"byte_end":13880474,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880475,"byte_end":13880522,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/ [`Vec<T>`]: ../vec/struct.Vec.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880523,"byte_end":13880561,"line_start":259,"line_end":259,"column_start":1,"column_end":39}},{"value":"/ [`BufReader`]: struct.BufReader.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880562,"byte_end":13880602,"line_start":260,"line_end":260,"column_start":1,"column_end":41}},{"value":"/ [`BufWriter`]: struct.BufWriter.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880603,"byte_end":13880643,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"/ [`Write::write`]: trait.Write.html#tymethod.write","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880644,"byte_end":13880697,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"/ [`io::stdout`]: fn.stdout.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880698,"byte_end":13880732,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"/ [`println!`]: ../macro.println.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880733,"byte_end":13880772,"line_start":264,"line_end":264,"column_start":1,"column_end":40}},{"value":"/ [`Lines`]: struct.Lines.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880773,"byte_end":13880805,"line_start":265,"line_end":265,"column_start":1,"column_end":33}},{"value":"/ [`io::Result`]: type.Result.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880806,"byte_end":13880842,"line_start":266,"line_end":266,"column_start":1,"column_end":37}},{"value":"/ [`?` operator]: https://doc.rust-lang.org/stable/book/appendix-02-operators.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880843,"byte_end":13880927,"line_start":267,"line_end":267,"column_start":1,"column_end":85}},{"value":"/ [`Read::read`]: trait.Read.html#tymethod.read","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880928,"byte_end":13880977,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"/ [`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13880978,"byte_end":13881047,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ [`.unwrap()`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881048,"byte_end":13881134,"line_start":270,"line_end":270,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":4390},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","parent":null,"children":[{"krate":0,"index":4391},{"krate":0,"index":4394},{"krate":0,"index":4397},{"krate":0,"index":4400},{"krate":0,"index":4403},{"krate":0,"index":4406},{"krate":0,"index":4409},{"krate":0,"index":4412}],"decl_id":null,"docs":" The async I/O prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async I/O prelude.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891213,"byte_end":13891239,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891240,"byte_end":13891243,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The purpose of this module is to alleviate imports of many common I/O traits","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891244,"byte_end":13891324,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ by adding a glob import to the top of I/O heavy modules:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891325,"byte_end":13891385,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891386,"byte_end":13891389,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891390,"byte_end":13891397,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891398,"byte_end":13891429,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891430,"byte_end":13891464,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\prelude.rs","byte_start":13891465,"byte_end":13891472,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9368},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\lines.rs","byte_start":13900004,"byte_end":13900009,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::buf_read::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":9370},{"krate":0,"index":9371},{"krate":0,"index":9372},{"krate":0,"index":9373}],"decl_id":null,"docs":" A stream of lines in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4486},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\read_line.rs","byte_start":13901906,"byte_end":13901920,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ReadLineFuture","qualname":"::io::buf_read::read_line::ReadLineFuture","value":"ReadLineFuture {  }","parent":null,"children":[{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4491},{"krate":0,"index":4492}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\read_line.rs","byte_start":13901855,"byte_end":13901894,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4522},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\read_until.rs","byte_start":13903383,"byte_end":13903398,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadUntilFuture","qualname":"::io::buf_read::read_until::ReadUntilFuture","value":"ReadUntilFuture {  }","parent":null,"children":[{"krate":0,"index":4525},{"krate":0,"index":4526},{"krate":0,"index":4527},{"krate":0,"index":4528}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\read_until.rs","byte_start":13903332,"byte_end":13903371,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9320},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\split.rs","byte_start":13904623,"byte_end":13904628,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::buf_read::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9322},{"krate":0,"index":9323},{"krate":0,"index":9324},{"krate":0,"index":9325}],"decl_id":null,"docs":" A stream over the contents of an instance of [`BufRead`] split on a particular byte.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4598},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","byte_start":13892256,"byte_end":13892266,"line_start":25,"line_end":25,"column_start":11,"column_end":21},"name":"BufReadExt","qualname":"::io::buf_read::BufReadExt","value":"BufReadExt: BufRead","parent":null,"children":[{"krate":0,"index":4599},{"krate":0,"index":4601},{"krate":0,"index":4603},{"krate":0,"index":4604}],"decl_id":null,"docs":"    Extension methods for [`BufRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4599},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","byte_start":13893853,"byte_end":13893863,"line_start":76,"line_end":76,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::buf_read::BufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntilFuture\nwhere Self: Unpin","parent":{"krate":0,"index":4598},"children":[],"decl_id":null,"docs":"        Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4601},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","byte_start":13895445,"byte_end":13895454,"line_start":130,"line_end":130,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::buf_read::BufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLineFuture where\nSelf: Unpin","parent":{"krate":0,"index":4598},"children":[],"decl_id":null,"docs":"        Reads all bytes and appends them into `buf` until a newline (the 0xA byte) is\n        reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4603},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","byte_start":13896709,"byte_end":13896714,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::buf_read::BufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Unpin + Sized","parent":{"krate":0,"index":4598},"children":[],"decl_id":null,"docs":"        Returns a stream over the lines of this byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4604},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","byte_start":13898314,"byte_end":13898319,"line_start":227,"line_end":227,"column_start":8,"column_end":13},"name":"split","qualname":"::io::buf_read::BufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized","parent":{"krate":0,"index":4598},"children":[],"decl_id":null,"docs":"        Returns a stream over the contents of this reader split on the byte `byte`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5577},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\bytes.rs","byte_start":13917521,"byte_end":13917526,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::io::read::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":5579}],"decl_id":null,"docs":" A stream over `u8` values of a reader.","sig":null,"attributes":[{"value":"/ A stream over `u8` values of a reader.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\bytes.rs","byte_start":13917263,"byte_end":13917305,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\bytes.rs","byte_start":13917306,"byte_end":13917309,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`bytes`] on a reader.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\bytes.rs","byte_start":13917310,"byte_end":13917380,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`bytes`] for more details.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\bytes.rs","byte_start":13917381,"byte_end":13917444,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\bytes.rs","byte_start":13917445,"byte_end":13917448,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`bytes`]: trait.Read.html#method.bytes","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\bytes.rs","byte_start":13917449,"byte_end":13917492,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":9271},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919253,"byte_end":13919258,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::read::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9274},{"krate":0,"index":9275},{"krate":0,"index":9276}],"decl_id":null,"docs":" Adaptor to chain together two readers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4668},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919982,"byte_end":13919992,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919431,"byte_end":13919487,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919492,"byte_end":13919495,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919500,"byte_end":13919514,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919519,"byte_end":13919522,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919527,"byte_end":13919540,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919545,"byte_end":13919625,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919630,"byte_end":13919635,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919640,"byte_end":13919670,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919675,"byte_end":13919703,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919708,"byte_end":13919711,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919716,"byte_end":13919764,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919769,"byte_end":13919817,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919822,"byte_end":13919825,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919830,"byte_end":13919871,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.into_inner();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919876,"byte_end":13919926,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919931,"byte_end":13919936,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919941,"byte_end":13919958,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919963,"byte_end":13919970,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4669},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920610,"byte_end":13920617,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920056,"byte_end":13920118,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920123,"byte_end":13920126,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920131,"byte_end":13920145,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920150,"byte_end":13920153,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920158,"byte_end":13920171,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920176,"byte_end":13920256,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920261,"byte_end":13920266,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920271,"byte_end":13920301,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920306,"byte_end":13920334,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920339,"byte_end":13920342,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920347,"byte_end":13920395,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920400,"byte_end":13920448,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920453,"byte_end":13920456,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920461,"byte_end":13920502,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.get_ref();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920507,"byte_end":13920554,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920559,"byte_end":13920564,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920569,"byte_end":13920586,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920591,"byte_end":13920598,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4670},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921433,"byte_end":13921440,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920686,"byte_end":13920756,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920761,"byte_end":13920764,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920769,"byte_end":13920842,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920847,"byte_end":13920920,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920925,"byte_end":13920937,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920942,"byte_end":13920945,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920950,"byte_end":13920964,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920969,"byte_end":13920972,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920977,"byte_end":13920990,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13920995,"byte_end":13921075,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921080,"byte_end":13921085,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921090,"byte_end":13921120,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921125,"byte_end":13921153,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921158,"byte_end":13921161,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921166,"byte_end":13921214,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921219,"byte_end":13921267,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921272,"byte_end":13921275,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut chain = foo_file.chain(bar_file);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921280,"byte_end":13921325,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ let (foo_file, bar_file) = chain.get_mut();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921330,"byte_end":13921377,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921382,"byte_end":13921387,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921392,"byte_end":13921409,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921414,"byte_end":13921421,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4706},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read.rs","byte_start":13924531,"byte_end":13924541,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ReadFuture","qualname":"::io::read::read::ReadFuture","value":"ReadFuture {  }","parent":null,"children":[{"krate":0,"index":4709},{"krate":0,"index":4710}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read.rs","byte_start":13924480,"byte_end":13924519,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4739},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_exact.rs","byte_start":13925111,"byte_end":13925126,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadExactFuture","qualname":"::io::read::read_exact::ReadExactFuture","value":"ReadExactFuture {  }","parent":null,"children":[{"krate":0,"index":4742},{"krate":0,"index":4743}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_exact.rs","byte_start":13925060,"byte_end":13925099,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4769},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_to_end.rs","byte_start":13926012,"byte_end":13926027,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"ReadToEndFuture","qualname":"::io::read::read_to_end::ReadToEndFuture","value":"ReadToEndFuture {  }","parent":null,"children":[{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_to_end.rs","byte_start":13925961,"byte_end":13926000,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4817},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_to_string.rs","byte_start":13928466,"byte_end":13928484,"line_start":12,"line_end":12,"column_start":12,"column_end":30},"name":"ReadToStringFuture","qualname":"::io::read::read_to_string::ReadToStringFuture","value":"ReadToStringFuture {  }","parent":null,"children":[{"krate":0,"index":4820},{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4823}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_to_string.rs","byte_start":13928415,"byte_end":13928454,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4853},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_vectored.rs","byte_start":13929891,"byte_end":13929909,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"ReadVectoredFuture","qualname":"::io::read::read_vectored::ReadVectoredFuture","value":"ReadVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":4856},{"krate":0,"index":4857}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_vectored.rs","byte_start":13929840,"byte_end":13929879,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9231},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13930797,"byte_end":13930801,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::read::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9233},{"krate":0,"index":9234}],"decl_id":null,"docs":" Reader adaptor which limits the bytes read from an underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4891},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931691,"byte_end":13931696,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be read before this instance will\n return EOF.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13930913,"byte_end":13930987,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ return EOF.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13930992,"byte_end":13931007,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931012,"byte_end":13931015,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931020,"byte_end":13931030,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931035,"byte_end":13931038,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931043,"byte_end":13931120,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`Read`] instance reaches EOF.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931125,"byte_end":13931189,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931194,"byte_end":13931197,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931202,"byte_end":13931231,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931236,"byte_end":13931239,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931244,"byte_end":13931258,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931263,"byte_end":13931266,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931271,"byte_end":13931284,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931289,"byte_end":13931369,"line_start":38,"line_end":38,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931374,"byte_end":13931379,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931384,"byte_end":13931414,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931419,"byte_end":13931447,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931452,"byte_end":13931455,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931460,"byte_end":13931501,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931506,"byte_end":13931509,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931514,"byte_end":13931544,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/ let handle = f.take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931549,"byte_end":13931576,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931581,"byte_end":13931584,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ println!(\"limit: {}\", handle.limit());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931589,"byte_end":13931631,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931636,"byte_end":13931641,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/ #     Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931646,"byte_end":13931667,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931672,"byte_end":13931679,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4892},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932485,"byte_end":13932494,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931743,"byte_end":13931814,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931819,"byte_end":13931893,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931898,"byte_end":13931973,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13931978,"byte_end":13932002,"line_start":59,"line_end":59,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932007,"byte_end":13932010,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932015,"byte_end":13932029,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932034,"byte_end":13932037,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932042,"byte_end":13932055,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932060,"byte_end":13932140,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932145,"byte_end":13932150,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932155,"byte_end":13932185,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932190,"byte_end":13932218,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932223,"byte_end":13932226,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932231,"byte_end":13932272,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932277,"byte_end":13932280,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932285,"byte_end":13932315,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/ let mut handle = f.take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932320,"byte_end":13932351,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/ handle.set_limit(10);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932356,"byte_end":13932381,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932386,"byte_end":13932389,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(handle.limit(), 10);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932394,"byte_end":13932429,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932434,"byte_end":13932439,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932444,"byte_end":13932461,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932466,"byte_end":13932473,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4893},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933111,"byte_end":13933121,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932559,"byte_end":13932613,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932618,"byte_end":13932621,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932626,"byte_end":13932640,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932645,"byte_end":13932648,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932653,"byte_end":13932666,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932671,"byte_end":13932751,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932756,"byte_end":13932761,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932766,"byte_end":13932796,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932801,"byte_end":13932829,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932834,"byte_end":13932837,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932842,"byte_end":13932886,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932891,"byte_end":13932894,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932899,"byte_end":13932927,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932932,"byte_end":13932966,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13932971,"byte_end":13933007,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933012,"byte_end":13933015,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let file = handle.into_inner();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933020,"byte_end":13933055,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933060,"byte_end":13933065,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933070,"byte_end":13933087,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933092,"byte_end":13933099,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4894},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933706,"byte_end":13933713,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933165,"byte_end":13933211,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933216,"byte_end":13933219,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933224,"byte_end":13933238,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933243,"byte_end":13933246,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933251,"byte_end":13933264,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933269,"byte_end":13933349,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933354,"byte_end":13933359,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933364,"byte_end":13933394,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933399,"byte_end":13933427,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933432,"byte_end":13933435,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933440,"byte_end":13933484,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933489,"byte_end":13933492,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933497,"byte_end":13933525,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933530,"byte_end":13933564,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933569,"byte_end":13933605,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933610,"byte_end":13933613,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_ref();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933618,"byte_end":13933650,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933655,"byte_end":13933660,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933665,"byte_end":13933682,"line_start":125,"line_end":125,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933687,"byte_end":13933694,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4895},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934488,"byte_end":13934495,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933760,"byte_end":13933814,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933819,"byte_end":13933822,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933827,"byte_end":13933900,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933905,"byte_end":13933977,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933982,"byte_end":13933993,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13933998,"byte_end":13934001,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934006,"byte_end":13934020,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934025,"byte_end":13934028,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934033,"byte_end":13934046,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934051,"byte_end":13934131,"line_start":140,"line_end":140,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934136,"byte_end":13934141,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934146,"byte_end":13934176,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934181,"byte_end":13934209,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934214,"byte_end":13934217,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934222,"byte_end":13934266,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934271,"byte_end":13934274,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934279,"byte_end":13934307,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934312,"byte_end":13934346,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934351,"byte_end":13934387,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934392,"byte_end":13934395,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_mut();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934400,"byte_end":13934432,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934437,"byte_end":13934442,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934447,"byte_end":13934464,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934469,"byte_end":13934476,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4942},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13905976,"byte_end":13905983,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"ReadExt","qualname":"::io::read::ReadExt","value":"ReadExt: Read","parent":null,"children":[{"krate":0,"index":4943},{"krate":0,"index":4945},{"krate":0,"index":4947},{"krate":0,"index":4949},{"krate":0,"index":4951},{"krate":0,"index":4953},{"krate":0,"index":4954},{"krate":0,"index":4955},{"krate":0,"index":4956}],"decl_id":null,"docs":"    Extension methods for [`Read`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4943},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13907059,"byte_end":13907063,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"read","qualname":"::io::read::ReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> ReadFuture where Self: Unpin","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"        Reads some bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4945},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13907736,"byte_end":13907749,"line_start":85,"line_end":85,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::read::ReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut])\n-> ReadVectoredFuture where Self: Unpin","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"        Like [`read`], except that it reads into a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4947},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13908743,"byte_end":13908754,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::read::ReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEndFuture where\nSelf: Unpin","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"        Reads all bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4949},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13909717,"byte_end":13909731,"line_start":161,"line_end":161,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::read::ReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToStringFuture\nwhere Self: Unpin","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"        Reads all bytes from the byte stream and appends them into a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4951},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13911589,"byte_end":13911599,"line_start":216,"line_end":216,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::read::ReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExactFuture where\nSelf: Unpin","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"        Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4953},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13912773,"byte_end":13912777,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"take","qualname":"::io::read::ReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"        Creates an adaptor which will read at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4954},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13913864,"byte_end":13913870,"line_start":302,"line_end":302,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::io::read::ReadExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"        Creates a \"by reference\" adaptor for this instance of `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4955},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13914776,"byte_end":13914781,"line_start":335,"line_end":335,"column_start":8,"column_end":13},"name":"bytes","qualname":"::io::read::ReadExt::bytes","value":"pub fn bytes(Self) -> Bytes<Self> where Self: Sized","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"        Transforms this `Read` instance to a `Stream` over its bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13915808,"byte_end":13915813,"line_start":371,"line_end":371,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::read::ReadExt::chain","value":"pub fn chain<R: Read>(Self, R) -> Chain<Self, R> where Self: Sized","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"        Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4987},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\seek\\seek.rs","byte_start":13938245,"byte_end":13938255,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SeekFuture","qualname":"::io::seek::seek::SeekFuture","value":"SeekFuture {  }","parent":null,"children":[{"krate":0,"index":4990},{"krate":0,"index":4991}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\seek\\seek.rs","byte_start":13938194,"byte_end":13938233,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":5005},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\seek\\mod.rs","byte_start":13937206,"byte_end":13937213,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"SeekExt","qualname":"::io::seek::SeekExt","value":"SeekExt: Seek","parent":null,"children":[{"krate":0,"index":5006}],"decl_id":null,"docs":"    Extension methods for [`Seek`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5006},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\seek\\mod.rs","byte_start":13937854,"byte_end":13937858,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::seek::SeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> SeekFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":5005},"children":[],"decl_id":null,"docs":"        Seeks to a new position in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5031},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\flush.rs","byte_start":13944074,"byte_end":13944085,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"FlushFuture","qualname":"::io::write::flush::FlushFuture","value":"FlushFuture {  }","parent":null,"children":[{"krate":0,"index":5034}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\flush.rs","byte_start":13944023,"byte_end":13944062,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5060},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write.rs","byte_start":13944567,"byte_end":13944578,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"WriteFuture","qualname":"::io::write::write::WriteFuture","value":"WriteFuture {  }","parent":null,"children":[{"krate":0,"index":5063},{"krate":0,"index":5064}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write.rs","byte_start":13944516,"byte_end":13944555,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5093},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_all.rs","byte_start":13945140,"byte_end":13945154,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteAllFuture","qualname":"::io::write::write_all::WriteAllFuture","value":"WriteAllFuture {  }","parent":null,"children":[{"krate":0,"index":5096},{"krate":0,"index":5097}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_all.rs","byte_start":13945089,"byte_end":13945128,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5123},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_fmt.rs","byte_start":13946039,"byte_end":13946053,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteFmtFuture","qualname":"::io::write::write_fmt::WriteFmtFuture","value":"WriteFmtFuture {  }","parent":null,"children":[{"krate":0,"index":5126},{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5129}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_fmt.rs","byte_start":13945976,"byte_end":13946015,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_fmt.rs","byte_start":13946016,"byte_end":13946027,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5158},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_vectored.rs","byte_start":13947609,"byte_end":13947628,"line_start":9,"line_end":9,"column_start":12,"column_end":31},"name":"WriteVectoredFuture","qualname":"::io::write::write_vectored::WriteVectoredFuture","value":"WriteVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":5161},{"krate":0,"index":5162}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_vectored.rs","byte_start":13947558,"byte_end":13947597,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":5192},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\mod.rs","byte_start":13939021,"byte_end":13939029,"line_start":22,"line_end":22,"column_start":11,"column_end":19},"name":"WriteExt","qualname":"::io::write::WriteExt","value":"WriteExt: Write","parent":null,"children":[{"krate":0,"index":5193},{"krate":0,"index":5195},{"krate":0,"index":5196},{"krate":0,"index":5198},{"krate":0,"index":5200}],"decl_id":null,"docs":"    Extension methods for [`Write`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5193},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\mod.rs","byte_start":13939849,"byte_end":13939854,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"write","qualname":"::io::write::WriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> WriteFuture where Self: Unpin","parent":{"krate":0,"index":5192},"children":[],"decl_id":null,"docs":"        Writes some bytes into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5195},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\mod.rs","byte_start":13940513,"byte_end":13940518,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::write::WriteExt::flush","value":"pub fn flush(&mut Self) -> FlushFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":5192},"children":[],"decl_id":null,"docs":"        Flushes the stream to ensure that all buffered contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5196},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\mod.rs","byte_start":13941137,"byte_end":13941151,"line_start":96,"line_end":96,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::write::WriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectoredFuture\nwhere Self: Unpin","parent":{"krate":0,"index":5192},"children":[],"decl_id":null,"docs":"        Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5198},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\mod.rs","byte_start":13942089,"byte_end":13942098,"line_start":132,"line_end":132,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::write::WriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAllFuture where\nSelf: Unpin","parent":{"krate":0,"index":5192},"children":[],"decl_id":null,"docs":"        Writes an entire buffer into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5200},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\mod.rs","byte_start":13943143,"byte_end":13943152,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"::io::write::WriteExt::write_fmt","value":"pub fn write_fmt<'a>(&'a mut Self, std::fmt::Arguments) -> WriteFmtFuture\nwhere Self: Unpin","parent":{"krate":0,"index":5192},"children":[],"decl_id":null,"docs":"        Writes a formatted string into this writer, returning any error encountered.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9186},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13950815,"byte_end":13950824,"line_start":46,"line_end":46,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":9188},{"krate":0,"index":9189},{"krate":0,"index":9190},{"krate":0,"index":9191}],"decl_id":null,"docs":" Adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5281},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951455,"byte_end":13951458,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a buffered reader with default buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a buffered reader with default buffer capacity.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13950973,"byte_end":13951032,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951037,"byte_end":13951040,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default capacity is currently 8 KB, but may change in the future.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951045,"byte_end":13951118,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951123,"byte_end":13951126,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951131,"byte_end":13951145,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951150,"byte_end":13951153,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951158,"byte_end":13951171,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951176,"byte_end":13951250,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951255,"byte_end":13951260,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951265,"byte_end":13951293,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951298,"byte_end":13951331,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951336,"byte_end":13951339,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951344,"byte_end":13951399,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951404,"byte_end":13951409,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951414,"byte_end":13951431,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951436,"byte_end":13951443,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5282},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951971,"byte_end":13951984,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffered reader with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new buffered reader with the specified capacity.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951556,"byte_end":13951618,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951623,"byte_end":13951626,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951631,"byte_end":13951645,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951650,"byte_end":13951653,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951658,"byte_end":13951671,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951676,"byte_end":13951750,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951755,"byte_end":13951760,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951765,"byte_end":13951793,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951798,"byte_end":13951831,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951836,"byte_end":13951839,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::with_capacity(1024, File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951844,"byte_end":13951915,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951920,"byte_end":13951925,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951930,"byte_end":13951947,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13951952,"byte_end":13951959,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5285},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952705,"byte_end":13952712,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952210,"byte_end":13952256,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952261,"byte_end":13952264,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952269,"byte_end":13952335,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952340,"byte_end":13952343,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952348,"byte_end":13952362,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952367,"byte_end":13952370,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952375,"byte_end":13952388,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952393,"byte_end":13952467,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952472,"byte_end":13952477,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952482,"byte_end":13952510,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952515,"byte_end":13952548,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952553,"byte_end":13952556,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952561,"byte_end":13952616,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/ let inner = f.get_ref();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952621,"byte_end":13952649,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952654,"byte_end":13952659,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952664,"byte_end":13952681,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952686,"byte_end":13952693,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5286},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953272,"byte_end":13953279,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952759,"byte_end":13952813,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952818,"byte_end":13952821,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952826,"byte_end":13952892,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952897,"byte_end":13952900,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952905,"byte_end":13952919,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952924,"byte_end":13952927,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952932,"byte_end":13952945,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952950,"byte_end":13953024,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953029,"byte_end":13953034,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953039,"byte_end":13953067,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953072,"byte_end":13953105,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953110,"byte_end":13953113,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut file = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953118,"byte_end":13953180,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ let inner = file.get_mut();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953185,"byte_end":13953216,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953221,"byte_end":13953226,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953231,"byte_end":13953248,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953253,"byte_end":13953260,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5288},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954076,"byte_end":13954082,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953577,"byte_end":13953624,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953629,"byte_end":13953632,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953637,"byte_end":13953706,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953711,"byte_end":13953714,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953719,"byte_end":13953733,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953738,"byte_end":13953741,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953746,"byte_end":13953759,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953764,"byte_end":13953838,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953843,"byte_end":13953848,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953853,"byte_end":13953881,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953886,"byte_end":13953919,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953924,"byte_end":13953927,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953932,"byte_end":13953987,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/ let buffer = f.buffer();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13953992,"byte_end":13954020,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954025,"byte_end":13954030,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954035,"byte_end":13954052,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954057,"byte_end":13954064,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5289},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954664,"byte_end":13954674,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the buffered reader, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps the buffered reader, returning the underlying reader.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954150,"byte_end":13954215,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954220,"byte_end":13954223,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954228,"byte_end":13954291,"line_start":173,"line_end":173,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954296,"byte_end":13954299,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954304,"byte_end":13954318,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954323,"byte_end":13954326,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954331,"byte_end":13954344,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954349,"byte_end":13954423,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954428,"byte_end":13954433,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954438,"byte_end":13954466,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954471,"byte_end":13954504,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954509,"byte_end":13954512,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954517,"byte_end":13954572,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let inner = f.into_inner();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954577,"byte_end":13954608,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954613,"byte_end":13954618,"line_start":185,"line_end":185,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954623,"byte_end":13954640,"line_start":186,"line_end":186,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954645,"byte_end":13954652,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9145},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13963590,"byte_end":13963599,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":9147},{"krate":0,"index":9148},{"krate":0,"index":9149}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5588},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964464,"byte_end":13964478,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::io::buf_writer::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned by `into_inner` which combines an error that\n happened while writing out the buffer, and the buffered writer object\n which may be used to recover from the condition.","sig":null,"attributes":[{"value":"/ An error returned by `into_inner` which combines an error that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13963693,"byte_end":13963759,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/ happened while writing out the buffer, and the buffered writer object","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13963760,"byte_end":13963833,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ which may be used to recover from the condition.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13963834,"byte_end":13963886,"line_start":94,"line_end":94,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13963887,"byte_end":13963890,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13963891,"byte_end":13963905,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13963906,"byte_end":13963909,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13963910,"byte_end":13963923,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13963924,"byte_end":13963998,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13963999,"byte_end":13964032,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964033,"byte_end":13964067,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964068,"byte_end":13964071,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964072,"byte_end":13964154,"line_start":103,"line_end":103,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964155,"byte_end":13964158,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964159,"byte_end":13964207,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"/ let stream = match buf_writer.into_inner().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964208,"byte_end":13964262,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/     Ok(s) => s,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964263,"byte_end":13964282,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/     Err(e) => {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964283,"byte_end":13964302,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/         // Here, e is an IntoInnerError","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964303,"byte_end":13964346,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/         panic!(\"An error occurred\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964347,"byte_end":13964387,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964388,"byte_end":13964397,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964398,"byte_end":13964404,"line_start":112,"line_end":112,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964405,"byte_end":13964410,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964411,"byte_end":13964428,"line_start":114,"line_end":114,"column_start":1,"column_end":18}},{"value":"/```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964429,"byte_end":13964435,"line_start":115,"line_end":115,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":5348},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965061,"byte_end":13965064,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964539,"byte_end":13964631,"line_start":120,"line_end":120,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964636,"byte_end":13964669,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964674,"byte_end":13964677,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964682,"byte_end":13964696,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964701,"byte_end":13964704,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964709,"byte_end":13964722,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964727,"byte_end":13964754,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964759,"byte_end":13964833,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964838,"byte_end":13964871,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964876,"byte_end":13964910,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964915,"byte_end":13964918,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964923,"byte_end":13965005,"line_start":131,"line_end":131,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965010,"byte_end":13965015,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965020,"byte_end":13965037,"line_start":133,"line_end":133,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965042,"byte_end":13965049,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5349},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965731,"byte_end":13965744,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965162,"byte_end":13965227,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965232,"byte_end":13965235,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965240,"byte_end":13965254,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965259,"byte_end":13965262,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Creating a buffer with a buffer of a hundred bytes.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965267,"byte_end":13965322,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965327,"byte_end":13965330,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965335,"byte_end":13965348,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965353,"byte_end":13965380,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965385,"byte_end":13965459,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965464,"byte_end":13965497,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965502,"byte_end":13965536,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965541,"byte_end":13965544,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965549,"byte_end":13965611,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ let mut buffer = BufWriter::with_capacity(100, stream);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965616,"byte_end":13965675,"line_start":152,"line_end":152,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965680,"byte_end":13965685,"line_start":153,"line_end":153,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965690,"byte_end":13965707,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965712,"byte_end":13965719,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5350},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966458,"byte_end":13966465,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965921,"byte_end":13965967,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965972,"byte_end":13965975,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965980,"byte_end":13965994,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13965999,"byte_end":13966002,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966007,"byte_end":13966020,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966025,"byte_end":13966052,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966057,"byte_end":13966131,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966136,"byte_end":13966169,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966174,"byte_end":13966208,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966213,"byte_end":13966216,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966221,"byte_end":13966303,"line_start":174,"line_end":174,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966308,"byte_end":13966311,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966316,"byte_end":13966360,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_ref();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966365,"byte_end":13966402,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966407,"byte_end":13966412,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966417,"byte_end":13966434,"line_start":179,"line_end":179,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966439,"byte_end":13966446,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5351},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967103,"byte_end":13967110,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966512,"byte_end":13966566,"line_start":185,"line_end":185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966571,"byte_end":13966574,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966579,"byte_end":13966644,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966649,"byte_end":13966652,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966657,"byte_end":13966671,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966676,"byte_end":13966679,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966684,"byte_end":13966697,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966702,"byte_end":13966776,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966781,"byte_end":13966814,"line_start":193,"line_end":193,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966819,"byte_end":13966853,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966858,"byte_end":13966861,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966866,"byte_end":13966948,"line_start":196,"line_end":196,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966953,"byte_end":13966956,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13966961,"byte_end":13967005,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_mut();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967010,"byte_end":13967047,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967052,"byte_end":13967057,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967062,"byte_end":13967079,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967084,"byte_end":13967091,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5353},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968176,"byte_end":13968186,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub async fn into_inner(Self) -> /*impl Trait*/ where Self: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Consumes BufWriter, returning the underlying writer","sig":null,"attributes":[{"value":"/ Consumes BufWriter, returning the underlying writer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967407,"byte_end":13967462,"line_start":214,"line_end":214,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967467,"byte_end":13967470,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method will not write leftover data, it will be lost.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967475,"byte_end":13967537,"line_start":216,"line_end":216,"column_start":5,"column_end":67}},{"value":"/ For method that will attempt to write before returning the writer see [`poll_into_inner`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967542,"byte_end":13967635,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967640,"byte_end":13967643,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`poll_into_inner`]: #method.poll_into_inner","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967648,"byte_end":13967696,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967701,"byte_end":13967715,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967720,"byte_end":13967723,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967728,"byte_end":13967741,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967746,"byte_end":13967820,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967825,"byte_end":13967858,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967863,"byte_end":13967897,"line_start":225,"line_end":225,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967902,"byte_end":13967905,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967910,"byte_end":13967992,"line_start":227,"line_end":227,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13967997,"byte_end":13968000,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968005,"byte_end":13968053,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/ let stream = buf_writer.into_inner().await.unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968058,"byte_end":13968114,"line_start":230,"line_end":230,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968119,"byte_end":13968124,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968129,"byte_end":13968146,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968151,"byte_end":13968158,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5356},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968956,"byte_end":13968962,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968423,"byte_end":13968479,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968484,"byte_end":13968487,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968492,"byte_end":13968506,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968511,"byte_end":13968514,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968519,"byte_end":13968532,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968537,"byte_end":13968611,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968616,"byte_end":13968649,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968654,"byte_end":13968688,"line_start":251,"line_end":251,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968693,"byte_end":13968696,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968701,"byte_end":13968783,"line_start":253,"line_end":253,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968788,"byte_end":13968791,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // See how many bytes are currently buffered","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968796,"byte_end":13968844,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ let bytes_buffered = buf_writer.buffer().len();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968849,"byte_end":13968900,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968905,"byte_end":13968910,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968915,"byte_end":13968932,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13968937,"byte_end":13968944,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5405},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13976023,"byte_end":13976027,"line_start":135,"line_end":135,"column_start":14,"column_end":18},"name":"copy","qualname":"::io::copy::copy","value":"pub async fn copy<R, W>(R, W) -> /*impl Trait*/ where R: Read + Unpin,\nW: Write + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"/ Copies the entire contents of a reader into a writer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13974771,"byte_end":13974828,"line_start":97,"line_end":97,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13974829,"byte_end":13974832,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This function will continuously read data from `reader` and then","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13974833,"byte_end":13974901,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ write it into `writer` in a streaming fashion until `reader`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13974902,"byte_end":13974966,"line_start":100,"line_end":100,"column_start":1,"column_end":65}},{"value":"/ returns EOF.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13974967,"byte_end":13974983,"line_start":101,"line_end":101,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13974984,"byte_end":13974987,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes that were copied from","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13974988,"byte_end":13975051,"line_start":103,"line_end":103,"column_start":1,"column_end":64}},{"value":"/ `reader` to `writer` is returned.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975052,"byte_end":13975089,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975090,"byte_end":13975093,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975094,"byte_end":13975174,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ working with filesystem paths, see the [`fs::copy`] function.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975175,"byte_end":13975240,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975241,"byte_end":13975244,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::copy`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975245,"byte_end":13975304,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975305,"byte_end":13975308,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975309,"byte_end":13975377,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/ [`fs::copy`]: ../fs/fn.copy.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975378,"byte_end":13975414,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975415,"byte_end":13975418,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975419,"byte_end":13975431,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975432,"byte_end":13975435,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function will return an error immediately if any call to `read` or","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975436,"byte_end":13975511,"line_start":116,"line_end":116,"column_start":1,"column_end":76}},{"value":"/ `write` returns an error. All instances of `ErrorKind::Interrupted` are","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975512,"byte_end":13975587,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ handled by this function and the underlying operation is retried.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975588,"byte_end":13975657,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975658,"byte_end":13975661,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975662,"byte_end":13975676,"line_start":120,"line_end":120,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975677,"byte_end":13975680,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975681,"byte_end":13975688,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975689,"byte_end":13975763,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975764,"byte_end":13975769,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975770,"byte_end":13975792,"line_start":125,"line_end":125,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975793,"byte_end":13975796,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ let mut reader: &[u8] = b\"hello\";","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975797,"byte_end":13975834,"line_start":127,"line_end":127,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::stdout();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975835,"byte_end":13975869,"line_start":128,"line_end":128,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975870,"byte_end":13975873,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ io::copy(&mut reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975874,"byte_end":13975920,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975921,"byte_end":13975926,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975927,"byte_end":13975944,"line_start":132,"line_end":132,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975945,"byte_end":13975952,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"cfg(all(feature = \"unstable\", not(feature = \"docs\")))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13975953,"byte_end":13976009,"line_start":134,"line_end":134,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5596},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978347,"byte_end":13978353,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":5598}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`Seek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13977523,"byte_end":13977586,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`Seek`] implementation.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13977587,"byte_end":13977615,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13977616,"byte_end":13977619,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13977620,"byte_end":13977688,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13977689,"byte_end":13977761,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13977762,"byte_end":13977841,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13977842,"byte_end":13977867,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13977868,"byte_end":13977871,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13977872,"byte_end":13977946,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13977947,"byte_end":13978014,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978015,"byte_end":13978048,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978049,"byte_end":13978052,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978053,"byte_end":13978082,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978083,"byte_end":13978112,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978113,"byte_end":13978144,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ [`Vec`]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978145,"byte_end":13978207,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978208,"byte_end":13978271,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978272,"byte_end":13978302,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5454},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978940,"byte_end":13978943,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978417,"byte_end":13978492,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978497,"byte_end":13978500,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978505,"byte_end":13978579,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978584,"byte_end":13978652,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978657,"byte_end":13978695,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978700,"byte_end":13978703,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978708,"byte_end":13978722,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978727,"byte_end":13978730,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978735,"byte_end":13978742,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978747,"byte_end":13978777,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978782,"byte_end":13978785,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978790,"byte_end":13978829,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978834,"byte_end":13978882,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978887,"byte_end":13978916,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978921,"byte_end":13978928,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5455},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979402,"byte_end":13979412,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979055,"byte_end":13979112,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979117,"byte_end":13979120,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979125,"byte_end":13979139,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979144,"byte_end":13979147,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979152,"byte_end":13979159,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979164,"byte_end":13979194,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979199,"byte_end":13979202,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979207,"byte_end":13979246,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979251,"byte_end":13979299,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979304,"byte_end":13979333,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979338,"byte_end":13979341,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979346,"byte_end":13979378,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979383,"byte_end":13979390,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5456},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979822,"byte_end":13979829,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979469,"byte_end":13979529,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979534,"byte_end":13979537,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979542,"byte_end":13979556,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979561,"byte_end":13979564,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979569,"byte_end":13979576,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979581,"byte_end":13979611,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979616,"byte_end":13979619,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979624,"byte_end":13979663,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979668,"byte_end":13979716,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979721,"byte_end":13979750,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979755,"byte_end":13979758,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979763,"byte_end":13979798,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979803,"byte_end":13979810,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5457},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980403,"byte_end":13980410,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979885,"byte_end":13979953,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979958,"byte_end":13979961,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13979966,"byte_end":13980039,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980044,"byte_end":13980106,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980111,"byte_end":13980114,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980119,"byte_end":13980133,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980138,"byte_end":13980141,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980146,"byte_end":13980153,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980158,"byte_end":13980188,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980193,"byte_end":13980196,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980201,"byte_end":13980244,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980249,"byte_end":13980297,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980302,"byte_end":13980331,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980336,"byte_end":13980339,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980344,"byte_end":13980379,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980384,"byte_end":13980391,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5458},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981131,"byte_end":13981139,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980474,"byte_end":13980522,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980527,"byte_end":13980530,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980535,"byte_end":13980549,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980554,"byte_end":13980557,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980562,"byte_end":13980569,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980574,"byte_end":13980648,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980653,"byte_end":13980658,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980663,"byte_end":13980693,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980698,"byte_end":13980732,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980737,"byte_end":13980769,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980774,"byte_end":13980777,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980782,"byte_end":13980834,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980839,"byte_end":13980842,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980847,"byte_end":13980882,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980887,"byte_end":13980890,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980895,"byte_end":13980938,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980943,"byte_end":13980978,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980983,"byte_end":13980986,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13980991,"byte_end":13981035,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981040,"byte_end":13981075,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981080,"byte_end":13981085,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981090,"byte_end":13981107,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981112,"byte_end":13981119,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5459},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981609,"byte_end":13981621,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981197,"byte_end":13981234,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981239,"byte_end":13981242,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981247,"byte_end":13981261,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981266,"byte_end":13981269,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981274,"byte_end":13981281,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981286,"byte_end":13981316,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981321,"byte_end":13981324,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981329,"byte_end":13981381,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981386,"byte_end":13981389,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981394,"byte_end":13981429,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981434,"byte_end":13981437,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981442,"byte_end":13981467,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981472,"byte_end":13981507,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981512,"byte_end":13981515,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981520,"byte_end":13981545,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981550,"byte_end":13981585,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981590,"byte_end":13981597,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5508},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985165,"byte_end":13985170,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a reader that contains no data.","sig":null,"attributes":[{"value":"/ Creates a reader that contains no data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13984770,"byte_end":13984813,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13984814,"byte_end":13984817,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13984818,"byte_end":13984832,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13984833,"byte_end":13984836,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13984837,"byte_end":13984848,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13984849,"byte_end":13984923,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13984924,"byte_end":13984929,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13984930,"byte_end":13984952,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13984953,"byte_end":13984983,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13984984,"byte_end":13984987,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13984988,"byte_end":13985017,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985018,"byte_end":13985051,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985052,"byte_end":13985092,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985093,"byte_end":13985096,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985097,"byte_end":13985125,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985126,"byte_end":13985131,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985132,"byte_end":13985149,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985150,"byte_end":13985157,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5509},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985388,"byte_end":13985393,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":5510}],"decl_id":null,"docs":" A reader that contains no data.","sig":null,"attributes":[{"value":"/ A reader that contains no data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985214,"byte_end":13985249,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985250,"byte_end":13985253,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`empty`] function. See its","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985254,"byte_end":13985315,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985316,"byte_end":13985343,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985344,"byte_end":13985347,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985348,"byte_end":13985376,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":5540},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986638,"byte_end":13986644,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986119,"byte_end":13986188,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986189,"byte_end":13986192,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with the given byte.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986193,"byte_end":13986289,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986290,"byte_end":13986293,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986294,"byte_end":13986309,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986310,"byte_end":13986313,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986314,"byte_end":13986325,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986326,"byte_end":13986400,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986401,"byte_end":13986406,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986407,"byte_end":13986429,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986430,"byte_end":13986460,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986461,"byte_end":13986464,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986465,"byte_end":13986493,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ io::repeat(0b101).read_exact(&mut buffer).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986494,"byte_end":13986547,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986548,"byte_end":13986551,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986552,"byte_end":13986598,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986599,"byte_end":13986604,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986605,"byte_end":13986622,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986623,"byte_end":13986630,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5541},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986914,"byte_end":13986920,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":5542}],"decl_id":null,"docs":" A reader which yields one byte over and over and over and over and over and...","sig":null,"attributes":[{"value":"/ A reader which yields one byte over and over and over and over and over and...","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986690,"byte_end":13986772,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986773,"byte_end":13986776,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`repeat`] function. See its","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986777,"byte_end":13986839,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986840,"byte_end":13986867,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986868,"byte_end":13986871,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986872,"byte_end":13986902,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":5568},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987796,"byte_end":13987800,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ Creates a writer that consumes and drops all data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987454,"byte_end":13987508,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987509,"byte_end":13987512,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987513,"byte_end":13987527,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987528,"byte_end":13987531,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987532,"byte_end":13987543,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987544,"byte_end":13987618,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987619,"byte_end":13987624,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987625,"byte_end":13987647,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987648,"byte_end":13987678,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987679,"byte_end":13987682,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987683,"byte_end":13987715,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ writer.write(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987716,"byte_end":13987756,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987757,"byte_end":13987762,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987763,"byte_end":13987780,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987781,"byte_end":13987788,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5569},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13988028,"byte_end":13988032,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":5570}],"decl_id":null,"docs":" A writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ A writer that consumes and drops all data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987842,"byte_end":13987888,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987889,"byte_end":13987892,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This writer is constructed by the [`sink`] function. See its documentation","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987893,"byte_end":13987971,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987972,"byte_end":13987985,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987986,"byte_end":13987989,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`sink`]: fn.sink.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13987990,"byte_end":13988016,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":5669},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989476,"byte_end":13989483,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"name":"timeout","qualname":"::io::timeout::timeout","value":"pub async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where\nF: Future<Output = io::Result<T>>","parent":null,"children":[],"decl_id":null,"docs":" Awaits an I/O future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits an I/O future or times out after a duration of time.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13988863,"byte_end":13988926,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13988927,"byte_end":13988930,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If you want to await a non I/O future consider using","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13988931,"byte_end":13988987,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ [`future::timeout`](../future/fn.timeout.html) instead.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13988988,"byte_end":13989047,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989048,"byte_end":13989051,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989052,"byte_end":13989066,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989067,"byte_end":13989070,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989071,"byte_end":13989084,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989085,"byte_end":13989159,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989160,"byte_end":13989165,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989166,"byte_end":13989194,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989195,"byte_end":13989198,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989199,"byte_end":13989221,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989222,"byte_end":13989225,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ io::timeout(Duration::from_secs(5), async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989226,"byte_end":13989273,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/     let stdin = io::stdin();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989274,"byte_end":13989306,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     let mut line = String::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989307,"byte_end":13989344,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     let n = stdin.read_line(&mut line).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989345,"byte_end":13989395,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989396,"byte_end":13989410,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989411,"byte_end":13989417,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989418,"byte_end":13989430,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989431,"byte_end":13989436,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989437,"byte_end":13989454,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989455,"byte_end":13989462,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5709},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991430,"byte_end":13991436,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard error of the current process.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13990661,"byte_end":13990734,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13990735,"byte_end":13990738,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stderr`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13990739,"byte_end":13990800,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13990801,"byte_end":13990804,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stderr`]: https://doc.rust-lang.org/std/io/fn.stderr.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13990805,"byte_end":13990877,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13990878,"byte_end":13990881,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13990882,"byte_end":13990929,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13990930,"byte_end":13990933,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13990934,"byte_end":13991025,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991026,"byte_end":13991118,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991119,"byte_end":13991132,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991133,"byte_end":13991136,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991137,"byte_end":13991151,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991152,"byte_end":13991155,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991156,"byte_end":13991169,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991170,"byte_end":13991244,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991245,"byte_end":13991250,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991251,"byte_end":13991273,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991274,"byte_end":13991304,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991305,"byte_end":13991308,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stderr = io::stderr();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991309,"byte_end":13991343,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stderr.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991344,"byte_end":13991390,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991391,"byte_end":13991396,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991397,"byte_end":13991414,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991415,"byte_end":13991422,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5818},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13992066,"byte_end":13992072,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard error of the current process.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991594,"byte_end":13991652,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991653,"byte_end":13991656,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stderr`] function. See its documentation for","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991657,"byte_end":13991737,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991738,"byte_end":13991747,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991748,"byte_end":13991751,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991752,"byte_end":13991799,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991800,"byte_end":13991803,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991804,"byte_end":13991895,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991896,"byte_end":13991988,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13991989,"byte_end":13992002,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13992003,"byte_end":13992006,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stderr`]: fn.stderr.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13992007,"byte_end":13992037,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":5752},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997729,"byte_end":13997734,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard input of the current process.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13996975,"byte_end":13997048,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997049,"byte_end":13997052,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdin`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997053,"byte_end":13997113,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997114,"byte_end":13997117,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdin`]: https://doc.rust-lang.org/std/io/fn.stdin.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997118,"byte_end":13997188,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997189,"byte_end":13997192,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997193,"byte_end":13997240,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997241,"byte_end":13997244,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997245,"byte_end":13997336,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997337,"byte_end":13997428,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997429,"byte_end":13997442,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997443,"byte_end":13997446,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997447,"byte_end":13997461,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997462,"byte_end":13997465,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997466,"byte_end":13997479,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997480,"byte_end":13997554,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997555,"byte_end":13997560,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997561,"byte_end":13997583,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997584,"byte_end":13997587,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997588,"byte_end":13997616,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ let mut line = String::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997617,"byte_end":13997650,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997651,"byte_end":13997689,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997690,"byte_end":13997695,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997696,"byte_end":13997713,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997714,"byte_end":13997721,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5856},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13998385,"byte_end":13998390,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard input of the current process.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997917,"byte_end":13997975,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997976,"byte_end":13997979,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`stdin`] function. See its documentation for","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13997980,"byte_end":13998059,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13998060,"byte_end":13998069,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13998070,"byte_end":13998073,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13998074,"byte_end":13998121,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13998122,"byte_end":13998125,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13998126,"byte_end":13998217,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13998218,"byte_end":13998309,"line_start":52,"line_end":52,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13998310,"byte_end":13998323,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13998324,"byte_end":13998327,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`stdin`]: fn.stdin.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13998328,"byte_end":13998356,"line_start":55,"line_end":55,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5754},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999711,"byte_end":13999720,"line_start":112,"line_end":112,"column_start":18,"column_end":27},"name":"read_line","qualname":"<Stdin>::read_line","value":"pub async fn read_line<'_, '_>(&'_ Self, &'_ mut String) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a line of input into the specified buffer.","sig":null,"attributes":[{"value":"/ Reads a line of input into the specified buffer.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999306,"byte_end":13999358,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999363,"byte_end":13999366,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999371,"byte_end":13999385,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999390,"byte_end":13999393,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999398,"byte_end":13999411,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999416,"byte_end":13999490,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999495,"byte_end":13999500,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999505,"byte_end":13999527,"line_start":104,"line_end":104,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999532,"byte_end":13999535,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999540,"byte_end":13999568,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/ let mut line = String::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999573,"byte_end":13999606,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999611,"byte_end":13999649,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999654,"byte_end":13999659,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999664,"byte_end":13999681,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999686,"byte_end":13999693,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5775},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdio.rs","byte_start":14004017,"byte_end":14004023,"line_start":10,"line_end":10,"column_start":14,"column_end":20},"name":"_print","qualname":"::io::stdio::_print","value":"pub async fn _print<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5778},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdio.rs","byte_start":14004194,"byte_end":14004201,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"name":"_eprint","qualname":"::io::stdio::_eprint","value":"pub async fn _eprint<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5811},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005274,"byte_end":14005280,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard output of the current process.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004504,"byte_end":14004578,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004579,"byte_end":14004582,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdout`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004583,"byte_end":14004644,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004645,"byte_end":14004648,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdout`]: https://doc.rust-lang.org/std/io/fn.stdout.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004649,"byte_end":14004721,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004722,"byte_end":14004725,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004726,"byte_end":14004773,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004774,"byte_end":14004777,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004778,"byte_end":14004869,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004870,"byte_end":14004962,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004963,"byte_end":14004976,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004977,"byte_end":14004980,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004981,"byte_end":14004995,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14004996,"byte_end":14004999,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005000,"byte_end":14005013,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005014,"byte_end":14005088,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005089,"byte_end":14005094,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005095,"byte_end":14005117,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005118,"byte_end":14005148,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005149,"byte_end":14005152,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stdout = io::stdout();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005153,"byte_end":14005187,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stdout.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005188,"byte_end":14005234,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005235,"byte_end":14005240,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005241,"byte_end":14005258,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005259,"byte_end":14005266,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5895},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005911,"byte_end":14005917,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard output of the current process.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005438,"byte_end":14005497,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005498,"byte_end":14005501,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stdout`] function. See its documentation","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005502,"byte_end":14005578,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005579,"byte_end":14005592,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005593,"byte_end":14005596,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005597,"byte_end":14005644,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005645,"byte_end":14005648,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005649,"byte_end":14005740,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005741,"byte_end":14005833,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005834,"byte_end":14005847,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005848,"byte_end":14005851,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stdout`]: fn.stdout.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14005852,"byte_end":14005882,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":4284},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\mod.rs","parent":null,"children":[{"krate":0,"index":5933}],"decl_id":null,"docs":" OS-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ OS-specific extensions.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\mod.rs","byte_start":13882567,"byte_end":13882594,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":5933},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::os::windows","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","parent":null,"children":[{"krate":0,"index":5934},{"krate":0,"index":5960},{"krate":0,"index":5982}],"decl_id":null,"docs":" Platform-specific extensions for Windows.\n","sig":null,"attributes":[{"value":"cfg(any(windows, feature = \"docs\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":15675,"byte_end":15713,"line_start":170,"line_end":170,"column_start":13,"column_end":51}},{"value":"/ Platform-specific extensions for Windows.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","byte_start":14010610,"byte_end":14010655,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":5934},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::os::windows::io","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\io.rs","parent":null,"children":[{"krate":0,"index":5935},{"krate":0,"index":5936},{"krate":0,"index":5939},{"krate":0,"index":5942},{"krate":0,"index":5945},{"krate":0,"index":5948},{"krate":0,"index":5951},{"krate":0,"index":5954},{"krate":0,"index":5957}],"decl_id":null,"docs":" Windows-specific I/O extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Windows-specific I/O extensions.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\io.rs","byte_start":14010849,"byte_end":14010885,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":5960},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::os::windows::fs","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","parent":null,"children":[{"krate":0,"index":5961},{"krate":0,"index":5964},{"krate":0,"index":5967},{"krate":0,"index":5970},{"krate":0,"index":5976}],"decl_id":null,"docs":" Windows-specific filesystem extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":14825,"byte_end":14853,"line_start":132,"line_end":132,"column_start":13,"column_end":41}},{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","byte_start":14010707,"byte_end":14010734,"line_start":8,"line_end":8,"column_start":5,"column_end":32}},{"value":"/ Windows-specific filesystem extensions.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014010,"byte_end":14014053,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":5970},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014718,"byte_end":14014729,"line_start":26,"line_end":26,"column_start":14,"column_end":25},"name":"symlink_dir","qualname":"::os::windows::fs::symlink_dir","value":"pub async fn symlink_dir<P: AsRef<Path>, Q: AsRef<Path>>(P, Q)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new directory symbolic link on the filesystem.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014127,"byte_end":14014187,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014188,"byte_end":14014191,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a directory symbolic link pointing to the `src` path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014192,"byte_end":14014272,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014273,"byte_end":14014276,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::os::windows::fs::symlink_dir`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014277,"byte_end":14014356,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014357,"byte_end":14014360,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::os::windows::fs::symlink_dir`]: https://doc.rust-lang.org/std/os/windows/fs/fn.symlink_dir.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014361,"byte_end":14014467,"line_start":13,"line_end":13,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014468,"byte_end":14014471,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014472,"byte_end":14014486,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014487,"byte_end":14014490,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014491,"byte_end":14014504,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014505,"byte_end":14014579,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014580,"byte_end":14014585,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::windows::fs::symlink_dir;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014586,"byte_end":14014634,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014635,"byte_end":14014638,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ symlink_dir(\"a\", \"b\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014639,"byte_end":14014672,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014673,"byte_end":14014678,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014679,"byte_end":14014696,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014697,"byte_end":14014704,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5976},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015553,"byte_end":14015565,"line_start":51,"line_end":51,"column_start":14,"column_end":26},"name":"symlink_file","qualname":"::os::windows::fs::symlink_file","value":"pub async fn symlink_file<P: AsRef<Path>, Q: AsRef<Path>>(P, Q)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new file symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new file symbolic link on the filesystem.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14014959,"byte_end":14015014,"line_start":32,"line_end":32,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015015,"byte_end":14015018,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a file symbolic link pointing to the `src` path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015019,"byte_end":14015094,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015095,"byte_end":14015098,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::os::windows::fs::symlink_file`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015099,"byte_end":14015179,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015180,"byte_end":14015183,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`std::os::windows::fs::symlink_file`]: https://doc.rust-lang.org/std/os/windows/fs/fn.symlink_file.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015184,"byte_end":14015292,"line_start":38,"line_end":38,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015293,"byte_end":14015296,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015297,"byte_end":14015311,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015312,"byte_end":14015315,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015316,"byte_end":14015329,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015330,"byte_end":14015404,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015405,"byte_end":14015410,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::windows::fs::symlink_file;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015411,"byte_end":14015460,"line_start":45,"line_end":45,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015461,"byte_end":14015464,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ symlink_file(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015465,"byte_end":14015507,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015508,"byte_end":14015513,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015514,"byte_end":14015531,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\fs.rs","byte_start":14015532,"byte_end":14015539,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4285},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":5985},{"krate":0,"index":5988},{"krate":0,"index":5991},{"krate":0,"index":5994},{"krate":0,"index":5997},{"krate":0,"index":6000},{"krate":0,"index":6003},{"krate":0,"index":6006},{"krate":0,"index":6009},{"krate":0,"index":6012},{"krate":0,"index":6015},{"krate":0,"index":6018},{"krate":0,"index":6021},{"krate":0,"index":6024},{"krate":0,"index":6027}],"decl_id":null,"docs":" The async prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async prelude.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882668,"byte_end":13882690,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882691,"byte_end":13882694,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The prelude re-exports most commonly used traits and macros from this crate.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882695,"byte_end":13882775,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882776,"byte_end":13882779,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882780,"byte_end":13882794,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882795,"byte_end":13882798,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Import the prelude with:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882799,"byte_end":13882827,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882828,"byte_end":13882831,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882832,"byte_end":13882839,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882840,"byte_end":13882870,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882871,"byte_end":13882901,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\prelude.rs","byte_start":13882902,"byte_end":13882909,"line_start":12,"line_end":12,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4286},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":4287},{"krate":0,"index":4288},{"krate":0,"index":4291},{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4298},{"krate":0,"index":4301},{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4308},{"krate":0,"index":4311},{"krate":0,"index":4314},{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6034},{"krate":0,"index":6037},{"krate":0,"index":6040},{"krate":0,"index":6043},{"krate":0,"index":6130}],"decl_id":null,"docs":" Synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Synchronization primitives.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13883897,"byte_end":13883928,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13883929,"byte_end":13883932,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::sync`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13883933,"byte_end":13883986,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13883987,"byte_end":13883990,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::sync`]: https://doc.rust-lang.org/std/sync/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13883991,"byte_end":13884055,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884056,"byte_end":13884059,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## The need for synchronization","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884060,"byte_end":13884095,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884096,"byte_end":13884099,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ async-std's sync primitives are scheduler-aware, making it possible to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884100,"byte_end":13884174,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ `.await` their operations - for example the locking of a [`Mutex`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884175,"byte_end":13884246,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884247,"byte_end":13884250,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Conceptually, a Rust program is a series of operations which will","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884251,"byte_end":13884320,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ be executed on a computer. The timeline of events happening in the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884321,"byte_end":13884391,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ program is consistent with the order of the operations in the code.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884392,"byte_end":13884463,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884464,"byte_end":13884467,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consider the following code, operating on some global static variables:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884468,"byte_end":13884543,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884544,"byte_end":13884547,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884548,"byte_end":13884555,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ static mut A: u32 = 0;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884556,"byte_end":13884582,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/ static mut B: u32 = 0;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884583,"byte_end":13884609,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ static mut C: u32 = 0;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884610,"byte_end":13884636,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884637,"byte_end":13884640,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884641,"byte_end":13884656,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884657,"byte_end":13884673,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/         A = 3;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884674,"byte_end":13884692,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/         B = 4;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884693,"byte_end":13884711,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/         A = A + B;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884712,"byte_end":13884734,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/         C = B;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884735,"byte_end":13884753,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/         println!(\"{} {} {}\", A, B, C);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884754,"byte_end":13884796,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/         C = A;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884797,"byte_end":13884815,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884816,"byte_end":13884825,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884826,"byte_end":13884831,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884832,"byte_end":13884839,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884840,"byte_end":13884843,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ It appears as if some variables stored in memory are changed, an addition","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884844,"byte_end":13884921,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ is performed, result is stored in `A` and the variable `C` is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884922,"byte_end":13884987,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ modified twice.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13884988,"byte_end":13885007,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885008,"byte_end":13885011,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When only a single thread is involved, the results are as expected:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885012,"byte_end":13885083,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ the line `7 4 4` gets printed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885084,"byte_end":13885118,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885119,"byte_end":13885122,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ As for what happens behind the scenes, when optimizations are enabled the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885123,"byte_end":13885200,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ final generated machine code might look very different from the code:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885201,"byte_end":13885274,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885275,"byte_end":13885278,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - The first store to `C` might be moved before the store to `A` or `B`,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885279,"byte_end":13885354,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/   _as if_ we had written `C = 4; A = 3; B = 4`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885355,"byte_end":13885406,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885407,"byte_end":13885410,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - Assignment of `A + B` to `A` might be removed, since the sum can be stored","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885411,"byte_end":13885491,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/   in a temporary location until it gets printed, with the global variable","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885492,"byte_end":13885569,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/   never getting updated.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885570,"byte_end":13885598,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885599,"byte_end":13885602,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - The final result could be determined just by looking at the code","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885603,"byte_end":13885673,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/   at compile time, so [constant folding] might turn the whole","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885674,"byte_end":13885739,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/   block into a simple `println!(\"7 4 4\")`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885740,"byte_end":13885786,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885787,"byte_end":13885790,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The compiler is allowed to perform any combination of these","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885791,"byte_end":13885854,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/ optimizations, as long as the final optimized code, when executed,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885855,"byte_end":13885925,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ produces the same results as the one without optimizations.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885926,"byte_end":13885989,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885990,"byte_end":13885993,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Due to the [concurrency] involved in modern computers, assumptions","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13885994,"byte_end":13886064,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/ about the program's execution order are often wrong. Access to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886065,"byte_end":13886131,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/ global variables can lead to nondeterministic results, **even if**","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886132,"byte_end":13886202,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ compiler optimizations are disabled, and it is **still possible**","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886203,"byte_end":13886272,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/ to introduce synchronization bugs.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886273,"byte_end":13886311,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886312,"byte_end":13886315,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Note that thanks to Rust's safety guarantees, accessing global (static)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886316,"byte_end":13886391,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ variables requires `unsafe` code, assuming we don't use any of the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886392,"byte_end":13886462,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ synchronization primitives in this module.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886463,"byte_end":13886509,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886510,"byte_end":13886513,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [constant folding]: https://en.wikipedia.org/wiki/Constant_folding","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886514,"byte_end":13886584,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ [concurrency]: https://en.wikipedia.org/wiki/Concurrency_(computer_science)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886585,"byte_end":13886664,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886665,"byte_end":13886668,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Out-of-order execution","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886669,"byte_end":13886698,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886699,"byte_end":13886702,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Instructions can execute in a different order from the one we define, due to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886703,"byte_end":13886783,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"/ various reasons:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886784,"byte_end":13886804,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886805,"byte_end":13886808,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - The **compiler** reordering instructions: If the compiler can issue an","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886809,"byte_end":13886885,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/   instruction at an earlier point, it will try to do so. For example, it","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886886,"byte_end":13886962,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/   might hoist memory loads at the top of a code block, so that the CPU can","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13886963,"byte_end":13887041,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/   start [prefetching] the values from memory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887042,"byte_end":13887091,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887092,"byte_end":13887095,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/   In single-threaded scenarios, this can cause issues when writing","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887096,"byte_end":13887166,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"/   signal handlers or certain kinds of low-level code.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887167,"byte_end":13887224,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/   Use [compiler fences] to prevent this reordering.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887225,"byte_end":13887280,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887281,"byte_end":13887284,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ - A **single processor** executing instructions [out-of-order]:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887285,"byte_end":13887352,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/   Modern CPUs are capable of [superscalar] execution,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887353,"byte_end":13887410,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/   i.e., multiple instructions might be executing at the same time,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887411,"byte_end":13887481,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/   even though the machine code describes a sequential process.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887482,"byte_end":13887548,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887549,"byte_end":13887552,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/   This kind of reordering is handled transparently by the CPU.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887553,"byte_end":13887619,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887620,"byte_end":13887623,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ - A **multiprocessor** system executing multiple hardware threads","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887624,"byte_end":13887693,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"/   at the same time: In multi-threaded scenarios, you can use two","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887694,"byte_end":13887762,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"/   kinds of primitives to deal with synchronization:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887763,"byte_end":13887818,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/   - [memory fences] to ensure memory accesses are made visible to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887819,"byte_end":13887888,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"/   other CPUs in the right order.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887889,"byte_end":13887925,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"/   - [atomic operations] to ensure simultaneous access to the same","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887926,"byte_end":13887995,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/   memory location doesn't lead to undefined behavior.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13887996,"byte_end":13888053,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888054,"byte_end":13888057,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [prefetching]: https://en.wikipedia.org/wiki/Cache_prefetching","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888058,"byte_end":13888124,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"/ [compiler fences]: https://doc.rust-lang.org/std/sync/atomic/fn.compiler_fence.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888125,"byte_end":13888212,"line_start":103,"line_end":103,"column_start":1,"column_end":88}},{"value":"/ [out-of-order]: https://en.wikipedia.org/wiki/Out-of-order_execution","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888213,"byte_end":13888285,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/ [superscalar]: https://en.wikipedia.org/wiki/Superscalar_processor","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888286,"byte_end":13888356,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ [memory fences]: https://doc.rust-lang.org/std/sync/atomic/fn.fence.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888357,"byte_end":13888433,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ [atomic operations]: https://doc.rust-lang.org/std/sync/atomic/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888434,"byte_end":13888511,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888512,"byte_end":13888515,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## Higher-level synchronization objects","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888516,"byte_end":13888559,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888560,"byte_end":13888563,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Most of the low-level synchronization primitives are quite error-prone and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888564,"byte_end":13888642,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ inconvenient to use, which is why async-std also exposes some","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888643,"byte_end":13888708,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"/ higher-level synchronization objects.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888709,"byte_end":13888750,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888751,"byte_end":13888754,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ These abstractions can be built out of lower-level primitives.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888755,"byte_end":13888821,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ For efficiency, the sync objects in async-std are usually","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888822,"byte_end":13888883,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ implemented with help from the scheduler, which is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888884,"byte_end":13888938,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/ able to reschedule the tasks while they are blocked on acquiring","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13888939,"byte_end":13889007,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ a lock.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889008,"byte_end":13889019,"line_start":119,"line_end":119,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889020,"byte_end":13889023,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The following is an overview of the available synchronization","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889024,"byte_end":13889089,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"/ objects:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889090,"byte_end":13889102,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889103,"byte_end":13889106,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ - [`Arc`]: Atomically Reference-Counted pointer, which can be used","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889107,"byte_end":13889177,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/   in multithreaded environments to prolong the lifetime of some","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889178,"byte_end":13889245,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/   data until all the threads have finished using it.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889246,"byte_end":13889302,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889303,"byte_end":13889306,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ - [`Barrier`]: Ensures multiple threads will wait for each other","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889307,"byte_end":13889375,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/   to reach a point in the program, before continuing execution all","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889376,"byte_end":13889446,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/   together.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889447,"byte_end":13889462,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889463,"byte_end":13889466,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ - [`Mutex`]: Mutual exclusion mechanism, which ensures that at","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889467,"byte_end":13889533,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"/   most one task at a time is able to access some data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889534,"byte_end":13889592,"line_start":133,"line_end":133,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889593,"byte_end":13889596,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ - [`RwLock`]: Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889597,"byte_end":13889665,"line_start":135,"line_end":135,"column_start":1,"column_end":69}},{"value":"/   multiple readers at the same time, while allowing only one","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889666,"byte_end":13889730,"line_start":136,"line_end":136,"column_start":1,"column_end":65}},{"value":"/   writer at a time. In some cases, this can be more efficient than","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889731,"byte_end":13889801,"line_start":137,"line_end":137,"column_start":1,"column_end":71}},{"value":"/   a mutex.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889802,"byte_end":13889816,"line_start":138,"line_end":138,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889817,"byte_end":13889820,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ If you're looking for channels, check out","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889821,"byte_end":13889866,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ [`async_std::channel`][crate::channel].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889867,"byte_end":13889910,"line_start":141,"line_end":141,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889911,"byte_end":13889914,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: struct.Arc.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889915,"byte_end":13889943,"line_start":143,"line_end":143,"column_start":1,"column_end":29}},{"value":"/ [`Barrier`]: struct.Barrier.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889944,"byte_end":13889980,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/ [`channel`]: fn.channel.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13889981,"byte_end":13890013,"line_start":145,"line_end":145,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: struct.Mutex.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890014,"byte_end":13890046,"line_start":146,"line_end":146,"column_start":1,"column_end":33}},{"value":"/ [`RwLock`]: struct.RwLock.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890047,"byte_end":13890081,"line_start":147,"line_end":147,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890082,"byte_end":13890085,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890086,"byte_end":13890100,"line_start":149,"line_end":149,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890101,"byte_end":13890104,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Spawn a task that updates an integer protected by a mutex:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890105,"byte_end":13890167,"line_start":151,"line_end":151,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890168,"byte_end":13890171,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890172,"byte_end":13890179,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890180,"byte_end":13890219,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890220,"byte_end":13890225,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890226,"byte_end":13890264,"line_start":156,"line_end":156,"column_start":1,"column_end":39}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890265,"byte_end":13890289,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890290,"byte_end":13890293,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let m1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890294,"byte_end":13890331,"line_start":159,"line_end":159,"column_start":1,"column_end":38}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890332,"byte_end":13890356,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890357,"byte_end":13890360,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890361,"byte_end":13890389,"line_start":162,"line_end":162,"column_start":1,"column_end":29}},{"value":"/     *m2.lock().await = 1;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890390,"byte_end":13890419,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/ })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890420,"byte_end":13890426,"line_start":164,"line_end":164,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890427,"byte_end":13890438,"line_start":165,"line_end":165,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890439,"byte_end":13890442,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(*m1.lock().await, 1);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890443,"byte_end":13890479,"line_start":167,"line_end":167,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890480,"byte_end":13890485,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890486,"byte_end":13890494,"line_start":169,"line_end":169,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890495,"byte_end":13890502,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\mod.rs","byte_start":13890504,"byte_end":13890544,"line_start":172,"line_end":172,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6189},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016034,"byte_end":14016051,"line_start":11,"line_end":11,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::sync::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6074},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016265,"byte_end":14016274,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"pub fn timed_out(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the wait was known to have timed out.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016194,"byte_end":14016253,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6075},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017294,"byte_end":14017301,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::sync::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":6076}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[{"value":"/ A Condition Variable","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016315,"byte_end":14016339,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016340,"byte_end":14016343,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::Condvar`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016344,"byte_end":14016404,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016405,"byte_end":14016408,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::Condvar`]: https://doc.rust-lang.org/std/sync/struct.Condvar.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016409,"byte_end":14016491,"line_start":26,"line_end":26,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016492,"byte_end":14016495,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016496,"byte_end":14016510,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016511,"byte_end":14016514,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016515,"byte_end":14016522,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016523,"byte_end":14016562,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016563,"byte_end":14016568,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016569,"byte_end":14016592,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016593,"byte_end":14016596,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016597,"byte_end":14016639,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016640,"byte_end":14016664,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016665,"byte_end":14016668,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016669,"byte_end":14016730,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016731,"byte_end":14016760,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016761,"byte_end":14016764,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Inside of our lock, spawn a new thread, and then wait for it to start.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016765,"byte_end":14016842,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ task::spawn(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016843,"byte_end":14016871,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016872,"byte_end":14016907,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016908,"byte_end":14016952,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/     *started = true;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016953,"byte_end":14016977,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016978,"byte_end":14017038,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"/     cvar.notify_one();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017039,"byte_end":14017065,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017066,"byte_end":14017073,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017074,"byte_end":14017077,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017078,"byte_end":14017117,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017118,"byte_end":14017148,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017149,"byte_end":14017189,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ while !*started {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017190,"byte_end":14017211,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017212,"byte_end":14017255,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017256,"byte_end":14017261,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017262,"byte_end":14017265,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017266,"byte_end":14017274,"line_start":57,"line_end":57,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017275,"byte_end":14017282,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6082},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017687,"byte_end":14017690,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<Condvar>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable","sig":null,"attributes":[{"value":"/ Creates a new condition variable","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017499,"byte_end":14017535,"line_start":73,"line_end":73,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017540,"byte_end":14017543,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017548,"byte_end":14017562,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017567,"byte_end":14017570,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017575,"byte_end":14017582,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::Condvar;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017587,"byte_end":14017620,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017625,"byte_end":14017628,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let cvar = Condvar::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017633,"byte_end":14017663,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017668,"byte_end":14017675,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6083},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018913,"byte_end":14018917,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"name":"wait","qualname":"<Condvar>::wait","value":"pub async fn wait<'a, T, '_>(&'_ Self, MutexGuard) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current task until this condition variable receives a notification.","sig":null,"attributes":[{"value":"/ Blocks the current task until this condition variable receives a notification.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017779,"byte_end":14017861,"line_start":88,"line_end":88,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017866,"byte_end":14017869,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Unlike the std equivalent, this does not check that a single mutex is used at runtime.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017874,"byte_end":14017964,"line_start":90,"line_end":90,"column_start":5,"column_end":95}},{"value":"/ However, as a best practice avoid using with multiple mutexes.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017969,"byte_end":14018035,"line_start":91,"line_end":91,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018040,"byte_end":14018043,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018048,"byte_end":14018062,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018067,"byte_end":14018070,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018075,"byte_end":14018082,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018087,"byte_end":14018126,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018131,"byte_end":14018154,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018159,"byte_end":14018162,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018167,"byte_end":14018209,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018214,"byte_end":14018238,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018243,"byte_end":14018246,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018251,"byte_end":14018312,"line_start":102,"line_end":102,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018317,"byte_end":14018346,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018351,"byte_end":14018354,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018359,"byte_end":14018387,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018392,"byte_end":14018427,"line_start":106,"line_end":106,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018432,"byte_end":14018476,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018481,"byte_end":14018505,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018510,"byte_end":14018570,"line_start":109,"line_end":109,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018575,"byte_end":14018601,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018606,"byte_end":14018613,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018618,"byte_end":14018621,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018626,"byte_end":14018665,"line_start":113,"line_end":113,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018670,"byte_end":14018700,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018705,"byte_end":14018745,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/ while !*started {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018750,"byte_end":14018771,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018776,"byte_end":14018819,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018824,"byte_end":14018829,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018834,"byte_end":14018842,"line_start":119,"line_end":119,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018847,"byte_end":14018854,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14018859,"byte_end":14018895,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6091},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020478,"byte_end":14020488,"line_start":171,"line_end":171,"column_start":18,"column_end":28},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"pub async fn wait_until<'a, T, F, '_>(&'_ Self, MutexGuard, F)\n-> /*impl Trait*/ where F: FnMut(&mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current taks until this condition variable receives a notification and the\n required condition is met. Spurious wakeups are ignored and this function will only\n return once the condition has been met.","sig":null,"attributes":[{"value":"/ Blocks the current taks until this condition variable receives a notification and the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019315,"byte_end":14019404,"line_start":138,"line_end":138,"column_start":5,"column_end":94}},{"value":"/ required condition is met. Spurious wakeups are ignored and this function will only","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019409,"byte_end":14019496,"line_start":139,"line_end":139,"column_start":5,"column_end":92}},{"value":"/ return once the condition has been met.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019501,"byte_end":14019544,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019549,"byte_end":14019552,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019557,"byte_end":14019571,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019576,"byte_end":14019579,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019584,"byte_end":14019591,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019596,"byte_end":14019635,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019640,"byte_end":14019645,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019650,"byte_end":14019673,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019678,"byte_end":14019681,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019686,"byte_end":14019728,"line_start":149,"line_end":149,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019733,"byte_end":14019757,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019762,"byte_end":14019765,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019770,"byte_end":14019831,"line_start":152,"line_end":152,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019836,"byte_end":14019865,"line_start":153,"line_end":153,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019870,"byte_end":14019873,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019878,"byte_end":14019906,"line_start":155,"line_end":155,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019911,"byte_end":14019946,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14019951,"byte_end":14019995,"line_start":157,"line_end":157,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020000,"byte_end":14020024,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020029,"byte_end":14020089,"line_start":159,"line_end":159,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020094,"byte_end":14020120,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020125,"byte_end":14020132,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020137,"byte_end":14020140,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020145,"byte_end":14020184,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020189,"byte_end":14020219,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"/ // As long as the value inside the `Mutex<bool>` is `false`, we wait.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020224,"byte_end":14020297,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ let _guard = cvar.wait_until(lock.lock().await, |started| { *started }).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020302,"byte_end":14020384,"line_start":166,"line_end":166,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020389,"byte_end":14020394,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020399,"byte_end":14020407,"line_start":168,"line_end":168,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020412,"byte_end":14020419,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020424,"byte_end":14020460,"line_start":170,"line_end":170,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6097},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022095,"byte_end":14022107,"line_start":226,"line_end":226,"column_start":18,"column_end":30},"name":"wait_timeout","qualname":"<Condvar>::wait_timeout","value":"pub async fn wait_timeout<'a, T, '_>(&'_ Self, MutexGuard, Duration)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a specified duration.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020775,"byte_end":14020870,"line_start":185,"line_end":185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020875,"byte_end":14020878,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ For these reasons `Condvar::wait_timeout_until` is recommended in most cases.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020883,"byte_end":14020964,"line_start":187,"line_end":187,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020969,"byte_end":14020972,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020977,"byte_end":14020991,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14020996,"byte_end":14020999,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021004,"byte_end":14021011,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021016,"byte_end":14021055,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021060,"byte_end":14021065,"line_start":193,"line_end":193,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021070,"byte_end":14021093,"line_start":194,"line_end":194,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021098,"byte_end":14021126,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021131,"byte_end":14021134,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021139,"byte_end":14021181,"line_start":197,"line_end":197,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021186,"byte_end":14021210,"line_start":198,"line_end":198,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021215,"byte_end":14021218,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021223,"byte_end":14021284,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021289,"byte_end":14021318,"line_start":201,"line_end":201,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021323,"byte_end":14021326,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021331,"byte_end":14021359,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/   let (lock, cvar) = &*pair2;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021364,"byte_end":14021397,"line_start":204,"line_end":204,"column_start":5,"column_end":38}},{"value":"/   let mut started = lock.lock().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021402,"byte_end":14021444,"line_start":205,"line_end":205,"column_start":5,"column_end":47}},{"value":"/   *started = true;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021449,"byte_end":14021471,"line_start":206,"line_end":206,"column_start":5,"column_end":27}},{"value":"/   // We notify the condvar that the value has changed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021476,"byte_end":14021534,"line_start":207,"line_end":207,"column_start":5,"column_end":63}},{"value":"/   cvar.notify_one();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021539,"byte_end":14021563,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021568,"byte_end":14021575,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021580,"byte_end":14021583,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ // wait for the thread to start up","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021588,"byte_end":14021626,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021631,"byte_end":14021661,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021666,"byte_end":14021706,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021711,"byte_end":14021721,"line_start":214,"line_end":214,"column_start":5,"column_end":15}},{"value":"/   let result = cvar.wait_timeout(started, Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021726,"byte_end":14021805,"line_start":215,"line_end":215,"column_start":5,"column_end":84}},{"value":"/   started = result.0;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021810,"byte_end":14021835,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/   if *started == true {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021840,"byte_end":14021867,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/       // We received the notification and the value has been updated, we can leave.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021872,"byte_end":14021959,"line_start":218,"line_end":218,"column_start":5,"column_end":92}},{"value":"/       break","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021964,"byte_end":14021979,"line_start":219,"line_end":219,"column_start":5,"column_end":20}},{"value":"/   }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021984,"byte_end":14021991,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14021996,"byte_end":14022001,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022006,"byte_end":14022011,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022016,"byte_end":14022024,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022029,"byte_end":14022036,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022041,"byte_end":14022077,"line_start":225,"line_end":225,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6102},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023755,"byte_end":14023773,"line_start":275,"line_end":275,"column_start":18,"column_end":36},"name":"wait_timeout_until","qualname":"<Condvar>::wait_timeout_until","value":"pub async fn wait_timeout_until<'a, T, F,\n'_>(&'_ Self, MutexGuard, Duration, F) -> /*impl Trait*/ where\nF: FnMut(&mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a specified duration.\n Spurious wakes will not cause this function to return.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a specified duration.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022489,"byte_end":14022584,"line_start":238,"line_end":238,"column_start":5,"column_end":100}},{"value":"/ Spurious wakes will not cause this function to return.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022589,"byte_end":14022647,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022652,"byte_end":14022655,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022660,"byte_end":14022674,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022679,"byte_end":14022686,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022691,"byte_end":14022730,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022735,"byte_end":14022758,"line_start":244,"line_end":244,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022763,"byte_end":14022791,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022796,"byte_end":14022799,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022804,"byte_end":14022846,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022851,"byte_end":14022875,"line_start":248,"line_end":248,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022880,"byte_end":14022883,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022888,"byte_end":14022949,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022954,"byte_end":14022983,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022988,"byte_end":14022991,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14022996,"byte_end":14023024,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023029,"byte_end":14023064,"line_start":254,"line_end":254,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023069,"byte_end":14023113,"line_start":255,"line_end":255,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023118,"byte_end":14023142,"line_start":256,"line_end":256,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023147,"byte_end":14023207,"line_start":257,"line_end":257,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023212,"byte_end":14023238,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023243,"byte_end":14023250,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023255,"byte_end":14023258,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ // wait for the thread to start up","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023263,"byte_end":14023301,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023306,"byte_end":14023336,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/ let result = cvar.wait_timeout_until(","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023341,"byte_end":14023382,"line_start":263,"line_end":263,"column_start":5,"column_end":46}},{"value":"/     lock.lock().await,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023387,"byte_end":14023413,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/     Duration::from_millis(100),","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023418,"byte_end":14023453,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     |&mut started| started,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023458,"byte_end":14023489,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/ ).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023494,"byte_end":14023506,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/ if result.1.timed_out() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023511,"byte_end":14023540,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/     // timed-out without the condition ever evaluating to true.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023545,"byte_end":14023612,"line_start":269,"line_end":269,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023617,"byte_end":14023622,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ // access the locked mutex via result.0","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023627,"byte_end":14023670,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023675,"byte_end":14023684,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023689,"byte_end":14023696,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14023701,"byte_end":14023737,"line_start":274,"line_end":274,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6108},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025136,"byte_end":14025146,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked task on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up one blocked task on this condvar.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024245,"byte_end":14024291,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024296,"byte_end":14024299,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024304,"byte_end":14024318,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024323,"byte_end":14024326,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024331,"byte_end":14024338,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024343,"byte_end":14024394,"line_start":296,"line_end":296,"column_start":5,"column_end":56}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024399,"byte_end":14024422,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024427,"byte_end":14024430,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024435,"byte_end":14024477,"line_start":299,"line_end":299,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024482,"byte_end":14024506,"line_start":300,"line_end":300,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024511,"byte_end":14024514,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024519,"byte_end":14024580,"line_start":302,"line_end":302,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024585,"byte_end":14024614,"line_start":303,"line_end":303,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024619,"byte_end":14024622,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024627,"byte_end":14024655,"line_start":305,"line_end":305,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024660,"byte_end":14024695,"line_start":306,"line_end":306,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024700,"byte_end":14024744,"line_start":307,"line_end":307,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024749,"byte_end":14024773,"line_start":308,"line_end":308,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024778,"byte_end":14024838,"line_start":309,"line_end":309,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024843,"byte_end":14024869,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024874,"byte_end":14024881,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024886,"byte_end":14024889,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024894,"byte_end":14024933,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024938,"byte_end":14024968,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14024973,"byte_end":14025013,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/ while !*started {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025018,"byte_end":14025039,"line_start":316,"line_end":316,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025044,"byte_end":14025087,"line_start":317,"line_end":317,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025092,"byte_end":14025097,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025102,"byte_end":14025112,"line_start":319,"line_end":319,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025117,"byte_end":14025124,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6109},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14026183,"byte_end":14026193,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"pub fn notify_all(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked tasks on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up all blocked tasks on this condvar.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025201,"byte_end":14025248,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025253,"byte_end":14025256,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025261,"byte_end":14025275,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025280,"byte_end":14025287,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025292,"byte_end":14025343,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025348,"byte_end":14025353,"line_start":330,"line_end":330,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025358,"byte_end":14025381,"line_start":331,"line_end":331,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025386,"byte_end":14025389,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025394,"byte_end":14025436,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025441,"byte_end":14025465,"line_start":334,"line_end":334,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025470,"byte_end":14025473,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025478,"byte_end":14025539,"line_start":336,"line_end":336,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025544,"byte_end":14025573,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025578,"byte_end":14025581,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025586,"byte_end":14025614,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025619,"byte_end":14025654,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025659,"byte_end":14025703,"line_start":341,"line_end":341,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025708,"byte_end":14025732,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025737,"byte_end":14025797,"line_start":343,"line_end":343,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_all();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025802,"byte_end":14025828,"line_start":344,"line_end":344,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025833,"byte_end":14025840,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025845,"byte_end":14025848,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025853,"byte_end":14025892,"line_start":347,"line_end":347,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025897,"byte_end":14025927,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025932,"byte_end":14025972,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/ // As long as the value inside the `Mutex<bool>` is `false`, we wait.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14025977,"byte_end":14026050,"line_start":350,"line_end":350,"column_start":5,"column_end":78}},{"value":"/ while !*started {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14026055,"byte_end":14026076,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14026081,"byte_end":14026124,"line_start":352,"line_end":352,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14026129,"byte_end":14026134,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14026139,"byte_end":14026144,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ # }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14026149,"byte_end":14026159,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14026164,"byte_end":14026171,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4317},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::channel","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\channel.rs","parent":null,"children":[{"krate":0,"index":4318}],"decl_id":null,"docs":" Channels","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Channels","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\channel.rs","byte_start":13890966,"byte_end":13890978,"line_start":1,"line_end":1,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\channel.rs","byte_start":13890979,"byte_end":13890982,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Multi-producer, multi-consumer queues, used for message-based","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\channel.rs","byte_start":13890983,"byte_end":13891048,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ communication. Can provide a lightweight inter-task synchronisation","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\channel.rs","byte_start":13891049,"byte_end":13891120,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ mechanism, at the cost of some extra memory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\channel.rs","byte_start":13891121,"byte_end":13891169,"line_start":5,"line_end":5,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":6220},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","parent":null,"children":[{"krate":0,"index":6221},{"krate":0,"index":6224},{"krate":0,"index":6227},{"krate":0,"index":6230},{"krate":0,"index":6233},{"krate":0,"index":6236},{"krate":0,"index":6239},{"krate":0,"index":6242},{"krate":0,"index":6245},{"krate":0,"index":6248},{"krate":0,"index":6251},{"krate":0,"index":6254},{"krate":0,"index":6257},{"krate":0,"index":6260},{"krate":0,"index":6263},{"krate":0,"index":6266},{"krate":0,"index":6269},{"krate":0,"index":6272},{"krate":0,"index":6275},{"krate":0,"index":6278},{"krate":0,"index":6281},{"krate":0,"index":6284},{"krate":0,"index":6287},{"krate":0,"index":6290},{"krate":0,"index":6293},{"krate":0,"index":6296},{"krate":0,"index":6319},{"krate":0,"index":6339},{"krate":0,"index":6358},{"krate":0,"index":6377},{"krate":0,"index":6398},{"krate":0,"index":6443},{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6682},{"krate":0,"index":6697},{"krate":0,"index":6728},{"krate":0,"index":6729},{"krate":0,"index":6748},{"krate":0,"index":6796},{"krate":0,"index":6819},{"krate":0,"index":6838},{"krate":0,"index":6857},{"krate":0,"index":6876},{"krate":0,"index":6895},{"krate":0,"index":6915},{"krate":0,"index":6933},{"krate":0,"index":6951}],"decl_id":null,"docs":" Filesystem manipulation operations.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":11084,"byte_end":11118,"line_start":314,"line_end":314,"column_start":5,"column_end":39}},{"value":"/ Filesystem manipulation operations.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14034885,"byte_end":14034924,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14034925,"byte_end":14034928,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::fs`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14034929,"byte_end":14034980,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14034981,"byte_end":14034984,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs`]: ../os/unix/fs/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14034985,"byte_end":14035031,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/ [`os::windows::fs`]: ../os/windows/fs/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035032,"byte_end":14035084,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/ [`std::fs`]: https://doc.rust-lang.org/std/fs/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035085,"byte_end":14035145,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035146,"byte_end":14035149,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035150,"byte_end":14035184,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035185,"byte_end":14035188,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * Unix: use the [`os::unix::fs`] module.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035189,"byte_end":14035233,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ * Windows: use the [`os::windows::fs`] module.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035234,"byte_end":14035284,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035285,"byte_end":14035288,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035289,"byte_end":14035303,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035304,"byte_end":14035307,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035308,"byte_end":14035357,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035358,"byte_end":14035361,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035362,"byte_end":14035375,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035376,"byte_end":14035450,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035451,"byte_end":14035456,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035457,"byte_end":14035485,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035486,"byte_end":14035516,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035517,"byte_end":14035520,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035521,"byte_end":14035569,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035570,"byte_end":14035614,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035615,"byte_end":14035620,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035621,"byte_end":14035638,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\mod.rs","byte_start":14035639,"byte_end":14035646,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6313},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037708,"byte_end":14037720,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14036906,"byte_end":14036947,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14036948,"byte_end":14036951,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and symbolic","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14036952,"byte_end":14037050,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ links resolved.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037051,"byte_end":14037070,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037071,"byte_end":14037074,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::canonicalize`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037075,"byte_end":14037142,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037143,"byte_end":14037146,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::canonicalize`]: https://doc.rust-lang.org/std/fs/fn.canonicalize.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037147,"byte_end":14037231,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037232,"byte_end":14037235,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037236,"byte_end":14037248,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037249,"byte_end":14037252,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037253,"byte_end":14037311,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037312,"byte_end":14037315,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037316,"byte_end":14037377,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * A non-final component in `path` is not a directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037378,"byte_end":14037435,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037436,"byte_end":14037472,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037473,"byte_end":14037476,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037477,"byte_end":14037491,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037492,"byte_end":14037495,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037496,"byte_end":14037509,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037510,"byte_end":14037584,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037585,"byte_end":14037590,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037591,"byte_end":14037613,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037614,"byte_end":14037617,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let path = fs::canonicalize(\".\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037618,"byte_end":14037662,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037663,"byte_end":14037668,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037669,"byte_end":14037686,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\canonicalize.rs","byte_start":14037687,"byte_end":14037694,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6332},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039310,"byte_end":14039314,"line_start":42,"line_end":42,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents and permissions of a file to a new location.","sig":null,"attributes":[{"value":"/ Copies the contents and permissions of a file to a new location.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038112,"byte_end":14038180,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038181,"byte_end":14038184,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned and equals the length of the `to` file","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038185,"byte_end":14038284,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ after this operation.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038285,"byte_end":14038310,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038311,"byte_end":14038314,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The old contents of `to` will be overwritten. If `from` and `to` both point to the same file,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038315,"byte_end":14038412,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ then the file will likely get truncated as a result of this operation.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038413,"byte_end":14038487,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038488,"byte_end":14038491,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you're working with open [`File`]s and want to copy contents through those types, use the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038492,"byte_end":14038588,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ [`io::copy`] function.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038589,"byte_end":14038615,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038616,"byte_end":14038619,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::copy`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038620,"byte_end":14038679,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038680,"byte_end":14038683,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038684,"byte_end":14038714,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ [`io::copy`]: ../io/fn.copy.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038715,"byte_end":14038751,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ [`std::fs::copy`]: https://doc.rust-lang.org/std/fs/fn.copy.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038752,"byte_end":14038820,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038821,"byte_end":14038824,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038825,"byte_end":14038837,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038838,"byte_end":14038841,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038842,"byte_end":14038900,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038901,"byte_end":14038904,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038905,"byte_end":14038953,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read `from` or write `to`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14038954,"byte_end":14039027,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039028,"byte_end":14039064,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039065,"byte_end":14039068,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039069,"byte_end":14039083,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039084,"byte_end":14039087,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039088,"byte_end":14039101,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039102,"byte_end":14039176,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039177,"byte_end":14039182,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039183,"byte_end":14039205,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039206,"byte_end":14039209,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let num_bytes = fs::copy(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039210,"byte_end":14039264,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039265,"byte_end":14039270,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039271,"byte_end":14039288,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\copy.rs","byte_start":14039289,"byte_end":14039296,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6352},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040709,"byte_end":14040719,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory.","sig":null,"attributes":[{"value":"/ Creates a new directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14039744,"byte_end":14039772,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14039773,"byte_end":14039776,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that this function will only create the final directory in `path`. If you want to create","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14039777,"byte_end":14039874,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ all of its missing parent directories too, use the [`create_dir_all`] function instead.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14039875,"byte_end":14039966,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14039967,"byte_end":14039970,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14039971,"byte_end":14040036,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040037,"byte_end":14040040,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: fn.create_dir_all.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040041,"byte_end":14040087,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::create_dir`]: https://doc.rust-lang.org/std/fs/fn.create_dir.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040088,"byte_end":14040168,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040169,"byte_end":14040172,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040173,"byte_end":14040185,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040186,"byte_end":14040189,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040190,"byte_end":14040248,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040249,"byte_end":14040252,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040253,"byte_end":14040314,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * A parent directory in `path` does not exist.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040315,"byte_end":14040365,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ * The current process lacks permissions to create the directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040366,"byte_end":14040434,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040435,"byte_end":14040471,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040472,"byte_end":14040475,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040476,"byte_end":14040490,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040491,"byte_end":14040494,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040495,"byte_end":14040508,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040509,"byte_end":14040583,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040584,"byte_end":14040589,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040590,"byte_end":14040612,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040613,"byte_end":14040616,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040617,"byte_end":14040663,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040664,"byte_end":14040669,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040670,"byte_end":14040687,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir.rs","byte_start":14040688,"byte_end":14040695,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6371},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041834,"byte_end":14041848,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory and all of its parents if they are missing.","sig":null,"attributes":[{"value":"/ Creates a new directory and all of its parents if they are missing.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041079,"byte_end":14041150,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041151,"byte_end":14041154,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir_all`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041155,"byte_end":14041224,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041225,"byte_end":14041228,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::create_dir_all`]: https://doc.rust-lang.org/std/fs/fn.create_dir_all.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041229,"byte_end":14041317,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041318,"byte_end":14041321,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041322,"byte_end":14041334,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041335,"byte_end":14041338,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041339,"byte_end":14041397,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041398,"byte_end":14041401,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041402,"byte_end":14041463,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041464,"byte_end":14041555,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041556,"byte_end":14041592,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041593,"byte_end":14041596,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041597,"byte_end":14041611,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041612,"byte_end":14041615,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041616,"byte_end":14041629,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041630,"byte_end":14041704,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041705,"byte_end":14041710,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041711,"byte_end":14041733,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041734,"byte_end":14041737,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir_all(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041738,"byte_end":14041788,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041789,"byte_end":14041794,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041795,"byte_end":14041812,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\create_dir_all.rs","byte_start":14041813,"byte_end":14041820,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7782},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042630,"byte_end":14042640,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":7783}],"decl_id":null,"docs":" A builder for creating directories with configurable options.","sig":null,"attributes":[{"value":"/ A builder for creating directories with configurable options.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042211,"byte_end":14042276,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042277,"byte_end":14042280,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For Unix-specific options, import the [`os::unix::fs::DirBuilderExt`] trait.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042281,"byte_end":14042361,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042362,"byte_end":14042365,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirBuilder`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042366,"byte_end":14042427,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042428,"byte_end":14042431,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs::DirBuilderExt`]: ../os/unix/fs/trait.DirBuilderExt.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042432,"byte_end":14042507,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ [`std::fs::DirBuilder`]: https://doc.rust-lang.org/std/fs/struct.DirBuilder.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042508,"byte_end":14042592,"line_start":14,"line_end":14,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":6391},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043168,"byte_end":14043171,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> DirBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042855,"byte_end":14042890,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042895,"byte_end":14042898,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The [`recursive`] option is initially set to `false`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042903,"byte_end":14042960,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042965,"byte_end":14042968,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`recursive`]: #method.recursive","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042973,"byte_end":14043009,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043014,"byte_end":14043017,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043022,"byte_end":14043036,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043041,"byte_end":14043044,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043049,"byte_end":14043056,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043061,"byte_end":14043095,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043100,"byte_end":14043103,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043108,"byte_end":14043144,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043149,"byte_end":14043156,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6392},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043919,"byte_end":14043928,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for recursive mode.","sig":null,"attributes":[{"value":"/ Sets the option for recursive mode.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043421,"byte_end":14043460,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043465,"byte_end":14043468,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means all parent directories should be created recursively","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043473,"byte_end":14043567,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ if they don't exist. Parents are created with the same permissions as the final directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043572,"byte_end":14043666,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043671,"byte_end":14043674,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option is initially set to `false`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043679,"byte_end":14043723,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043728,"byte_end":14043731,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043736,"byte_end":14043750,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043755,"byte_end":14043758,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043763,"byte_end":14043770,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043775,"byte_end":14043809,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043814,"byte_end":14043817,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043822,"byte_end":14043862,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043867,"byte_end":14043895,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14043900,"byte_end":14043907,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6393},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044860,"byte_end":14044866,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"create","qualname":"<DirBuilder>::create","value":"pub fn create<P: AsRef<Path>>(&Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates a directory with the configured options.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044032,"byte_end":14044084,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044089,"byte_end":14044092,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless recursive mode is enabled.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044097,"byte_end":14044192,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044197,"byte_end":14044200,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044205,"byte_end":14044217,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044222,"byte_end":14044225,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044230,"byte_end":14044288,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044293,"byte_end":14044296,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044301,"byte_end":14044362,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044367,"byte_end":14044458,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044463,"byte_end":14044499,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044504,"byte_end":14044507,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044512,"byte_end":14044526,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044531,"byte_end":14044534,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044539,"byte_end":14044552,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044557,"byte_end":14044631,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044636,"byte_end":14044641,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044646,"byte_end":14044680,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044685,"byte_end":14044688,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ DirBuilder::new()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044693,"byte_end":14044714,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     .recursive(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044719,"byte_end":14044743,"line_start":92,"line_end":92,"column_start":5,"column_end":29}},{"value":"/     .create(\"./some/directory\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044748,"byte_end":14044783,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044788,"byte_end":14044804,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044809,"byte_end":14044814,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044819,"byte_end":14044836,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14044841,"byte_end":14044848,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6424},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046032,"byte_end":14046040,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::dir_entry::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" An entry in a directory.","sig":null,"attributes":[{"value":"/ An entry in a directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14045736,"byte_end":14045764,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14045765,"byte_end":14045768,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A stream of entries in a directory is returned by [`read_dir`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14045769,"byte_end":14045836,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14045837,"byte_end":14045840,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirEntry`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14045841,"byte_end":14045900,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14045901,"byte_end":14045904,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14045905,"byte_end":14045939,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::DirEntry`]: https://doc.rust-lang.org/std/fs/struct.DirEntry.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14045940,"byte_end":14046020,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":6429},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046931,"byte_end":14046935,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to this entry.","sig":null,"attributes":[{"value":"/ Returns the full path to this entry.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046257,"byte_end":14046297,"line_start":26,"line_end":26,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046302,"byte_end":14046305,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path passed to [`read_dir`] with the name","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046310,"byte_end":14046404,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ of this entry.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046409,"byte_end":14046427,"line_start":29,"line_end":29,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046432,"byte_end":14046435,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046440,"byte_end":14046474,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046479,"byte_end":14046482,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046487,"byte_end":14046501,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046506,"byte_end":14046509,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046514,"byte_end":14046527,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046532,"byte_end":14046606,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046611,"byte_end":14046616,"line_start":37,"line_end":37,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046621,"byte_end":14046643,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046648,"byte_end":14046678,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046683,"byte_end":14046686,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046691,"byte_end":14046734,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046739,"byte_end":14046742,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046747,"byte_end":14046791,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046796,"byte_end":14046821,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046826,"byte_end":14046865,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046870,"byte_end":14046875,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046880,"byte_end":14046885,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046890,"byte_end":14046907,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046912,"byte_end":14046919,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6430},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048066,"byte_end":14048074,"line_start":88,"line_end":88,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata for this entry.","sig":null,"attributes":[{"value":"/ Reads the metadata for this entry.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046996,"byte_end":14047034,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047039,"byte_end":14047042,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to read the metadata.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047047,"byte_end":14047115,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047120,"byte_end":14047123,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047128,"byte_end":14047219,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047224,"byte_end":14047236,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047241,"byte_end":14047244,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047249,"byte_end":14047299,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047304,"byte_end":14047307,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047312,"byte_end":14047324,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047329,"byte_end":14047332,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047337,"byte_end":14047395,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047400,"byte_end":14047403,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047408,"byte_end":14047481,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read the metadata.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047486,"byte_end":14047551,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047556,"byte_end":14047592,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047597,"byte_end":14047600,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047605,"byte_end":14047619,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047624,"byte_end":14047627,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047632,"byte_end":14047645,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047650,"byte_end":14047724,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047729,"byte_end":14047734,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047739,"byte_end":14047761,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047766,"byte_end":14047796,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047801,"byte_end":14047804,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047809,"byte_end":14047852,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047857,"byte_end":14047860,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047865,"byte_end":14047909,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047914,"byte_end":14047939,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.metadata().await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047944,"byte_end":14047994,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14047999,"byte_end":14048004,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048009,"byte_end":14048014,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048019,"byte_end":14048036,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048041,"byte_end":14048048,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6434},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049267,"byte_end":14049276,"line_start":126,"line_end":126,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file type for this entry.","sig":null,"attributes":[{"value":"/ Reads the file type for this entry.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048210,"byte_end":14048249,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048254,"byte_end":14048257,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symbolic links if this entry points at one.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048262,"byte_end":14048341,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048346,"byte_end":14048349,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata with following symbolic links, use [`metadata`] instead.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048354,"byte_end":14048443,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048448,"byte_end":14048451,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048456,"byte_end":14048490,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048495,"byte_end":14048498,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048503,"byte_end":14048515,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048520,"byte_end":14048523,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048528,"byte_end":14048586,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048591,"byte_end":14048594,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048599,"byte_end":14048672,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read this entry's metadata.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048677,"byte_end":14048751,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048756,"byte_end":14048792,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048797,"byte_end":14048800,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048805,"byte_end":14048819,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048824,"byte_end":14048827,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048832,"byte_end":14048845,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048850,"byte_end":14048924,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048929,"byte_end":14048934,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048939,"byte_end":14048961,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14048966,"byte_end":14048996,"line_start":115,"line_end":115,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049001,"byte_end":14049004,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049009,"byte_end":14049052,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049057,"byte_end":14049060,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049065,"byte_end":14049109,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049114,"byte_end":14049139,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.file_type().await?);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049144,"byte_end":14049195,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049200,"byte_end":14049205,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049210,"byte_end":14049215,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049220,"byte_end":14049237,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049242,"byte_end":14049249,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6438},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049956,"byte_end":14049965,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare name of this entry without the leading path.","sig":null,"attributes":[{"value":"/ Returns the bare name of this entry without the leading path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049413,"byte_end":14049478,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049483,"byte_end":14049486,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049491,"byte_end":14049505,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049510,"byte_end":14049513,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049518,"byte_end":14049531,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049536,"byte_end":14049610,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049615,"byte_end":14049620,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049625,"byte_end":14049647,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049652,"byte_end":14049682,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049687,"byte_end":14049690,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049695,"byte_end":14049738,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049743,"byte_end":14049746,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049751,"byte_end":14049795,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049800,"byte_end":14049825,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049830,"byte_end":14049890,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049895,"byte_end":14049900,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049905,"byte_end":14049910,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049915,"byte_end":14049932,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14049937,"byte_end":14049944,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7788},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052225,"byte_end":14052229,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":7789},{"krate":0,"index":7790}],"decl_id":null,"docs":" An open file on the filesystem.","sig":null,"attributes":[{"value":"/ An open file on the filesystem.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14050933,"byte_end":14050968,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14050969,"byte_end":14050972,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Depending on what options the file was opened with, this type can be used for reading and/or","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14050973,"byte_end":14051069,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ writing.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051070,"byte_end":14051082,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051083,"byte_end":14051086,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they get dropped and any errors detected on closing are","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051087,"byte_end":14051182,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ ignored. Use the [`sync_all`] method before dropping a file if such errors need to be handled.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051183,"byte_end":14051281,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051282,"byte_end":14051285,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::File`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051286,"byte_end":14051341,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051342,"byte_end":14051345,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051346,"byte_end":14051380,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::File`]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051381,"byte_end":14051453,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051454,"byte_end":14051457,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051458,"byte_end":14051472,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051473,"byte_end":14051476,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051477,"byte_end":14051526,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051527,"byte_end":14051530,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051531,"byte_end":14051544,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051545,"byte_end":14051619,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051620,"byte_end":14051625,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051626,"byte_end":14051654,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051655,"byte_end":14051685,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051686,"byte_end":14051689,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051690,"byte_end":14051738,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051739,"byte_end":14051783,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051784,"byte_end":14051789,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051790,"byte_end":14051807,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051808,"byte_end":14051815,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051816,"byte_end":14051819,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a vector of bytes:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051820,"byte_end":14051875,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051876,"byte_end":14051879,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051880,"byte_end":14051893,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051894,"byte_end":14051968,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051969,"byte_end":14051974,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14051975,"byte_end":14052003,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052004,"byte_end":14052034,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052035,"byte_end":14052038,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::open(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052039,"byte_end":14052085,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052086,"byte_end":14052120,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052121,"byte_end":14052164,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052165,"byte_end":14052170,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052171,"byte_end":14052188,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052189,"byte_end":14052196,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6535},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053690,"byte_end":14053694,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in read-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in read-only mode.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052857,"byte_end":14052892,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052897,"byte_end":14052900,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052905,"byte_end":14052965,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052970,"byte_end":14052973,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052978,"byte_end":14052990,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052995,"byte_end":14052998,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053003,"byte_end":14053061,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053066,"byte_end":14053069,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053074,"byte_end":14053122,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053127,"byte_end":14053188,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053193,"byte_end":14053229,"line_start":98,"line_end":98,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053234,"byte_end":14053237,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053242,"byte_end":14053323,"line_start":100,"line_end":100,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053328,"byte_end":14053331,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053336,"byte_end":14053398,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053403,"byte_end":14053406,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053411,"byte_end":14053425,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053430,"byte_end":14053433,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053438,"byte_end":14053451,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053456,"byte_end":14053530,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053535,"byte_end":14053540,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053545,"byte_end":14053573,"line_start":109,"line_end":109,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053578,"byte_end":14053581,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053586,"byte_end":14053628,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053633,"byte_end":14053638,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053643,"byte_end":14053660,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14053665,"byte_end":14053672,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6541},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054947,"byte_end":14054953,"line_start":153,"line_end":153,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054002,"byte_end":14054038,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054043,"byte_end":14054046,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate it if it does.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054051,"byte_end":14054142,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054147,"byte_end":14054150,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054155,"byte_end":14054215,"line_start":128,"line_end":128,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054220,"byte_end":14054223,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054228,"byte_end":14054240,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054245,"byte_end":14054248,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054253,"byte_end":14054311,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054316,"byte_end":14054319,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054324,"byte_end":14054373,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054378,"byte_end":14054443,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054448,"byte_end":14054484,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054489,"byte_end":14054492,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054497,"byte_end":14054578,"line_start":138,"line_end":138,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054583,"byte_end":14054586,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054591,"byte_end":14054653,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054658,"byte_end":14054661,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054666,"byte_end":14054680,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054685,"byte_end":14054688,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054693,"byte_end":14054706,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054711,"byte_end":14054785,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054790,"byte_end":14054795,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054800,"byte_end":14054828,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054833,"byte_end":14054836,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054841,"byte_end":14054885,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054890,"byte_end":14054895,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054900,"byte_end":14054917,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14054922,"byte_end":14054929,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6546},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055976,"byte_end":14055984,"line_start":183,"line_end":183,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents and metadata to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents and metadata to disk.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055204,"byte_end":14055272,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055277,"byte_end":14055280,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function will ensure that all in-memory data reaches the filesystem.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055285,"byte_end":14055362,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055367,"byte_end":14055370,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This can be used to handle errors that would otherwise only be caught when the file is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055375,"byte_end":14055465,"line_start":166,"line_end":166,"column_start":5,"column_end":95}},{"value":"/ closed. When a file is dropped, errors in synchronizing this in-memory data are ignored.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055470,"byte_end":14055562,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055567,"byte_end":14055570,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055575,"byte_end":14055589,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055594,"byte_end":14055597,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055602,"byte_end":14055615,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055620,"byte_end":14055694,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055699,"byte_end":14055704,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055709,"byte_end":14055737,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055742,"byte_end":14055772,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055777,"byte_end":14055780,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055785,"byte_end":14055833,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055838,"byte_end":14055882,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055887,"byte_end":14055914,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055919,"byte_end":14055924,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055929,"byte_end":14055946,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14055951,"byte_end":14055958,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6551},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057189,"byte_end":14057198,"line_start":219,"line_end":219,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents to disk.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056321,"byte_end":14056376,"line_start":194,"line_end":194,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056381,"byte_end":14056384,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`sync_all`], except that file metadata may not be synchronized.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056389,"byte_end":14056476,"line_start":196,"line_end":196,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056481,"byte_end":14056484,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize the contents of the file, but don't","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056489,"byte_end":14056581,"line_start":198,"line_end":198,"column_start":5,"column_end":97}},{"value":"/ need the file metadata synchronized to disk.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056586,"byte_end":14056634,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056639,"byte_end":14056642,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of [`sync_all`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056647,"byte_end":14056727,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056732,"byte_end":14056735,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056740,"byte_end":14056774,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056779,"byte_end":14056782,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056787,"byte_end":14056801,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056806,"byte_end":14056809,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056814,"byte_end":14056827,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056832,"byte_end":14056906,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056911,"byte_end":14056916,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056921,"byte_end":14056949,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056954,"byte_end":14056984,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056989,"byte_end":14056992,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14056997,"byte_end":14057045,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057050,"byte_end":14057094,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057099,"byte_end":14057127,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057132,"byte_end":14057137,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057142,"byte_end":14057159,"line_start":217,"line_end":217,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057164,"byte_end":14057171,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6556},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058295,"byte_end":14058302,"line_start":251,"line_end":251,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the file.","sig":null,"attributes":[{"value":"/ Truncates or extends the file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057537,"byte_end":14057571,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057576,"byte_end":14057579,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current file size, then the file will be truncated. If it is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057584,"byte_end":14057675,"line_start":232,"line_end":232,"column_start":5,"column_end":96}},{"value":"/ greater than the current file size, then the file will be extended to `size` and have all","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057680,"byte_end":14057773,"line_start":233,"line_end":233,"column_start":5,"column_end":98}},{"value":"/ intermediate data filled with zeros.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057778,"byte_end":14057818,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057823,"byte_end":14057826,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The file's cursor stays at the same position, even if the cursor ends up being past the end","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057831,"byte_end":14057926,"line_start":236,"line_end":236,"column_start":5,"column_end":100}},{"value":"/ of the file after this operation.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057931,"byte_end":14057968,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057973,"byte_end":14057976,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14057981,"byte_end":14057995,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058000,"byte_end":14058003,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058008,"byte_end":14058021,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058026,"byte_end":14058100,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058105,"byte_end":14058110,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058115,"byte_end":14058143,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058148,"byte_end":14058151,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058156,"byte_end":14058200,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058205,"byte_end":14058233,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058238,"byte_end":14058243,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058248,"byte_end":14058265,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058270,"byte_end":14058277,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6561},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059121,"byte_end":14059129,"line_start":277,"line_end":277,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file's metadata.","sig":null,"attributes":[{"value":"/ Reads the file's metadata.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058752,"byte_end":14058782,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058787,"byte_end":14058790,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058795,"byte_end":14058809,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058814,"byte_end":14058817,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058822,"byte_end":14058835,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058840,"byte_end":14058914,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058919,"byte_end":14058924,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058929,"byte_end":14058957,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058962,"byte_end":14058965,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14058970,"byte_end":14059012,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059017,"byte_end":14059059,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059064,"byte_end":14059069,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059074,"byte_end":14059091,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059096,"byte_end":14059103,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6565},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059975,"byte_end":14059990,"line_start":306,"line_end":306,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059266,"byte_end":14059306,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059311,"byte_end":14059314,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059319,"byte_end":14059331,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059336,"byte_end":14059339,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059344,"byte_end":14059402,"line_start":286,"line_end":286,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059407,"byte_end":14059410,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ * The current process lacks permissions to change attributes on the file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059415,"byte_end":14059492,"line_start":288,"line_end":288,"column_start":5,"column_end":82}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059497,"byte_end":14059533,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059538,"byte_end":14059541,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059546,"byte_end":14059560,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059565,"byte_end":14059568,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059573,"byte_end":14059586,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059591,"byte_end":14059665,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059670,"byte_end":14059675,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059680,"byte_end":14059708,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059713,"byte_end":14059716,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059721,"byte_end":14059765,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059770,"byte_end":14059773,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059778,"byte_end":14059835,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059840,"byte_end":14059869,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059874,"byte_end":14059913,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059918,"byte_end":14059923,"line_start":303,"line_end":303,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059928,"byte_end":14059945,"line_start":304,"line_end":304,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14059950,"byte_end":14059957,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":6675},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083620,"byte_end":14083629,"line_start":33,"line_end":33,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a hard link on the filesystem.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14082856,"byte_end":14082898,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14082899,"byte_end":14082902,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that operating systems often","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14082903,"byte_end":14082998,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ require these two paths to be located on the same filesystem.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14082999,"byte_end":14083064,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083065,"byte_end":14083068,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::hard_link`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083069,"byte_end":14083133,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083134,"byte_end":14083137,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::hard_link`]: https://doc.rust-lang.org/std/fs/fn.hard_link.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083138,"byte_end":14083216,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083217,"byte_end":14083220,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083221,"byte_end":14083233,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083234,"byte_end":14083237,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083238,"byte_end":14083296,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083297,"byte_end":14083300,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `src` does not point to an existing file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083301,"byte_end":14083348,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083349,"byte_end":14083385,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083386,"byte_end":14083389,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083390,"byte_end":14083404,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083405,"byte_end":14083408,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083409,"byte_end":14083422,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083423,"byte_end":14083497,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083498,"byte_end":14083503,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083504,"byte_end":14083526,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083527,"byte_end":14083530,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fs::hard_link(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083531,"byte_end":14083574,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083575,"byte_end":14083580,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083581,"byte_end":14083598,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\hard_link.rs","byte_start":14083599,"byte_end":14083606,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6692},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14085068,"byte_end":14085076,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path.","sig":null,"attributes":[{"value":"/ Reads metadata for a path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084123,"byte_end":14084153,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084154,"byte_end":14084157,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to read metadata for the target file or directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084158,"byte_end":14084255,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084256,"byte_end":14084347,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084348,"byte_end":14084360,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084361,"byte_end":14084364,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::metadata`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084365,"byte_end":14084428,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084429,"byte_end":14084432,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084433,"byte_end":14084483,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/ [`std::fs::metadata`]: https://doc.rust-lang.org/std/fs/fn.metadata.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084484,"byte_end":14084560,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084561,"byte_end":14084564,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084565,"byte_end":14084577,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084578,"byte_end":14084581,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084582,"byte_end":14084640,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084641,"byte_end":14084644,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084645,"byte_end":14084706,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084707,"byte_end":14084781,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084782,"byte_end":14084818,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084819,"byte_end":14084822,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084823,"byte_end":14084837,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084838,"byte_end":14084841,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084842,"byte_end":14084855,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084856,"byte_end":14084930,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084931,"byte_end":14084936,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084937,"byte_end":14084959,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084960,"byte_end":14084963,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14084964,"byte_end":14085022,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14085023,"byte_end":14085028,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14085029,"byte_end":14085046,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\metadata.rs","byte_start":14085047,"byte_end":14085054,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7818},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092702,"byte_end":14092713,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for opening files with configurable options.","sig":null,"attributes":[{"value":"/ A builder for opening files with configurable options.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091157,"byte_end":14091215,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091216,"byte_end":14091219,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Files can be opened in [`read`] and/or [`write`] mode.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091220,"byte_end":14091278,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091279,"byte_end":14091282,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`append`] option opens files in a special writing mode that moves the file cursor to the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091283,"byte_end":14091380,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ end of file before every write operation.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091381,"byte_end":14091426,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091427,"byte_end":14091430,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It is also possible to [`truncate`] the file right after opening, to [`create`] a file if it","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091431,"byte_end":14091527,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ doesn't exist yet, or to always create a new file with [`create_new`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091528,"byte_end":14091602,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091603,"byte_end":14091606,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::OpenOptions`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091607,"byte_end":14091669,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091670,"byte_end":14091673,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`read`]: #method.read","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091674,"byte_end":14091700,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091701,"byte_end":14091729,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091730,"byte_end":14091760,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091761,"byte_end":14091795,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ [`create`]: #method.create","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091796,"byte_end":14091826,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091827,"byte_end":14091865,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::OpenOptions`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091866,"byte_end":14091952,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091953,"byte_end":14091956,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091957,"byte_end":14091971,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091972,"byte_end":14091975,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Open a file for reading:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14091976,"byte_end":14092004,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092005,"byte_end":14092008,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092009,"byte_end":14092022,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092023,"byte_end":14092097,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092098,"byte_end":14092103,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092104,"byte_end":14092139,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092140,"byte_end":14092143,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092144,"byte_end":14092177,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092178,"byte_end":14092197,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092198,"byte_end":14092220,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092221,"byte_end":14092237,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092238,"byte_end":14092243,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092244,"byte_end":14092261,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092262,"byte_end":14092269,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092270,"byte_end":14092273,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Open a file for both reading and writing, and create it if it doesn't exist yet:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092274,"byte_end":14092358,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092359,"byte_end":14092362,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092363,"byte_end":14092376,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092377,"byte_end":14092451,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092452,"byte_end":14092457,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092458,"byte_end":14092493,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092494,"byte_end":14092497,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092498,"byte_end":14092531,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092532,"byte_end":14092551,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092552,"byte_end":14092572,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/     .create(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092573,"byte_end":14092594,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092595,"byte_end":14092617,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092618,"byte_end":14092634,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092635,"byte_end":14092640,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092641,"byte_end":14092658,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092659,"byte_end":14092666,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6714},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093210,"byte_end":14093213,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092761,"byte_end":14092796,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092801,"byte_end":14092804,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092809,"byte_end":14092854,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092859,"byte_end":14092862,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092867,"byte_end":14092881,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092886,"byte_end":14092889,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092894,"byte_end":14092907,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092912,"byte_end":14092986,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092991,"byte_end":14092996,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093001,"byte_end":14093036,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093041,"byte_end":14093044,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093049,"byte_end":14093082,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093087,"byte_end":14093106,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093111,"byte_end":14093133,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093138,"byte_end":14093154,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093159,"byte_end":14093164,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093169,"byte_end":14093186,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093191,"byte_end":14093198,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6715},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093784,"byte_end":14093788,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for read mode.","sig":null,"attributes":[{"value":"/ Configures the option for read mode.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093293,"byte_end":14093333,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093338,"byte_end":14093341,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be readable after opening.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093346,"byte_end":14093428,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093433,"byte_end":14093436,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093441,"byte_end":14093455,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093460,"byte_end":14093463,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093468,"byte_end":14093481,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093486,"byte_end":14093560,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093565,"byte_end":14093570,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093575,"byte_end":14093610,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093615,"byte_end":14093618,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093623,"byte_end":14093656,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093661,"byte_end":14093680,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093685,"byte_end":14093707,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093712,"byte_end":14093728,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093733,"byte_end":14093738,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093743,"byte_end":14093760,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093765,"byte_end":14093772,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6716},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094508,"byte_end":14094513,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for write mode.","sig":null,"attributes":[{"value":"/ Configures the option for write mode.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093885,"byte_end":14093926,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093931,"byte_end":14093934,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14093939,"byte_end":14094021,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094026,"byte_end":14094029,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, write calls on it will overwrite the previous contents without","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094034,"byte_end":14094128,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ truncating it.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094133,"byte_end":14094151,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094156,"byte_end":14094159,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094164,"byte_end":14094178,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094183,"byte_end":14094186,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094191,"byte_end":14094204,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094209,"byte_end":14094283,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094288,"byte_end":14094293,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094298,"byte_end":14094333,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094338,"byte_end":14094341,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094346,"byte_end":14094379,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094384,"byte_end":14094404,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094409,"byte_end":14094431,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094436,"byte_end":14094452,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094457,"byte_end":14094462,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094467,"byte_end":14094484,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094489,"byte_end":14094496,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6717},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095198,"byte_end":14095204,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for append mode.","sig":null,"attributes":[{"value":"/ Configures the option for append mode.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094613,"byte_end":14094655,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094660,"byte_end":14094663,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening and the file","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094668,"byte_end":14094762,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ cursor will be moved to the end of file before every write operaiton.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094767,"byte_end":14094840,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094845,"byte_end":14094848,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094853,"byte_end":14094867,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094872,"byte_end":14094875,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094880,"byte_end":14094893,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094898,"byte_end":14094972,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094977,"byte_end":14094982,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14094987,"byte_end":14095022,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095027,"byte_end":14095030,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095035,"byte_end":14095068,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     .append(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095073,"byte_end":14095094,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095099,"byte_end":14095121,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095126,"byte_end":14095142,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095147,"byte_end":14095152,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095157,"byte_end":14095174,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095179,"byte_end":14095186,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6718},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096012,"byte_end":14096020,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for truncating the previous file.","sig":null,"attributes":[{"value":"/ Configures the option for truncating the previous file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095307,"byte_end":14095366,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095371,"byte_end":14095374,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, the file will be truncated to the length of 0 bytes.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095379,"byte_end":14095455,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095460,"byte_end":14095463,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for truncation to work.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095468,"byte_end":14095551,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095556,"byte_end":14095559,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095564,"byte_end":14095592,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095597,"byte_end":14095627,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095632,"byte_end":14095635,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095640,"byte_end":14095654,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095659,"byte_end":14095662,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095667,"byte_end":14095680,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095685,"byte_end":14095759,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095764,"byte_end":14095769,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095774,"byte_end":14095809,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095814,"byte_end":14095817,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095822,"byte_end":14095855,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095860,"byte_end":14095880,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/     .truncate(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095885,"byte_end":14095908,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095913,"byte_end":14095935,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095940,"byte_end":14095956,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095961,"byte_end":14095966,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095971,"byte_end":14095988,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14095993,"byte_end":14096000,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6719},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096859,"byte_end":14096865,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file if it doesn't exist.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file if it doesn't exist.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096129,"byte_end":14096199,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096204,"byte_end":14096207,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created if it doesn't exist.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096212,"byte_end":14096301,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096306,"byte_end":14096309,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096314,"byte_end":14096400,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096405,"byte_end":14096408,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096413,"byte_end":14096441,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096446,"byte_end":14096476,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096481,"byte_end":14096484,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096489,"byte_end":14096503,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096508,"byte_end":14096511,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096516,"byte_end":14096529,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096534,"byte_end":14096608,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096613,"byte_end":14096618,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096623,"byte_end":14096658,"line_start":203,"line_end":203,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096663,"byte_end":14096666,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096671,"byte_end":14096704,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096709,"byte_end":14096729,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/     .create(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096734,"byte_end":14096755,"line_start":207,"line_end":207,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096760,"byte_end":14096782,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096787,"byte_end":14096803,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096808,"byte_end":14096813,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096818,"byte_end":14096835,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096840,"byte_end":14096847,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6720},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097762,"byte_end":14097772,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file or failing if it already exists.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file or failing if it already exists.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14096968,"byte_end":14097050,"line_start":218,"line_end":218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097055,"byte_end":14097058,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created, or the open operation","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097063,"byte_end":14097154,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ will fail if the file already exists.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097159,"byte_end":14097200,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097205,"byte_end":14097208,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097213,"byte_end":14097299,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097304,"byte_end":14097307,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097312,"byte_end":14097340,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097345,"byte_end":14097375,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097380,"byte_end":14097383,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097388,"byte_end":14097402,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097407,"byte_end":14097410,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097415,"byte_end":14097428,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097433,"byte_end":14097507,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097512,"byte_end":14097517,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097522,"byte_end":14097557,"line_start":233,"line_end":233,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097562,"byte_end":14097565,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097570,"byte_end":14097603,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097608,"byte_end":14097628,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/     .create_new(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097633,"byte_end":14097658,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097663,"byte_end":14097685,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097690,"byte_end":14097706,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097711,"byte_end":14097716,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097721,"byte_end":14097738,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097743,"byte_end":14097750,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6721},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14099210,"byte_end":14099214,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"pub fn open<P: AsRef<Path>>(&Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file with the configured options.","sig":null,"attributes":[{"value":"/ Opens a file with the configured options.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097887,"byte_end":14097932,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097937,"byte_end":14097940,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097945,"byte_end":14097957,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097962,"byte_end":14097965,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14097970,"byte_end":14098028,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098033,"byte_end":14098036,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ * The file does not exist and neither [`create`] nor [`create_new`] were set.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098041,"byte_end":14098122,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098127,"byte_end":14098176,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to open the file in the configured mode.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098181,"byte_end":14098265,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/ * The file already exists and [`create_new`] was set.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098270,"byte_end":14098327,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/ * Invalid combination of options was used, like [`truncate`] was set but [`write`] wasn't,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098332,"byte_end":14098426,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/   or none of [`read`], [`write`], and [`append`] modes was set.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098431,"byte_end":14098498,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ * An OS-level occurred, like too many files are open or the file name is too long.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098503,"byte_end":14098589,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098594,"byte_end":14098630,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098635,"byte_end":14098638,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098643,"byte_end":14098669,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098674,"byte_end":14098702,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098707,"byte_end":14098737,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098742,"byte_end":14098776,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/ [`create`]: #method.create","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098781,"byte_end":14098811,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098816,"byte_end":14098854,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098859,"byte_end":14098862,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098867,"byte_end":14098881,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098886,"byte_end":14098889,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098894,"byte_end":14098907,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098912,"byte_end":14098986,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14098991,"byte_end":14098996,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14099001,"byte_end":14099036,"line_start":275,"line_end":275,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14099041,"byte_end":14099044,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14099049,"byte_end":14099082,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14099087,"byte_end":14099106,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14099111,"byte_end":14099133,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14099138,"byte_end":14099154,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14099159,"byte_end":14099164,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14099169,"byte_end":14099186,"line_start":282,"line_end":282,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14099191,"byte_end":14099198,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":6742},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102718,"byte_end":14102722,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as raw bytes.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as raw bytes.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14101713,"byte_end":14101766,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14101767,"byte_end":14101770,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a buffer based on the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14101771,"byte_end":14101870,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14101871,"byte_end":14101967,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14101968,"byte_end":14101980,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14101981,"byte_end":14101984,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as a string, use [`read_to_string`] instead.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14101985,"byte_end":14102066,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102067,"byte_end":14102070,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102071,"byte_end":14102130,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102131,"byte_end":14102134,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_to_string`]: fn.read_to_string.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102135,"byte_end":14102181,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::read`]: https://doc.rust-lang.org/std/fs/fn.read.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102182,"byte_end":14102250,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102251,"byte_end":14102254,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102255,"byte_end":14102267,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102268,"byte_end":14102271,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102272,"byte_end":14102330,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102331,"byte_end":14102334,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102335,"byte_end":14102383,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102384,"byte_end":14102445,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102446,"byte_end":14102482,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102483,"byte_end":14102486,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102487,"byte_end":14102501,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102502,"byte_end":14102505,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102506,"byte_end":14102519,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102520,"byte_end":14102594,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102595,"byte_end":14102600,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102601,"byte_end":14102623,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102624,"byte_end":14102627,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102628,"byte_end":14102672,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102673,"byte_end":14102678,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102679,"byte_end":14102696,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read.rs","byte_start":14102697,"byte_end":14102704,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6783},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104279,"byte_end":14104287,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of entries in a directory.","sig":null,"attributes":[{"value":"/ Returns a stream of entries in a directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103187,"byte_end":14103234,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103235,"byte_end":14103238,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The stream yields items of type [`io::Result`]`<`[`DirEntry`]`>`. Note that I/O errors can","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103239,"byte_end":14103333,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ occur while reading from the stream.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103334,"byte_end":14103374,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103375,"byte_end":14103378,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_dir`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103379,"byte_end":14103442,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103443,"byte_end":14103446,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103447,"byte_end":14103489,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103490,"byte_end":14103528,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::read_dir`]: https://doc.rust-lang.org/std/fs/fn.read_dir.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103529,"byte_end":14103605,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103606,"byte_end":14103609,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103610,"byte_end":14103622,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103623,"byte_end":14103626,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103627,"byte_end":14103685,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103686,"byte_end":14103689,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103690,"byte_end":14103743,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ * The current process lacks permissions to read the contents of the directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103744,"byte_end":14103826,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103827,"byte_end":14103863,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103864,"byte_end":14103867,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103868,"byte_end":14103882,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103883,"byte_end":14103886,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103887,"byte_end":14103900,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103901,"byte_end":14103975,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103976,"byte_end":14103981,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14103982,"byte_end":14104004,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104005,"byte_end":14104035,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104036,"byte_end":14104039,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104040,"byte_end":14104087,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104088,"byte_end":14104091,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ while let Some(res) = entries.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104092,"byte_end":14104140,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104141,"byte_end":14104166,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104167,"byte_end":14104227,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104228,"byte_end":14104233,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104234,"byte_end":14104239,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104240,"byte_end":14104257,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104258,"byte_end":14104265,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7828},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14105092,"byte_end":14105099,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of entries in a directory.","sig":null,"attributes":[{"value":"/ A stream of entries in a directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104567,"byte_end":14104606,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104607,"byte_end":14104610,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by [`read_dir`] and yields items of type","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104611,"byte_end":14104679,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`]`<`[`DirEntry`]`>`. Each [`DirEntry`] can then retrieve information like entry's","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104680,"byte_end":14104778,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ path or metadata.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104779,"byte_end":14104800,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104801,"byte_end":14104804,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::ReadDir`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104805,"byte_end":14104863,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104864,"byte_end":14104867,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104868,"byte_end":14104902,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104903,"byte_end":14104945,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104946,"byte_end":14104984,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::ReadDir`]: https://doc.rust-lang.org/std/fs/struct.ReadDir.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14104985,"byte_end":14105063,"line_start":68,"line_end":68,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":6813},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107272,"byte_end":14107281,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link and returns the path it points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link and returns the path it points to.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14106653,"byte_end":14106713,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14106714,"byte_end":14106717,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_link`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14106718,"byte_end":14106782,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14106783,"byte_end":14106786,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::read_link`]: https://doc.rust-lang.org/std/fs/fn.read_link.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14106787,"byte_end":14106865,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14106866,"byte_end":14106869,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14106870,"byte_end":14106882,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14106883,"byte_end":14106886,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14106887,"byte_end":14106945,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14106946,"byte_end":14106949,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing link.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14106950,"byte_end":14106998,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14106999,"byte_end":14107035,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107036,"byte_end":14107039,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107040,"byte_end":14107054,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107055,"byte_end":14107058,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107059,"byte_end":14107072,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107073,"byte_end":14107147,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107148,"byte_end":14107153,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107154,"byte_end":14107176,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107177,"byte_end":14107180,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let path = fs::read_link(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107181,"byte_end":14107226,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107227,"byte_end":14107232,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107233,"byte_end":14107250,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_link.rs","byte_start":14107251,"byte_end":14107258,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6832},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108747,"byte_end":14108761,"line_start":39,"line_end":39,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as a string.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as a string.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14107667,"byte_end":14107719,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14107720,"byte_end":14107723,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a string based on the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14107724,"byte_end":14107823,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14107824,"byte_end":14107920,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14107921,"byte_end":14107933,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14107934,"byte_end":14107937,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as raw bytes, use [`read`] instead.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14107938,"byte_end":14108010,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108011,"byte_end":14108014,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_to_string`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108015,"byte_end":14108084,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108085,"byte_end":14108088,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read`]: fn.read.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108089,"byte_end":14108115,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ [`std::fs::read_to_string`]: https://doc.rust-lang.org/std/fs/fn.read_to_string.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108116,"byte_end":14108204,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108205,"byte_end":14108208,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108209,"byte_end":14108221,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108222,"byte_end":14108225,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108226,"byte_end":14108284,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108285,"byte_end":14108288,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108289,"byte_end":14108337,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108338,"byte_end":14108399,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * The contents of the file cannot be read as a UTF-8 string.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108400,"byte_end":14108464,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108465,"byte_end":14108501,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108502,"byte_end":14108505,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108506,"byte_end":14108520,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108521,"byte_end":14108524,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108525,"byte_end":14108538,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108539,"byte_end":14108613,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108614,"byte_end":14108619,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108620,"byte_end":14108642,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108643,"byte_end":14108646,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read_to_string(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108647,"byte_end":14108701,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108702,"byte_end":14108707,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108708,"byte_end":14108725,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_to_string.rs","byte_start":14108726,"byte_end":14108733,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6851},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109789,"byte_end":14109799,"line_start":31,"line_end":31,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an empty directory.","sig":null,"attributes":[{"value":"/ Removes an empty directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109122,"byte_end":14109153,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109154,"byte_end":14109157,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109158,"byte_end":14109223,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109224,"byte_end":14109227,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir`]: https://doc.rust-lang.org/std/fs/fn.remove_dir.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109228,"byte_end":14109308,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109309,"byte_end":14109312,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109313,"byte_end":14109325,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109326,"byte_end":14109329,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109330,"byte_end":14109388,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109389,"byte_end":14109392,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109393,"byte_end":14109445,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109446,"byte_end":14109514,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109515,"byte_end":14109551,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109552,"byte_end":14109555,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109556,"byte_end":14109570,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109571,"byte_end":14109574,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109575,"byte_end":14109588,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109589,"byte_end":14109663,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109664,"byte_end":14109669,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109670,"byte_end":14109692,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109693,"byte_end":14109696,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109697,"byte_end":14109743,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109744,"byte_end":14109749,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109750,"byte_end":14109767,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir.rs","byte_start":14109768,"byte_end":14109775,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6870},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110859,"byte_end":14110873,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory and all of its contents.","sig":null,"attributes":[{"value":"/ Removes a directory and all of its contents.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110159,"byte_end":14110207,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110208,"byte_end":14110211,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir_all`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110212,"byte_end":14110281,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110282,"byte_end":14110285,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir_all`]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110286,"byte_end":14110374,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110375,"byte_end":14110378,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110379,"byte_end":14110391,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110392,"byte_end":14110395,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110396,"byte_end":14110454,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110455,"byte_end":14110458,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110459,"byte_end":14110511,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110512,"byte_end":14110580,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110581,"byte_end":14110617,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110618,"byte_end":14110621,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110622,"byte_end":14110636,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110637,"byte_end":14110640,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110641,"byte_end":14110654,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110655,"byte_end":14110729,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110730,"byte_end":14110735,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110736,"byte_end":14110758,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110759,"byte_end":14110762,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir_all(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110763,"byte_end":14110813,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110814,"byte_end":14110819,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110820,"byte_end":14110837,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_dir_all.rs","byte_start":14110838,"byte_end":14110845,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6889},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111876,"byte_end":14111887,"line_start":31,"line_end":31,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file.","sig":null,"attributes":[{"value":"/ Removes a file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111237,"byte_end":14111256,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111257,"byte_end":14111260,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_file`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111261,"byte_end":14111327,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111328,"byte_end":14111331,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_file`]: https://doc.rust-lang.org/std/fs/fn.remove_file.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111332,"byte_end":14111414,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111415,"byte_end":14111418,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111419,"byte_end":14111431,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111432,"byte_end":14111435,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111436,"byte_end":14111494,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111495,"byte_end":14111498,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111499,"byte_end":14111547,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to remove the file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111548,"byte_end":14111611,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111612,"byte_end":14111648,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111649,"byte_end":14111652,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111653,"byte_end":14111667,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111668,"byte_end":14111671,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111672,"byte_end":14111685,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111686,"byte_end":14111760,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111761,"byte_end":14111766,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111767,"byte_end":14111789,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111790,"byte_end":14111793,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_file(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111794,"byte_end":14111830,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111831,"byte_end":14111836,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111837,"byte_end":14111854,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\remove_file.rs","byte_start":14111855,"byte_end":14111862,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6908},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14113091,"byte_end":14113097,"line_start":35,"line_end":35,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new location.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new location.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112243,"byte_end":14112293,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112294,"byte_end":14112297,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a file or directory already exists at the target location, it will be overwritten by this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112298,"byte_end":14112394,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112395,"byte_end":14112409,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112410,"byte_end":14112413,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::rename`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112414,"byte_end":14112475,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112476,"byte_end":14112479,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::rename`]: https://doc.rust-lang.org/std/fs/fn.rename.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112480,"byte_end":14112552,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112553,"byte_end":14112556,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112557,"byte_end":14112569,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112570,"byte_end":14112573,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112574,"byte_end":14112632,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112633,"byte_end":14112636,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112637,"byte_end":14112698,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * `from` and `to` are on different filesystems.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112699,"byte_end":14112750,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ * The current process lacks permissions to do the rename operation.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112751,"byte_end":14112822,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112823,"byte_end":14112859,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112860,"byte_end":14112863,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112864,"byte_end":14112878,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112879,"byte_end":14112882,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112883,"byte_end":14112896,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112897,"byte_end":14112971,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112972,"byte_end":14112977,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14112978,"byte_end":14113000,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14113001,"byte_end":14113004,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fs::rename(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14113005,"byte_end":14113045,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14113046,"byte_end":14113051,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14113052,"byte_end":14113069,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\rename.rs","byte_start":14113070,"byte_end":14113077,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6928},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114424,"byte_end":14114439,"line_start":33,"line_end":33,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<P: AsRef<Path>>(P, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions of a file or directory.","sig":null,"attributes":[{"value":"/ Changes the permissions of a file or directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14113599,"byte_end":14113650,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14113651,"byte_end":14113654,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::set_permissions`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14113655,"byte_end":14113725,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14113726,"byte_end":14113729,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::set_permissions`]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14113730,"byte_end":14113820,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14113821,"byte_end":14113824,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14113825,"byte_end":14113837,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14113838,"byte_end":14113841,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14113842,"byte_end":14113900,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14113901,"byte_end":14113904,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14113905,"byte_end":14113966,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to change attributes on the file or directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14113967,"byte_end":14114057,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114058,"byte_end":14114094,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114095,"byte_end":14114098,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114099,"byte_end":14114113,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114114,"byte_end":14114117,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114118,"byte_end":14114131,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114132,"byte_end":14114206,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114207,"byte_end":14114212,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114213,"byte_end":14114235,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114236,"byte_end":14114239,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114240,"byte_end":14114302,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ perm.set_readonly(true);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114303,"byte_end":14114331,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ fs::set_permissions(\"a.txt\", perm).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114332,"byte_end":14114378,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114379,"byte_end":14114384,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114385,"byte_end":14114402,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\set_permissions.rs","byte_start":14114403,"byte_end":14114410,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6946},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115635,"byte_end":14115651,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads metadata for a path without following symbolic links.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14114716,"byte_end":14114779,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14114780,"byte_end":14114783,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you want to follow symbolic links before reading metadata of the target file or directory,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14114784,"byte_end":14114881,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ use [`metadata`] instead.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14114882,"byte_end":14114911,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14114912,"byte_end":14114915,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::symlink_metadata`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14114916,"byte_end":14114987,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14114988,"byte_end":14114991,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`metadata`]: fn.metadata.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14114992,"byte_end":14115026,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::symlink_metadata`]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115027,"byte_end":14115119,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115120,"byte_end":14115123,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115124,"byte_end":14115136,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115137,"byte_end":14115140,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115141,"byte_end":14115199,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115200,"byte_end":14115203,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115204,"byte_end":14115265,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115266,"byte_end":14115340,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115341,"byte_end":14115377,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115378,"byte_end":14115381,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115382,"byte_end":14115396,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115397,"byte_end":14115400,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115401,"byte_end":14115414,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115415,"byte_end":14115489,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115490,"byte_end":14115495,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115496,"byte_end":14115518,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115519,"byte_end":14115522,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::symlink_metadata(\"a.txt\").await?.permissions();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115523,"byte_end":14115589,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115590,"byte_end":14115595,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115596,"byte_end":14115613,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\symlink_metadata.rs","byte_start":14115614,"byte_end":14115621,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6964},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116709,"byte_end":14116714,"line_start":34,"line_end":34,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<P: AsRef<Path>, C: AsRef<[u8]>>(P, C) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Writes a slice of bytes as the new contents of a file.","sig":null,"attributes":[{"value":"/ Writes a slice of bytes as the new contents of a file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14115917,"byte_end":14115975,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14115976,"byte_end":14115979,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist, and will entirely replace its contents","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14115980,"byte_end":14116077,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ if it does.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116078,"byte_end":14116093,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116094,"byte_end":14116097,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::write`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116098,"byte_end":14116158,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116159,"byte_end":14116162,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::write`]: https://doc.rust-lang.org/std/fs/fn.write.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116163,"byte_end":14116233,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116234,"byte_end":14116237,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116238,"byte_end":14116250,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116251,"byte_end":14116254,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116255,"byte_end":14116313,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116314,"byte_end":14116317,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116318,"byte_end":14116367,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116368,"byte_end":14116433,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116434,"byte_end":14116470,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116471,"byte_end":14116474,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116475,"byte_end":14116489,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116490,"byte_end":14116493,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116494,"byte_end":14116507,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116508,"byte_end":14116582,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116583,"byte_end":14116588,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116589,"byte_end":14116611,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116612,"byte_end":14116615,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fs::write(\"a.txt\", b\"Hello world!\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116616,"byte_end":14116663,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116664,"byte_end":14116669,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116670,"byte_end":14116687,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\write.rs","byte_start":14116688,"byte_end":14116695,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":6971},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","parent":null,"children":[{"krate":0,"index":6972},{"krate":0,"index":6984},{"krate":0,"index":7015},{"krate":0,"index":7058},{"krate":0,"index":7218},{"krate":0,"index":7347},{"krate":0,"index":7348},{"krate":0,"index":7351},{"krate":0,"index":7354},{"krate":0,"index":7357},{"krate":0,"index":7360},{"krate":0,"index":7363},{"krate":0,"index":7366},{"krate":0,"index":7369},{"krate":0,"index":7372},{"krate":0,"index":7375},{"krate":0,"index":7378},{"krate":0,"index":7381}],"decl_id":null,"docs":" Cross-platform path manipulation.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Cross-platform path manipulation.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117050,"byte_end":14117087,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117088,"byte_end":14117091,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::path`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117092,"byte_end":14117145,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117146,"byte_end":14117149,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides two types, [`PathBuf`] and [`Path`][`Path`] (akin to [`String`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117150,"byte_end":14117238,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/ and [`str`]), for working with paths abstractly. These types are thin wrappers","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117239,"byte_end":14117321,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ around [`OsString`] and [`OsStr`] respectively, meaning that they work directly","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117322,"byte_end":14117405,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ on strings according to the local platform's path syntax.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117406,"byte_end":14117467,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117468,"byte_end":14117471,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Paths can be parsed into [`Component`]s by iterating over the structure","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117472,"byte_end":14117547,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ returned by the [`components`] method on [`Path`]. [`Component`]s roughly","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117548,"byte_end":14117625,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ correspond to the substrings between path separators (`/` or `\\`). You can","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117626,"byte_end":14117704,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ reconstruct an equivalent path from components with the [`push`] method on","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117705,"byte_end":14117783,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ [`PathBuf`]; note that the paths may differ syntactically by the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117784,"byte_end":14117852,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ normalization described in the documentation for the [`components`] method.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117853,"byte_end":14117932,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117933,"byte_end":14117936,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::path`]: https://doc.rust-lang.org/std/path/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14117937,"byte_end":14118001,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118002,"byte_end":14118005,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Simple usage","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118006,"byte_end":14118025,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118026,"byte_end":14118029,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Path manipulation includes both parsing components from slices and building","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118030,"byte_end":14118109,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ new owned paths.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118110,"byte_end":14118130,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118131,"byte_end":14118134,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To parse a path, you can create a [`Path`] slice from a [`str`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118135,"byte_end":14118202,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ slice and start asking questions:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118203,"byte_end":14118240,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118241,"byte_end":14118244,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118245,"byte_end":14118252,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118253,"byte_end":14118283,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118284,"byte_end":14118308,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118309,"byte_end":14118312,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118313,"byte_end":14118358,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118359,"byte_end":14118362,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118363,"byte_end":14118394,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"/tmp/foo\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118395,"byte_end":14118447,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118448,"byte_end":14118451,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118452,"byte_end":14118489,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118490,"byte_end":14118541,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118542,"byte_end":14118545,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118546,"byte_end":14118583,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118584,"byte_end":14118635,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118636,"byte_end":14118643,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118644,"byte_end":14118647,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ To build or modify paths, use [`PathBuf`]:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118648,"byte_end":14118694,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118695,"byte_end":14118698,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118699,"byte_end":14118706,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118707,"byte_end":14118740,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118741,"byte_end":14118744,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // This way works...","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118745,"byte_end":14118769,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ let mut path = PathBuf::from(\"c:\\\\\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118770,"byte_end":14118811,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118812,"byte_end":14118815,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ path.push(\"windows\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118816,"byte_end":14118841,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/ path.push(\"system32\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118842,"byte_end":14118868,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118869,"byte_end":14118872,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ path.set_extension(\"dll\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118873,"byte_end":14118903,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118904,"byte_end":14118907,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // ... but push is best used if you don't know everything up","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118908,"byte_end":14118972,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ // front. If you do, this way is better:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14118973,"byte_end":14119017,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ let path: PathBuf = [\"c:\\\\\", \"windows\", \"system32.dll\"].iter().collect();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119018,"byte_end":14119095,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119096,"byte_end":14119103,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119104,"byte_end":14119107,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119108,"byte_end":14119146,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119147,"byte_end":14119201,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119202,"byte_end":14119238,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119239,"byte_end":14119269,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/ [`push`]: struct.PathBuf.html#method.push","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119270,"byte_end":14119315,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`String`]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119316,"byte_end":14119387,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119388,"byte_end":14119391,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119392,"byte_end":14119453,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119454,"byte_end":14119526,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\mod.rs","byte_start":14119527,"byte_end":14119593,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7842},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120474,"byte_end":14120483,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Ancestors","qualname":"::path::ancestors::Ancestors","value":"Ancestors {  }","parent":null,"children":[{"krate":0,"index":7844}],"decl_id":null,"docs":" An iterator over [`Path`] and its ancestors.","sig":null,"attributes":[{"value":"/ An iterator over [`Path`] and its ancestors.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14119981,"byte_end":14120029,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120030,"byte_end":14120033,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ancestors`] method on [`Path`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120034,"byte_end":14120103,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120104,"byte_end":14120139,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120140,"byte_end":14120143,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120144,"byte_end":14120158,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120159,"byte_end":14120162,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120163,"byte_end":14120170,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120171,"byte_end":14120201,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120202,"byte_end":14120205,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120206,"byte_end":14120243,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120244,"byte_end":14120247,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ for ancestor in path.ancestors() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120248,"byte_end":14120286,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/     println!(\"{}\", ancestor.display());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120287,"byte_end":14120330,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120331,"byte_end":14120336,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120337,"byte_end":14120344,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120345,"byte_end":14120348,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ancestors`]: struct.Path.html#method.ancestors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120349,"byte_end":14120401,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120402,"byte_end":14120432,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7853},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121445,"byte_end":14121455,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::components::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":7855}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`].","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14120875,"byte_end":14120929,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14120930,"byte_end":14120933,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`components`] method on [`Path`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14120934,"byte_end":14121004,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121005,"byte_end":14121040,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121041,"byte_end":14121044,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121045,"byte_end":14121059,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121060,"byte_end":14121063,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121064,"byte_end":14121071,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121072,"byte_end":14121102,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121103,"byte_end":14121106,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121107,"byte_end":14121152,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121153,"byte_end":14121156,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ for component in path.components() {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121157,"byte_end":14121197,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/     println!(\"{:?}\", component);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121198,"byte_end":14121234,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121235,"byte_end":14121240,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121241,"byte_end":14121248,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121249,"byte_end":14121252,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121253,"byte_end":14121291,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121292,"byte_end":14121346,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121347,"byte_end":14121377,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":7000},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121947,"byte_end":14121954,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Components>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121544,"byte_end":14121630,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121635,"byte_end":14121638,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121643,"byte_end":14121657,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121662,"byte_end":14121665,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121670,"byte_end":14121677,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121682,"byte_end":14121712,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121717,"byte_end":14121720,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo/bar.txt\").components();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121725,"byte_end":14121793,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ components.next();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121798,"byte_end":14121820,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ components.next();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121825,"byte_end":14121847,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121852,"byte_end":14121855,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), components.as_path());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121860,"byte_end":14121923,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121928,"byte_end":14121935,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7879},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123182,"byte_end":14123186,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Iter","qualname":"::path::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":7881}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14122809,"byte_end":14122884,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14122885,"byte_end":14122888,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`Path`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14122889,"byte_end":14122953,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14122954,"byte_end":14122989,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14122990,"byte_end":14122993,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14122994,"byte_end":14123032,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.Path.html#method.iter","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123033,"byte_end":14123075,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123076,"byte_end":14123122,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123123,"byte_end":14123153,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":7037},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123631,"byte_end":14123638,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Iter>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123258,"byte_end":14123344,"line_start":22,"line_end":22,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123349,"byte_end":14123352,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123357,"byte_end":14123371,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123376,"byte_end":14123379,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123384,"byte_end":14123391,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123396,"byte_end":14123426,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123431,"byte_end":14123434,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut iter = Path::new(\"/tmp/foo/bar.txt\").iter();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123439,"byte_end":14123495,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ iter.next();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123500,"byte_end":14123516,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123521,"byte_end":14123537,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123542,"byte_end":14123545,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), iter.as_path());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123550,"byte_end":14123607,"line_start":33,"line_end":33,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123612,"byte_end":14123619,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7885},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126269,"byte_end":14126273,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":7886}],"decl_id":null,"docs":" A slice of a path.","sig":null,"attributes":[{"value":"/ A slice of a path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14124990,"byte_end":14125012,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125013,"byte_end":14125016,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is an async version of [`std::path::Path`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125017,"byte_end":14125076,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125077,"byte_end":14125080,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type supports a number of operations for inspecting a path, including","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125081,"byte_end":14125159,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ breaking the path into its components (separated by `/` on Unix and by either","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125160,"byte_end":14125241,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ `/` or `\\` on Windows), extracting the file name, determining whether the path","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125242,"byte_end":14125324,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ is absolute, and so on.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125325,"byte_end":14125352,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125353,"byte_end":14125356,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is an *unsized* type, meaning that it must always be used behind a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125357,"byte_end":14125432,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ pointer like `&` or `Box`. For an owned version of this type,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125433,"byte_end":14125498,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ see [`PathBuf`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125499,"byte_end":14125519,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125520,"byte_end":14125523,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125524,"byte_end":14125560,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.Path.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125561,"byte_end":14125637,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125638,"byte_end":14125641,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125642,"byte_end":14125701,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125702,"byte_end":14125745,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125746,"byte_end":14125749,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125750,"byte_end":14125764,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125765,"byte_end":14125768,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125769,"byte_end":14125776,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125777,"byte_end":14125801,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125802,"byte_end":14125826,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125827,"byte_end":14125830,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Note: this example does work on Windows","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125831,"byte_end":14125877,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ let path = Path::new(\"./foo/bar.txt\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125878,"byte_end":14125920,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125921,"byte_end":14125924,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125925,"byte_end":14125956,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"./foo\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14125957,"byte_end":14126006,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126007,"byte_end":14126010,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126011,"byte_end":14126048,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126049,"byte_end":14126100,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126101,"byte_end":14126104,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126105,"byte_end":14126142,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126143,"byte_end":14126194,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126195,"byte_end":14126202,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7109},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126905,"byte_end":14126908,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"pub fn new<S: AsRef<OsStr> + ?Sized>(&S) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Directly wraps a string slice as a `Path` slice.","sig":null,"attributes":[{"value":"/ Directly wraps a string slice as a `Path` slice.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126323,"byte_end":14126375,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126380,"byte_end":14126383,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is a cost-free conversion.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126388,"byte_end":14126423,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126428,"byte_end":14126431,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126436,"byte_end":14126450,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126455,"byte_end":14126458,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126463,"byte_end":14126470,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126475,"byte_end":14126505,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126510,"byte_end":14126513,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Path::new(\"foo.txt\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126518,"byte_end":14126543,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126548,"byte_end":14126555,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126560,"byte_end":14126563,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ You can create `Path`s from `String`s, or even other `Path`s:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126568,"byte_end":14126633,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126638,"byte_end":14126641,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126646,"byte_end":14126653,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126658,"byte_end":14126688,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126693,"byte_end":14126696,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let string = String::from(\"foo.txt\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126701,"byte_end":14126742,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ let from_string = Path::new(&string);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126747,"byte_end":14126788,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let from_path = Path::new(&from_string);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126793,"byte_end":14126837,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_string, from_path);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126842,"byte_end":14126881,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126886,"byte_end":14126893,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7111},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127431,"byte_end":14127440,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Path>::as_os_str","value":"pub fn as_os_str(&Self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Returns the underlying [`OsStr`] slice.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127052,"byte_end":14127095,"line_start":80,"line_end":80,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127100,"byte_end":14127103,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127108,"byte_end":14127174,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127179,"byte_end":14127182,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127187,"byte_end":14127201,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127206,"byte_end":14127209,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127214,"byte_end":14127221,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127226,"byte_end":14127250,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127255,"byte_end":14127258,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127263,"byte_end":14127293,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127298,"byte_end":14127301,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let os_str = Path::new(\"foo.txt\").as_os_str();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127306,"byte_end":14127356,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_str, OsStr::new(\"foo.txt\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127361,"byte_end":14127407,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127412,"byte_end":14127419,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7112},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128030,"byte_end":14128036,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Path>::to_str","value":"pub fn to_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`&str`] slice if the `Path` is valid unicode.","sig":null,"attributes":[{"value":"/ Returns a [`&str`] slice if the `Path` is valid unicode.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127502,"byte_end":14127562,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127567,"byte_end":14127570,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127575,"byte_end":14127639,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/ Note that validation is performed because non-UTF-8 strings are","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127644,"byte_end":14127711,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ perfectly valid for some OS.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127716,"byte_end":14127748,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127753,"byte_end":14127756,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127761,"byte_end":14127823,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127828,"byte_end":14127831,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127836,"byte_end":14127850,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127855,"byte_end":14127858,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127863,"byte_end":14127870,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127875,"byte_end":14127905,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127910,"byte_end":14127913,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127918,"byte_end":14127954,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_str(), Some(\"foo.txt\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14127959,"byte_end":14128006,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128011,"byte_end":14128018,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7113},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128829,"byte_end":14128844,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Path>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to a [`Cow<str>`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to a [`Cow<str>`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128101,"byte_end":14128141,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128146,"byte_end":14128149,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128154,"byte_end":14128201,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128206,"byte_end":14128251,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128256,"byte_end":14128259,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`Cow<str>`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128264,"byte_end":14128332,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ [U+FFFD]: https://doc.rust-lang.org/std/char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128337,"byte_end":14128421,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128426,"byte_end":14128429,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128434,"byte_end":14128448,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128453,"byte_end":14128456,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Calling `to_string_lossy` on a `Path` with valid unicode:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128461,"byte_end":14128522,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128527,"byte_end":14128530,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128535,"byte_end":14128542,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128547,"byte_end":14128577,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128582,"byte_end":14128585,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128590,"byte_end":14128626,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo.txt\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128631,"byte_end":14128681,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128686,"byte_end":14128693,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128698,"byte_end":14128701,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Had `path` contained invalid unicode, the `to_string_lossy` call might","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128706,"byte_end":14128780,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ have returned `\"fo�.txt\"`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128785,"byte_end":14128817,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":7114},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129253,"byte_end":14129264,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"to_path_buf","qualname":"<Path>::to_path_buf","value":"pub fn to_path_buf(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to an owned [`PathBuf`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to an owned [`PathBuf`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128918,"byte_end":14128964,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128969,"byte_end":14128972,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14128977,"byte_end":14129013,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129018,"byte_end":14129021,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129026,"byte_end":14129040,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129045,"byte_end":14129048,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129053,"byte_end":14129060,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129065,"byte_end":14129106,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129111,"byte_end":14129114,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let path_buf = Path::new(\"foo.txt\").to_path_buf();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129119,"byte_end":14129173,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(path_buf, PathBuf::from(\"foo.txt\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129178,"byte_end":14129229,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129234,"byte_end":14129241,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7115},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129964,"byte_end":14129975,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<Path>::is_absolute","value":"pub fn is_absolute(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is absolute, i.e. if it is independent of\n the current directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is absolute, i.e. if it is independent of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129344,"byte_end":14129418,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ the current directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129423,"byte_end":14129449,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129454,"byte_end":14129457,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path is absolute if it starts with the root, so","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129462,"byte_end":14129526,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/   `is_absolute` and [`has_root`] are equivalent.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129531,"byte_end":14129583,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129588,"byte_end":14129591,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path is absolute if it has a prefix and starts with the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129596,"byte_end":14129671,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   root: `c:\\windows` is absolute, while `c:temp` and `\\temp` are not.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129676,"byte_end":14129749,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129754,"byte_end":14129757,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`has_root`]: #method.has_root","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129762,"byte_end":14129796,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129801,"byte_end":14129804,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129809,"byte_end":14129823,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129828,"byte_end":14129831,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129836,"byte_end":14129843,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129848,"byte_end":14129878,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129883,"byte_end":14129886,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!Path::new(\"foo.txt\").is_absolute());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129891,"byte_end":14129940,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14129945,"byte_end":14129952,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7116},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130391,"byte_end":14130402,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<Path>::is_relative","value":"pub fn is_relative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is relative, i.e. not absolute.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is relative, i.e. not absolute.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130037,"byte_end":14130101,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130106,"byte_end":14130109,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ See [`is_absolute`]'s documentation for more details.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130114,"byte_end":14130171,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130176,"byte_end":14130179,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`is_absolute`]: #method.is_absolute","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130184,"byte_end":14130224,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130229,"byte_end":14130232,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130237,"byte_end":14130251,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130256,"byte_end":14130259,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130264,"byte_end":14130271,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130276,"byte_end":14130306,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130311,"byte_end":14130314,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"foo.txt\").is_relative());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130319,"byte_end":14130367,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130372,"byte_end":14130379,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7117},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131023,"byte_end":14131031,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"has_root","qualname":"<Path>::has_root","value":"pub fn has_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` has a root.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` has a root.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130464,"byte_end":14130508,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130513,"byte_end":14130516,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path has a root if it begins with `/`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130521,"byte_end":14130576,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130581,"byte_end":14130584,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path has a root if it:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130589,"byte_end":14130631,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/     * has no prefix and begins with a separator, e.g. `\\windows`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130636,"byte_end":14130704,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/     * has a prefix followed by a separator, e.g. `c:\\windows` but not `c:windows`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130709,"byte_end":14130794,"line_start":204,"line_end":204,"column_start":5,"column_end":90}},{"value":"/     * has any non-disk prefix, e.g. `\\\\server\\share`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130799,"byte_end":14130855,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130860,"byte_end":14130863,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130868,"byte_end":14130882,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130887,"byte_end":14130890,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130895,"byte_end":14130902,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130907,"byte_end":14130937,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130942,"byte_end":14130945,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"/etc/passwd\").has_root());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14130950,"byte_end":14130999,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131004,"byte_end":14131011,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7118},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131736,"byte_end":14131742,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"pub fn parent(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` without its final component, if there is one.","sig":null,"attributes":[{"value":"/ Returns the `Path` without its final component, if there is one.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131090,"byte_end":14131158,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131163,"byte_end":14131166,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in a root or prefix.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131171,"byte_end":14131235,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131240,"byte_end":14131243,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131248,"byte_end":14131328,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131333,"byte_end":14131336,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131341,"byte_end":14131355,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131360,"byte_end":14131363,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131368,"byte_end":14131375,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131380,"byte_end":14131410,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131415,"byte_end":14131418,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131423,"byte_end":14131460,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ let parent = path.parent().unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131465,"byte_end":14131505,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(parent, Path::new(\"/foo\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131510,"byte_end":14131552,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131557,"byte_end":14131560,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let grand_parent = parent.parent().unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131565,"byte_end":14131613,"line_start":233,"line_end":233,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(grand_parent, Path::new(\"/\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131618,"byte_end":14131663,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(grand_parent.parent(), None);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131668,"byte_end":14131712,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131717,"byte_end":14131724,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7120},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132865,"byte_end":14132874,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"ancestors","qualname":"<Path>::ancestors","value":"pub fn ancestors(&Self) -> Ancestors","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over `Path` and its ancestors.","sig":null,"attributes":[{"value":"/ Produces an iterator over `Path` and its ancestors.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131826,"byte_end":14131881,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131886,"byte_end":14131889,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield the `Path` that is returned if the [`parent`] method is used zero","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131894,"byte_end":14131987,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14131992,"byte_end":14132082,"line_start":244,"line_end":244,"column_start":5,"column_end":95}},{"value":"/ `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132087,"byte_end":14132178,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/ [`None`], the iterator will do likewise. The iterator will always yield at least one value,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132183,"byte_end":14132278,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ namely `&self`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132283,"byte_end":14132302,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132307,"byte_end":14132310,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132315,"byte_end":14132382,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/ [`parent`]: struct.Path.html#method.parent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132387,"byte_end":14132433,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132438,"byte_end":14132441,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132446,"byte_end":14132460,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132465,"byte_end":14132468,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132473,"byte_end":14132480,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132485,"byte_end":14132515,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132520,"byte_end":14132523,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut ancestors = Path::new(\"/foo/bar\").ancestors();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132528,"byte_end":14132586,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo/bar\").into()));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132591,"byte_end":14132660,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo\").into()));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132665,"byte_end":14132730,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/\").into()));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132735,"byte_end":14132797,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(ancestors.next(), None);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132802,"byte_end":14132841,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132846,"byte_end":14132853,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7121},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133919,"byte_end":14133928,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Path>::file_name","value":"pub fn file_name(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final component of the `Path`, if there is one.","sig":null,"attributes":[{"value":"/ Returns the final component of the `Path`, if there is one.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14132952,"byte_end":14133015,"line_start":267,"line_end":267,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133020,"byte_end":14133023,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the path is a normal file, this is the file name. If it's the path of a directory, this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133028,"byte_end":14133122,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ is the directory name.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133127,"byte_end":14133153,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133158,"byte_end":14133161,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in `..`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133166,"byte_end":14133218,"line_start":272,"line_end":272,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133223,"byte_end":14133226,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133231,"byte_end":14133311,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133316,"byte_end":14133319,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133324,"byte_end":14133338,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133343,"byte_end":14133346,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133351,"byte_end":14133358,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133363,"byte_end":14133387,"line_start":279,"line_end":279,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133392,"byte_end":14133395,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133400,"byte_end":14133430,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133435,"byte_end":14133438,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(OsStr::new(\"bin\")), Path::new(\"/usr/bin/\").file_name());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133443,"byte_end":14133519,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"tmp/foo.txt\").file_name());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133524,"byte_end":14133606,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.\").file_name());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133611,"byte_end":14133691,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.//\").file_name());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133696,"byte_end":14133778,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(None, Path::new(\"foo.txt/..\").file_name());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133783,"byte_end":14133841,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, Path::new(\"/\").file_name());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133846,"byte_end":14133895,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133900,"byte_end":14133907,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7122},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135182,"byte_end":14135194,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<Path>::strip_prefix","value":"pub fn strip_prefix<P>(&Self, P) -> Result<&Path, StripPrefixError> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns a path that becomes `self` when joined onto `base`.","sig":null,"attributes":[{"value":"/ Returns a path that becomes `self` when joined onto `base`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14133998,"byte_end":14134061,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134066,"byte_end":14134069,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134074,"byte_end":14134086,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134091,"byte_end":14134094,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `base` is not a prefix of `self` (i.e., [`starts_with`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134099,"byte_end":14134161,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/ returns `false`), returns [`Err`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134166,"byte_end":14134204,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134209,"byte_end":14134212,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`starts_with`]: #method.starts_with","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134217,"byte_end":14134257,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ [`Err`]: https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134262,"byte_end":14134340,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134345,"byte_end":14134348,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134353,"byte_end":14134367,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134372,"byte_end":14134375,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134380,"byte_end":14134387,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134392,"byte_end":14134433,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134438,"byte_end":14134441,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/test/haha/foo.txt\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134446,"byte_end":14134493,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134498,"byte_end":14134501,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(path.strip_prefix(\"/\"), Ok(Path::new(\"test/haha/foo.txt\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134506,"byte_end":14134581,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134586,"byte_end":14134660,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134665,"byte_end":14134740,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt\"), Ok(Path::new(\"\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134745,"byte_end":14134820,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt/\"), Ok(Path::new(\"\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134825,"byte_end":14134901,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(path.strip_prefix(\"test\").is_ok(), false);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134906,"byte_end":14134963,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(path.strip_prefix(\"/haha\").is_ok(), false);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14134968,"byte_end":14135026,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135031,"byte_end":14135034,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let prefix = PathBuf::from(\"/test/\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135039,"byte_end":14135080,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.strip_prefix(prefix), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135085,"byte_end":14135158,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135163,"byte_end":14135170,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7124},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135879,"byte_end":14135890,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Path>::starts_with","value":"pub fn starts_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135359,"byte_end":14135411,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135416,"byte_end":14135419,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135424,"byte_end":14135474,"line_start":331,"line_end":331,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135479,"byte_end":14135482,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135487,"byte_end":14135501,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135506,"byte_end":14135509,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135514,"byte_end":14135521,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135526,"byte_end":14135556,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135561,"byte_end":14135564,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135569,"byte_end":14135609,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135614,"byte_end":14135617,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(path.starts_with(\"/etc\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135622,"byte_end":14135660,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/ assert!(path.starts_with(\"/etc/\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135665,"byte_end":14135704,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/ assert!(path.starts_with(\"/etc/passwd\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135709,"byte_end":14135754,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/ assert!(path.starts_with(\"/etc/passwd/\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135759,"byte_end":14135805,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135810,"byte_end":14135813,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(!path.starts_with(\"/e\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135818,"byte_end":14135855,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135860,"byte_end":14135867,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7126},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136316,"byte_end":14136325,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Path>::ends_with","value":"pub fn ends_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `child` is a suffix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `child` is a suffix of `self`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14135990,"byte_end":14136043,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136048,"byte_end":14136051,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136056,"byte_end":14136106,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136111,"byte_end":14136114,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136119,"byte_end":14136133,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136138,"byte_end":14136141,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136146,"byte_end":14136153,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136158,"byte_end":14136188,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136193,"byte_end":14136196,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136201,"byte_end":14136241,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136246,"byte_end":14136249,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ assert!(path.ends_with(\"passwd\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136254,"byte_end":14136292,"line_start":362,"line_end":362,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136297,"byte_end":14136304,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7128},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137167,"byte_end":14137176,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"file_stem","qualname":"<Path>::file_stem","value":"pub fn file_stem(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the stem (non-extension) portion of [`file_name`].","sig":null,"attributes":[{"value":"/ Extracts the stem (non-extension) portion of [`file_name`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136425,"byte_end":14136488,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136493,"byte_end":14136496,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136501,"byte_end":14136553,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136558,"byte_end":14136561,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The stem is:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136566,"byte_end":14136582,"line_start":372,"line_end":372,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136587,"byte_end":14136590,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136595,"byte_end":14136635,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ * The entire file name if there is no embedded `.`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136640,"byte_end":14136694,"line_start":375,"line_end":375,"column_start":5,"column_end":59}},{"value":"/ * The entire file name if the file name begins with `.` and has no other `.`s within","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136699,"byte_end":14136787,"line_start":376,"line_end":376,"column_start":5,"column_end":93}},{"value":"/ * Otherwise, the portion of the file name before the final `.`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136792,"byte_end":14136858,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136863,"byte_end":14136866,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136871,"byte_end":14136951,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136956,"byte_end":14136959,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136964,"byte_end":14136978,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136983,"byte_end":14136986,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14136991,"byte_end":14136998,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137003,"byte_end":14137033,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137038,"byte_end":14137041,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137046,"byte_end":14137081,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137086,"byte_end":14137089,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", path.file_stem().unwrap());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137094,"byte_end":14137143,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137148,"byte_end":14137155,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7129},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137955,"byte_end":14137964,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"extension","qualname":"<Path>::extension","value":"pub fn extension(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the extension of [`file_name`], if possible.","sig":null,"attributes":[{"value":"/ Extracts the extension of [`file_name`], if possible.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137246,"byte_end":14137303,"line_start":394,"line_end":394,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137308,"byte_end":14137311,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The extension is:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137316,"byte_end":14137337,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137342,"byte_end":14137345,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137350,"byte_end":14137390,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ * [`None`], if there is no embedded `.`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137395,"byte_end":14137438,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ * [`None`], if the file name begins with `.` and has no other `.`s within","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137443,"byte_end":14137520,"line_start":400,"line_end":400,"column_start":5,"column_end":82}},{"value":"/ * Otherwise, the portion of the file name after the final `.`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137525,"byte_end":14137590,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137595,"byte_end":14137598,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137603,"byte_end":14137655,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137660,"byte_end":14137740,"line_start":404,"line_end":404,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137745,"byte_end":14137748,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137753,"byte_end":14137767,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137772,"byte_end":14137775,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137780,"byte_end":14137787,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137792,"byte_end":14137822,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137827,"byte_end":14137830,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137835,"byte_end":14137870,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137875,"byte_end":14137878,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"rs\", path.extension().unwrap());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137883,"byte_end":14137931,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14137936,"byte_end":14137943,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7130},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138505,"byte_end":14138509,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"pub fn join<P: AsRef<Path>>(&Self, P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] with `path` adjoined to `self`.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] with `path` adjoined to `self`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138034,"byte_end":14138098,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138103,"byte_end":14138106,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::push`] for more details on what it means to adjoin a path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138111,"byte_end":14138188,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138193,"byte_end":14138196,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138201,"byte_end":14138237,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::push`]: struct.PathBuf.html#method.push","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138242,"byte_end":14138296,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138301,"byte_end":14138304,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138309,"byte_end":14138323,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138328,"byte_end":14138331,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138336,"byte_end":14138343,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138348,"byte_end":14138389,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138394,"byte_end":14138397,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"/etc\").join(\"passwd\"), PathBuf::from(\"/etc/passwd\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138402,"byte_end":14138481,"line_start":431,"line_end":431,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138486,"byte_end":14138493,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7132},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139248,"byte_end":14139262,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_file_name","qualname":"<Path>::with_file_name","value":"pub fn with_file_name<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given file name.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given file name.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138612,"byte_end":14138686,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138691,"byte_end":14138694,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_file_name`] for more details.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138699,"byte_end":14138751,"line_start":439,"line_end":439,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138756,"byte_end":14138759,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138764,"byte_end":14138800,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_file_name`]: struct.PathBuf.html#method.set_file_name","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138805,"byte_end":14138877,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138882,"byte_end":14138885,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138890,"byte_end":14138904,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138909,"byte_end":14138912,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138917,"byte_end":14138924,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138929,"byte_end":14138970,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138975,"byte_end":14138978,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.txt\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14138983,"byte_end":14139024,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.with_file_name(\"bar.txt\"), PathBuf::from(\"/tmp/bar.txt\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139029,"byte_end":14139107,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139112,"byte_end":14139115,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139120,"byte_end":14139153,"line_start":452,"line_end":452,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(path.with_file_name(\"var\"), PathBuf::from(\"/var\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139158,"byte_end":14139224,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139229,"byte_end":14139236,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7134},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139881,"byte_end":14139895,"line_start":474,"line_end":474,"column_start":12,"column_end":26},"name":"with_extension","qualname":"<Path>::with_extension","value":"pub fn with_extension<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given extension.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given extension.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139377,"byte_end":14139451,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139456,"byte_end":14139459,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_extension`] for more details.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139464,"byte_end":14139516,"line_start":461,"line_end":461,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139521,"byte_end":14139524,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139529,"byte_end":14139565,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139570,"byte_end":14139642,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139647,"byte_end":14139650,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139655,"byte_end":14139669,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139674,"byte_end":14139677,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139682,"byte_end":14139689,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139694,"byte_end":14139735,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139740,"byte_end":14139743,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139748,"byte_end":14139783,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(path.with_extension(\"txt\"), PathBuf::from(\"foo.txt\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139788,"byte_end":14139857,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14139862,"byte_end":14139869,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7136},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141482,"byte_end":14141492,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"pub fn components(&Self) -> Components","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the [`Component`]s of the path.","sig":null,"attributes":[{"value":"/ Produces an iterator over the [`Component`]s of the path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140010,"byte_end":14140071,"line_start":478,"line_end":478,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140076,"byte_end":14140079,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When parsing the path, there is a small amount of normalization:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140084,"byte_end":14140152,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140157,"byte_end":14140160,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * Repeated separators are ignored, so `a/b` and `a//b` both have","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140165,"byte_end":14140233,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/   `a` and `b` as components.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140238,"byte_end":14140270,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140275,"byte_end":14140278,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ * Occurrences of `.` are normalized away, except if they are at the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140283,"byte_end":14140354,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140359,"byte_end":14140429,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/   `a/b` all have `a` and `b` as components, but `./a/b` starts with","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140434,"byte_end":14140505,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/   an additional [`CurDir`] component.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140510,"byte_end":14140551,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140556,"byte_end":14140559,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * A trailing slash is normalized away, `/a/b` and `/a/b/` are equivalent.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140564,"byte_end":14140641,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140646,"byte_end":14140649,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that no other normalization takes place; in particular, `a/c`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140654,"byte_end":14140724,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ and `a/b/../c` are distinct, to account for the possibility that `b`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140729,"byte_end":14140801,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ is a symbolic link (so its parent isn't `a`).","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140806,"byte_end":14140855,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140860,"byte_end":14140863,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140868,"byte_end":14140906,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/ [`CurDir`]: enum.Component.html#variant.CurDir","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140911,"byte_end":14140961,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140966,"byte_end":14140969,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140974,"byte_end":14140988,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14140993,"byte_end":14140996,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141001,"byte_end":14141008,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141013,"byte_end":14141037,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141042,"byte_end":14141045,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{Path, Component};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141050,"byte_end":14141093,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141098,"byte_end":14141101,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo.txt\").components();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141106,"byte_end":14141170,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141175,"byte_end":14141178,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(components.next(), Some(Component::RootDir));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141183,"byte_end":14141243,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"tmp\"))));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141248,"byte_end":14141326,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"foo.txt\"))));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141331,"byte_end":14141413,"line_start":510,"line_end":510,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(components.next(), None);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141418,"byte_end":14141458,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141463,"byte_end":14141470,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7137},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142398,"byte_end":14142402,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the path's components viewed as [`OsStr`]\n slices.","sig":null,"attributes":[{"value":"/ Produces an iterator over the path's components viewed as [`OsStr`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141606,"byte_end":14141677,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ slices.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141682,"byte_end":14141693,"line_start":520,"line_end":520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141698,"byte_end":14141701,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For more information about the particulars of how the path is separated","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141706,"byte_end":14141781,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ into components, see [`components`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141786,"byte_end":14141826,"line_start":523,"line_end":523,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141831,"byte_end":14141834,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`components`]: #method.components","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141839,"byte_end":14141877,"line_start":525,"line_end":525,"column_start":5,"column_end":43}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141882,"byte_end":14141948,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141953,"byte_end":14141956,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141961,"byte_end":14141975,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141980,"byte_end":14141983,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14141988,"byte_end":14141995,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142000,"byte_end":14142024,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142029,"byte_end":14142032,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{self, Path};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142037,"byte_end":14142075,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142080,"byte_end":14142083,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut it = Path::new(\"/tmp/foo.txt\").iter();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142088,"byte_end":14142138,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(&path::MAIN_SEPARATOR.to_string())));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142143,"byte_end":14142222,"line_start":536,"line_end":536,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"tmp\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142227,"byte_end":14142278,"line_start":537,"line_end":537,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"foo.txt\")));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142283,"byte_end":14142338,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(it.next(), None)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142343,"byte_end":14142374,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142379,"byte_end":14142386,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7138},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142905,"byte_end":14142912,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"display","qualname":"<Path>::display","value":"pub fn display(&Self) -> Display","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`] for safely printing paths\n that may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`] for safely printing paths","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142498,"byte_end":14142573,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ that may contain non-Unicode data.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142578,"byte_end":14142616,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142621,"byte_end":14142624,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142629,"byte_end":14142698,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142703,"byte_end":14142706,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142711,"byte_end":14142725,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142730,"byte_end":14142733,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142738,"byte_end":14142745,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142750,"byte_end":14142780,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142785,"byte_end":14142788,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.rs\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142793,"byte_end":14142833,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142838,"byte_end":14142841,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", path.display());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142846,"byte_end":14142881,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142886,"byte_end":14142893,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7139},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143678,"byte_end":14143686,"line_start":588,"line_end":588,"column_start":18,"column_end":26},"name":"metadata","qualname":"<Path>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14142977,"byte_end":14143023,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143028,"byte_end":14143031,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143036,"byte_end":14143113,"line_start":567,"line_end":567,"column_start":5,"column_end":82}},{"value":"/ destination file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143118,"byte_end":14143139,"line_start":568,"line_end":568,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143144,"byte_end":14143147,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::metadata`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143152,"byte_end":14143193,"line_start":570,"line_end":570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143198,"byte_end":14143201,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`fs::metadata`]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143206,"byte_end":14143250,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143255,"byte_end":14143258,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143263,"byte_end":14143277,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143282,"byte_end":14143285,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143290,"byte_end":14143303,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143308,"byte_end":14143382,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143387,"byte_end":14143392,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143397,"byte_end":14143427,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143432,"byte_end":14143435,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143440,"byte_end":14143482,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.metadata().await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143487,"byte_end":14143529,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143534,"byte_end":14143577,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143582,"byte_end":14143587,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143592,"byte_end":14143609,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143614,"byte_end":14143621,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143626,"byte_end":14143660,"line_start":587,"line_end":587,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7142},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144418,"byte_end":14144434,"line_start":612,"line_end":612,"column_start":18,"column_end":34},"name":"symlink_metadata","qualname":"<Path>::symlink_metadata","value":"pub async fn symlink_metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory without following symbolic links.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143768,"byte_end":14143847,"line_start":592,"line_end":592,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143852,"byte_end":14143855,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::symlink_metadata`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143860,"byte_end":14143909,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143914,"byte_end":14143917,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [`fs::symlink_metadata`]: ../fs/fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143922,"byte_end":14143982,"line_start":596,"line_end":596,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143987,"byte_end":14143990,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14143995,"byte_end":14144009,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144014,"byte_end":14144017,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144022,"byte_end":14144035,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144040,"byte_end":14144114,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144119,"byte_end":14144124,"line_start":602,"line_end":602,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144129,"byte_end":14144159,"line_start":603,"line_end":603,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144164,"byte_end":14144167,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144172,"byte_end":14144214,"line_start":605,"line_end":605,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.symlink_metadata().await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144219,"byte_end":14144269,"line_start":606,"line_end":606,"column_start":5,"column_end":55}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144274,"byte_end":14144317,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144322,"byte_end":14144327,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144332,"byte_end":14144349,"line_start":609,"line_end":609,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144354,"byte_end":14144361,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144366,"byte_end":14144400,"line_start":611,"line_end":611,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7145},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145261,"byte_end":14145273,"line_start":638,"line_end":638,"column_start":18,"column_end":30},"name":"canonicalize","qualname":"<Path>::canonicalize","value":"pub async fn canonicalize<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144524,"byte_end":14144565,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144570,"byte_end":14144573,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144578,"byte_end":14144667,"line_start":618,"line_end":618,"column_start":5,"column_end":94}},{"value":"/ symbolic links resolved.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144672,"byte_end":14144700,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144705,"byte_end":14144708,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::canonicalize`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144713,"byte_end":14144758,"line_start":621,"line_end":621,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144763,"byte_end":14144766,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ [`fs::canonicalize`]: ../fs/fn.canonicalize.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144771,"byte_end":14144823,"line_start":623,"line_end":623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144828,"byte_end":14144831,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144836,"byte_end":14144850,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144855,"byte_end":14144858,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144863,"byte_end":14144876,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144881,"byte_end":14144955,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144960,"byte_end":14144965,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14144970,"byte_end":14145011,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145016,"byte_end":14145019,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/test/../test/bar.rs\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145024,"byte_end":14145077,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(path.canonicalize().await?, PathBuf::from(\"/foo/test/bar.rs\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145082,"byte_end":14145160,"line_start":633,"line_end":633,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145165,"byte_end":14145170,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145175,"byte_end":14145192,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145197,"byte_end":14145204,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145209,"byte_end":14145243,"line_start":637,"line_end":637,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7148},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145928,"byte_end":14145937,"line_start":661,"line_end":661,"column_start":18,"column_end":27},"name":"read_link","qualname":"<Path>::read_link","value":"pub async fn read_link<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145354,"byte_end":14145424,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145429,"byte_end":14145432,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_link`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145437,"byte_end":14145479,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145484,"byte_end":14145487,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ [`fs::read_link`]: ../fs/fn.read_link.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145492,"byte_end":14145538,"line_start":646,"line_end":646,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145543,"byte_end":14145546,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145551,"byte_end":14145565,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145570,"byte_end":14145573,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145578,"byte_end":14145591,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145596,"byte_end":14145670,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145675,"byte_end":14145680,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145685,"byte_end":14145715,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145720,"byte_end":14145723,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa/sky_castle.rs\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145728,"byte_end":14145778,"line_start":655,"line_end":655,"column_start":5,"column_end":55}},{"value":"/ let path_link = path.read_link().await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145783,"byte_end":14145827,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145832,"byte_end":14145837,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145842,"byte_end":14145859,"line_start":658,"line_end":658,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145864,"byte_end":14145871,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14145876,"byte_end":14145910,"line_start":660,"line_end":660,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7151},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147047,"byte_end":14147055,"line_start":696,"line_end":696,"column_start":18,"column_end":26},"name":"read_dir","qualname":"<Path>::read_dir","value":"pub async fn read_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146015,"byte_end":14146072,"line_start":665,"line_end":665,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146077,"byte_end":14146080,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The stream will yield instances of [`io::Result`]`<`[`DirEntry`]`>`. New","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146085,"byte_end":14146161,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/ errors may be encountered after an iterator is initially constructed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146166,"byte_end":14146239,"line_start":668,"line_end":668,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146244,"byte_end":14146247,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_dir`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146252,"byte_end":14146293,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146298,"byte_end":14146301,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146306,"byte_end":14146348,"line_start":672,"line_end":672,"column_start":5,"column_end":47}},{"value":"/ [`DirEntry`]: ../fs/struct.DirEntry.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146353,"byte_end":14146397,"line_start":673,"line_end":673,"column_start":5,"column_end":49}},{"value":"/ [`fs::read_dir`]: ../fs/fn.read_dir.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146402,"byte_end":14146446,"line_start":674,"line_end":674,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146451,"byte_end":14146454,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146459,"byte_end":14146473,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146478,"byte_end":14146481,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146486,"byte_end":14146499,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146504,"byte_end":14146578,"line_start":679,"line_end":679,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146583,"byte_end":14146588,"line_start":680,"line_end":680,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146593,"byte_end":14146615,"line_start":681,"line_end":681,"column_start":5,"column_end":27}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146620,"byte_end":14146650,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146655,"byte_end":14146685,"line_start":683,"line_end":683,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146690,"byte_end":14146693,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146698,"byte_end":14146734,"line_start":685,"line_end":685,"column_start":5,"column_end":41}},{"value":"/ let mut dir = fs::read_dir(&path).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146739,"byte_end":14146784,"line_start":686,"line_end":686,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146789,"byte_end":14146792,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146797,"byte_end":14146841,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146846,"byte_end":14146871,"line_start":689,"line_end":689,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146876,"byte_end":14146936,"line_start":690,"line_end":690,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146941,"byte_end":14146946,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146951,"byte_end":14146956,"line_start":692,"line_end":692,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146961,"byte_end":14146978,"line_start":693,"line_end":693,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146983,"byte_end":14146990,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14146995,"byte_end":14147029,"line_start":695,"line_end":695,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7154},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148084,"byte_end":14148090,"line_start":726,"line_end":726,"column_start":18,"column_end":24},"name":"exists","qualname":"<Path>::exists","value":"pub async fn exists<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path points at an existing entity.","sig":null,"attributes":[{"value":"/ Returns `true` if the path points at an existing entity.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147136,"byte_end":14147196,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147201,"byte_end":14147204,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147209,"byte_end":14147286,"line_start":702,"line_end":702,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147291,"byte_end":14147371,"line_start":703,"line_end":703,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147376,"byte_end":14147379,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147384,"byte_end":14147462,"line_start":705,"line_end":705,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147467,"byte_end":14147514,"line_start":706,"line_end":706,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147519,"byte_end":14147522,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147527,"byte_end":14147541,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147546,"byte_end":14147549,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147554,"byte_end":14147567,"line_start":710,"line_end":710,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147572,"byte_end":14147646,"line_start":711,"line_end":711,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147651,"byte_end":14147656,"line_start":712,"line_end":712,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147661,"byte_end":14147691,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"does_not_exist.txt\").exists().await, false);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147696,"byte_end":14147766,"line_start":714,"line_end":714,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147771,"byte_end":14147776,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147781,"byte_end":14147798,"line_start":716,"line_end":716,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147803,"byte_end":14147810,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147815,"byte_end":14147818,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147823,"byte_end":14147837,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147842,"byte_end":14147845,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147850,"byte_end":14147929,"line_start":721,"line_end":721,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147934,"byte_end":14147972,"line_start":722,"line_end":722,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147977,"byte_end":14147980,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14147985,"byte_end":14148027,"line_start":724,"line_end":724,"column_start":5,"column_end":47}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148032,"byte_end":14148066,"line_start":725,"line_end":725,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7157},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149348,"byte_end":14149355,"line_start":759,"line_end":759,"column_start":18,"column_end":25},"name":"is_file","qualname":"<Path>::is_file","value":"pub async fn is_file<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a regular file.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a regular file.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148160,"byte_end":14148240,"line_start":730,"line_end":730,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148245,"byte_end":14148248,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148253,"byte_end":14148330,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148335,"byte_end":14148415,"line_start":733,"line_end":733,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148420,"byte_end":14148423,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148428,"byte_end":14148506,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148511,"byte_end":14148558,"line_start":736,"line_end":736,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148563,"byte_end":14148566,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148571,"byte_end":14148585,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148590,"byte_end":14148593,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148598,"byte_end":14148611,"line_start":740,"line_end":740,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148616,"byte_end":14148690,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148695,"byte_end":14148700,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148705,"byte_end":14148735,"line_start":743,"line_end":743,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_file().await, false);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148740,"byte_end":14148810,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_file().await, true);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148815,"byte_end":14148877,"line_start":745,"line_end":745,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148882,"byte_end":14148887,"line_start":746,"line_end":746,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148892,"byte_end":14148909,"line_start":747,"line_end":747,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148914,"byte_end":14148921,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148926,"byte_end":14148929,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148934,"byte_end":14148948,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148953,"byte_end":14148956,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14148961,"byte_end":14149040,"line_start":752,"line_end":752,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149045,"byte_end":14149115,"line_start":753,"line_end":753,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_file] if it was Ok.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149120,"byte_end":14149161,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149166,"byte_end":14149169,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149174,"byte_end":14149216,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_file]: ../fs/struct.Metadata.html#method.is_file","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149221,"byte_end":14149291,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149296,"byte_end":14149330,"line_start":758,"line_end":758,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7161},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150682,"byte_end":14150688,"line_start":796,"line_end":796,"column_start":18,"column_end":24},"name":"is_dir","qualname":"<Path>::is_dir","value":"pub async fn is_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a directory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149494,"byte_end":14149571,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149576,"byte_end":14149579,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149584,"byte_end":14149661,"line_start":768,"line_end":768,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149666,"byte_end":14149746,"line_start":769,"line_end":769,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149751,"byte_end":14149754,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149759,"byte_end":14149837,"line_start":771,"line_end":771,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149842,"byte_end":14149889,"line_start":772,"line_end":772,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149894,"byte_end":14149897,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149902,"byte_end":14149916,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149921,"byte_end":14149924,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149929,"byte_end":14149942,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14149947,"byte_end":14150021,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150026,"byte_end":14150031,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150036,"byte_end":14150066,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150071,"byte_end":14150074,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_dir().await, true);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150079,"byte_end":14150147,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_dir().await, false);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150152,"byte_end":14150214,"line_start":782,"line_end":782,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150219,"byte_end":14150224,"line_start":783,"line_end":783,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150229,"byte_end":14150246,"line_start":784,"line_end":784,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150251,"byte_end":14150258,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150263,"byte_end":14150266,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150271,"byte_end":14150285,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150290,"byte_end":14150293,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150298,"byte_end":14150377,"line_start":789,"line_end":789,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150382,"byte_end":14150452,"line_start":790,"line_end":790,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_dir] if it was Ok.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150457,"byte_end":14150497,"line_start":791,"line_end":791,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150502,"byte_end":14150505,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150510,"byte_end":14150552,"line_start":793,"line_end":793,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_dir]: ../fs/struct.Metadata.html#method.is_dir","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150557,"byte_end":14150625,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150630,"byte_end":14150664,"line_start":795,"line_end":795,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7165},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151255,"byte_end":14151268,"line_start":817,"line_end":817,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"pub fn into_path_buf(Box<Path>) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150826,"byte_end":14150899,"line_start":803,"line_end":803,"column_start":5,"column_end":78}},{"value":"/ allocating.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150904,"byte_end":14150919,"line_start":804,"line_end":804,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150924,"byte_end":14150927,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14150932,"byte_end":14150996,"line_start":806,"line_end":806,"column_start":5,"column_end":69}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151001,"byte_end":14151037,"line_start":807,"line_end":807,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151042,"byte_end":14151045,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151050,"byte_end":14151064,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151069,"byte_end":14151072,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151077,"byte_end":14151084,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151089,"byte_end":14151119,"line_start":812,"line_end":812,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151124,"byte_end":14151127,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let path: Box<Path> = Path::new(\"foo.txt\").into();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151132,"byte_end":14151186,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/ let path_buf = path.into_path_buf();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151191,"byte_end":14151231,"line_start":815,"line_end":815,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151236,"byte_end":14151243,"line_start":816,"line_end":816,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8159},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157238,"byte_end":14157245,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::path::pathbuf::PathBuf","value":"PathBuf {  }","parent":null,"children":[{"krate":0,"index":8160}],"decl_id":null,"docs":" This struct is an async version of [`std::path::PathBuf`].","sig":null,"attributes":[{"value":"/ This struct is an async version of [`std::path::PathBuf`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157009,"byte_end":14157071,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157072,"byte_end":14157075,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157076,"byte_end":14157155,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7270},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157486,"byte_end":14157489,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"pub fn new() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Allocates an empty `PathBuf`.","sig":null,"attributes":[{"value":"/ Allocates an empty `PathBuf`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157301,"byte_end":14157334,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157339,"byte_end":14157342,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157347,"byte_end":14157361,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157366,"byte_end":14157369,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157374,"byte_end":14157381,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157386,"byte_end":14157419,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157424,"byte_end":14157427,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let path = PathBuf::new();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157432,"byte_end":14157462,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157467,"byte_end":14157474,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7271},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157850,"byte_end":14157857,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"pub fn as_path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Coerces to a [`Path`] slice.","sig":null,"attributes":[{"value":"/ Coerces to a [`Path`] slice.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157557,"byte_end":14157589,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157594,"byte_end":14157597,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157602,"byte_end":14157632,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157637,"byte_end":14157640,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157645,"byte_end":14157659,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157664,"byte_end":14157667,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157672,"byte_end":14157679,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157684,"byte_end":14157725,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157730,"byte_end":14157733,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/test\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157738,"byte_end":14157773,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Path::new(\"/test\"), p.as_path());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157778,"byte_end":14157826,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157831,"byte_end":14157838,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7272},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158851,"byte_end":14158855,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"pub fn push<P: AsRef<Path>>(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` with `path`.","sig":null,"attributes":[{"value":"/ Extends `self` with `path`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157923,"byte_end":14157954,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157959,"byte_end":14157962,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it replaces the current path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157967,"byte_end":14158023,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158028,"byte_end":14158031,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ On Windows:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158036,"byte_end":14158051,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158056,"byte_end":14158059,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * if `path` has a root but no prefix (e.g., `\\windows`), it","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158064,"byte_end":14158127,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/   replaces everything except for the prefix (if any) of `self`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158132,"byte_end":14158199,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ * if `path` has a prefix but no root, it replaces `self`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158204,"byte_end":14158265,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158270,"byte_end":14158273,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158278,"byte_end":14158292,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158297,"byte_end":14158300,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Pushing a relative path extends the existing path:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158305,"byte_end":14158359,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158364,"byte_end":14158367,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158372,"byte_end":14158379,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158384,"byte_end":14158417,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158422,"byte_end":14158425,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158430,"byte_end":14158471,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ path.push(\"file.bk\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158476,"byte_end":14158501,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(path, PathBuf::from(\"/tmp/file.bk\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158506,"byte_end":14158558,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158563,"byte_end":14158570,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158575,"byte_end":14158578,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Pushing an absolute path replaces the existing path:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158583,"byte_end":14158639,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158644,"byte_end":14158647,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158652,"byte_end":14158659,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158664,"byte_end":14158697,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158702,"byte_end":14158705,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158710,"byte_end":14158751,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ path.push(\"/etc\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158756,"byte_end":14158778,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(path, PathBuf::from(\"/etc\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158783,"byte_end":14158827,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158832,"byte_end":14158839,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7274},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159553,"byte_end":14159556,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"pop","qualname":"<PathBuf>::pop","value":"pub fn pop(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Truncates `self` to [`self.parent`].","sig":null,"attributes":[{"value":"/ Truncates `self` to [`self.parent`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158944,"byte_end":14158984,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158989,"byte_end":14158992,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.parent`] is [`None`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14158997,"byte_end":14159065,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/ Otherwise, returns `true`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159070,"byte_end":14159100,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159105,"byte_end":14159108,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159113,"byte_end":14159193,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ [`self.parent`]: struct.PathBuf.html#method.parent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159198,"byte_end":14159252,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159257,"byte_end":14159260,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159265,"byte_end":14159279,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159284,"byte_end":14159287,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159292,"byte_end":14159299,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159304,"byte_end":14159345,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159350,"byte_end":14159353,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/test/test.rs\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159358,"byte_end":14159405,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159410,"byte_end":14159413,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ p.pop();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159418,"byte_end":14159430,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/test\"), p);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159435,"byte_end":14159473,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ p.pop();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159478,"byte_end":14159490,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/\"), p);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159495,"byte_end":14159529,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159534,"byte_end":14159541,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7275},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160586,"byte_end":14160599,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"set_file_name","qualname":"<PathBuf>::set_file_name","value":"pub fn set_file_name<S: AsRef<OsStr>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.file_name`] to `file_name`.","sig":null,"attributes":[{"value":"/ Updates [`self.file_name`] to `file_name`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159614,"byte_end":14159660,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159665,"byte_end":14159668,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If [`self.file_name`] was [`None`], this is equivalent to pushing","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159673,"byte_end":14159742,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ `file_name`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159747,"byte_end":14159763,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159768,"byte_end":14159771,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Otherwise it is equivalent to calling [`pop`] and then pushing","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159776,"byte_end":14159842,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ `file_name`. The new path will be a sibling of the original path.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159847,"byte_end":14159916,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ (That is, it will have the same parent.)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159921,"byte_end":14159965,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159970,"byte_end":14159973,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14159978,"byte_end":14160038,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160043,"byte_end":14160123,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ [`pop`]: struct.PathBuf.html#method.pop","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160128,"byte_end":14160171,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160176,"byte_end":14160179,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160184,"byte_end":14160198,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160203,"byte_end":14160206,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160211,"byte_end":14160218,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160223,"byte_end":14160256,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160261,"byte_end":14160264,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut buf = PathBuf::from(\"/\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160269,"byte_end":14160306,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ assert!(buf.file_name() == None);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160311,"byte_end":14160348,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ buf.set_file_name(\"bar\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160353,"byte_end":14160382,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ assert!(buf == PathBuf::from(\"/bar\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160387,"byte_end":14160429,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"/ assert!(buf.file_name().is_some());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160434,"byte_end":14160473,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ buf.set_file_name(\"baz.txt\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160478,"byte_end":14160511,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ assert!(buf == PathBuf::from(\"/baz.txt\"));","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160516,"byte_end":14160562,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160567,"byte_end":14160574,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7277},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161612,"byte_end":14161625,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"set_extension","qualname":"<PathBuf>::set_extension","value":"pub fn set_extension<S: AsRef<OsStr>>(&mut Self, S) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.extension`] to `extension`.","sig":null,"attributes":[{"value":"/ Updates [`self.extension`] to `extension`.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160699,"byte_end":14160745,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160750,"byte_end":14160753,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.file_name`] is [`None`],","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160758,"byte_end":14160829,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ returns `true` and updates the extension otherwise.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160834,"byte_end":14160889,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160894,"byte_end":14160897,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If [`self.extension`] is [`None`], the extension is added; otherwise","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160902,"byte_end":14160974,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ it is replaced.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14160979,"byte_end":14160998,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161003,"byte_end":14161006,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161011,"byte_end":14161071,"line_start":152,"line_end":152,"column_start":5,"column_end":65}},{"value":"/ [`self.extension`]: struct.PathBuf.html#method.extension","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161076,"byte_end":14161136,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161141,"byte_end":14161221,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161226,"byte_end":14161229,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161234,"byte_end":14161248,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161253,"byte_end":14161256,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161261,"byte_end":14161268,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161273,"byte_end":14161314,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161319,"byte_end":14161322,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/feel/the\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161327,"byte_end":14161370,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161375,"byte_end":14161378,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"force\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161383,"byte_end":14161412,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Path::new(\"/feel/the.force\"), p.as_path());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161417,"byte_end":14161475,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161480,"byte_end":14161483,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"dark_side\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161488,"byte_end":14161521,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Path::new(\"/feel/the.dark_side\"), p.as_path());","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161526,"byte_end":14161588,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161593,"byte_end":14161600,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7279},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162092,"byte_end":14162106,"line_start":185,"line_end":185,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<PathBuf>::into_os_string","value":"pub fn into_os_string(Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PathBuf`, returning its internal [`OsString`] storage.","sig":null,"attributes":[{"value":"/ Consumes the `PathBuf`, returning its internal [`OsString`] storage.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161733,"byte_end":14161805,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161810,"byte_end":14161813,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161818,"byte_end":14161890,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161895,"byte_end":14161898,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161903,"byte_end":14161917,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161922,"byte_end":14161925,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161930,"byte_end":14161937,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161942,"byte_end":14161975,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161980,"byte_end":14161983,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/the/head\");","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14161988,"byte_end":14162027,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let os_str = p.into_os_string();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162032,"byte_end":14162068,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162073,"byte_end":14162080,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7280},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162357,"byte_end":14162372,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"into_boxed_path","qualname":"<PathBuf>::into_boxed_path","value":"pub fn into_boxed_path(Self) -> Box<Path>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","sig":null,"attributes":[{"value":"/ Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162174,"byte_end":14162233,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162238,"byte_end":14162241,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162246,"byte_end":14162310,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162315,"byte_end":14162345,"line_start":192,"line_end":192,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":7384},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":7385},{"krate":0,"index":7388},{"krate":0,"index":7391},{"krate":0,"index":7392},{"krate":0,"index":7395},{"krate":0,"index":7398},{"krate":0,"index":7401},{"krate":0,"index":7402},{"krate":0,"index":7405},{"krate":0,"index":7408},{"krate":0,"index":7411},{"krate":0,"index":7414},{"krate":0,"index":7415},{"krate":0,"index":7418},{"krate":0,"index":7421},{"krate":0,"index":7424},{"krate":0,"index":7427},{"krate":0,"index":7540},{"krate":0,"index":7695}],"decl_id":null,"docs":" Networking primitives for TCP/UDP communication.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Networking primitives for TCP/UDP communication.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14166501,"byte_end":14166553,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14166554,"byte_end":14166557,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides networking functionality for the Transmission Control and User","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14166558,"byte_end":14166645,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ Datagram Protocols, as well as types for IP and socket addresses.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14166646,"byte_end":14166715,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14166716,"byte_end":14166719,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::net`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14166720,"byte_end":14166772,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14166773,"byte_end":14166776,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14166777,"byte_end":14166795,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14166796,"byte_end":14166799,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14166800,"byte_end":14166888,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14166889,"byte_end":14166958,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`IpAddr`] represents IP addresses of either IPv4 or IPv6; [`Ipv4Addr`] and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14166959,"byte_end":14167040,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/   [`Ipv6Addr`] are respectively IPv4 and IPv6 addresses","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167041,"byte_end":14167100,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ * [`SocketAddr`] represents socket addresses of either IPv4 or IPv6; [`SocketAddrV4`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167101,"byte_end":14167190,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/   and [`SocketAddrV6`] are respectively IPv4 and IPv6 socket addresses","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167191,"byte_end":14167265,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ * [`ToSocketAddrs`] is a trait that used for generic address resolution when interacting","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167266,"byte_end":14167358,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/   with networking objects like [`TcpListener`], [`TcpStream`] or [`UdpSocket`]","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167359,"byte_end":14167441,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ * Other types are return or parameter types for various methods in this module","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167442,"byte_end":14167524,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167525,"byte_end":14167528,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`IpAddr`]: enum.IpAddr.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167529,"byte_end":14167561,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ [`Ipv4Addr`]: struct.Ipv4Addr.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167562,"byte_end":14167600,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [`Ipv6Addr`]: struct.Ipv6Addr.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167601,"byte_end":14167639,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167640,"byte_end":14167680,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`SocketAddrV4`]: struct.SocketAddrV4.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167681,"byte_end":14167727,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ [`SocketAddrV6`]: struct.SocketAddrV6.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167728,"byte_end":14167774,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167775,"byte_end":14167819,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167820,"byte_end":14167860,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/ [`ToSocketAddrs`]: trait.ToSocketAddrs.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167861,"byte_end":14167908,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167909,"byte_end":14167949,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167950,"byte_end":14167953,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167954,"byte_end":14167988,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167989,"byte_end":14167992,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ APIs such as Unix domain sockets are available on certain platforms only. You can find","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14167993,"byte_end":14168083,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"/ platform-specific extensions in the [`async_std::os`] module.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168084,"byte_end":14168149,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168150,"byte_end":14168153,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`async_std::os`]: ../os/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168154,"byte_end":14168193,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168194,"byte_end":14168256,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168257,"byte_end":14168260,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168261,"byte_end":14168275,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168276,"byte_end":14168279,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ A simple UDP echo server:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168280,"byte_end":14168309,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168310,"byte_end":14168313,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168314,"byte_end":14168327,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168328,"byte_end":14168402,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168403,"byte_end":14168408,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168409,"byte_end":14168443,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168444,"byte_end":14168447,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168448,"byte_end":14168506,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168507,"byte_end":14168541,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168542,"byte_end":14168545,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168546,"byte_end":14168556,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168557,"byte_end":14168615,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168616,"byte_end":14168664,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168665,"byte_end":14168670,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168671,"byte_end":14168676,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168677,"byte_end":14168687,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\mod.rs","byte_start":14168688,"byte_end":14168695,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":7476},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170371,"byte_end":14170384,"line_start":45,"line_end":45,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs","parent":null,"children":[{"krate":0,"index":7477},{"krate":0,"index":7478}],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14169793,"byte_end":14169853,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14169854,"byte_end":14169857,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is an async version of [`std::net::ToSocketAddrs`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14169858,"byte_end":14169924,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14169925,"byte_end":14169928,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`std::net::ToSocketAddrs`]: https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14169929,"byte_end":14170020,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170021,"byte_end":14170061,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170062,"byte_end":14170065,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170066,"byte_end":14170080,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170081,"byte_end":14170084,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170085,"byte_end":14170092,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170093,"byte_end":14170167,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170168,"byte_end":14170173,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::ToSocketAddrs;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170174,"byte_end":14170212,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170213,"byte_end":14170216,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let addr = \"localhost:8080\".to_socket_addrs().await?.next().unwrap();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170217,"byte_end":14170290,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ println!(\"resolved: {:?}\", addr);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170291,"byte_end":14170328,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170329,"byte_end":14170334,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170335,"byte_end":14170352,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170353,"byte_end":14170360,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":7477},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170479,"byte_end":14170483,"line_start":47,"line_end":47,"column_start":10,"column_end":14},"name":"Iter","qualname":"::net::addr::ToSocketAddrs::Iter","value":"type Iter: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":7476},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170391,"byte_end":14170469,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":7478},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170825,"byte_end":14170840,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::net::addr::ToSocketAddrs::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":7476},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170519,"byte_end":14170585,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170590,"byte_end":14170593,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170598,"byte_end":14170689,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170694,"byte_end":14170719,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170724,"byte_end":14170727,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170732,"byte_end":14170817,"line_start":54,"line_end":54,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7481},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14171057,"byte_end":14171066,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::net::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(JoinHandle<io::Result<I>>)","parent":{"krate":0,"index":7479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7484},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14171099,"byte_end":14171104,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Ready","qualname":"::net::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":7479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7487},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14171125,"byte_end":14171129,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"Done","qualname":"::net::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":7479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7479},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14171028,"byte_end":14171047,"line_start":65,"line_end":65,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::net::addr::ToSocketAddrsFuture","value":"pub enum ToSocketAddrsFuture<I> {\n    Resolving(JoinHandle<io::Result<I>>),\n    Ready(io::Result<I>),\n    Done,\n}","parent":null,"children":[{"krate":0,"index":7481},{"krate":0,"index":7484},{"krate":0,"index":7487}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14170979,"byte_end":14171018,"line_start":64,"line_end":64,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8182},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178733,"byte_end":14178744,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":8183}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP socket server, listening for connections.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177477,"byte_end":14177528,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177529,"byte_end":14177532,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177533,"byte_end":14177630,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ TCP connections. These can be accepted by awaiting elements from the async stream of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177631,"byte_end":14177719,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ [`incoming`] connections.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177720,"byte_end":14177749,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177750,"byte_end":14177753,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177754,"byte_end":14177810,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177811,"byte_end":14177814,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177815,"byte_end":14177884,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177885,"byte_end":14177888,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpListener`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177889,"byte_end":14177952,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177953,"byte_end":14177956,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177957,"byte_end":14177983,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14177984,"byte_end":14178018,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178019,"byte_end":14178073,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ [`std::net::TcpListener`]: https://doc.rust-lang.org/std/net/struct.TcpListener.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178074,"byte_end":14178162,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178163,"byte_end":14178166,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178167,"byte_end":14178181,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178182,"byte_end":14178185,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178186,"byte_end":14178199,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178200,"byte_end":14178274,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178275,"byte_end":14178280,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178281,"byte_end":14178303,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178304,"byte_end":14178340,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178341,"byte_end":14178371,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178372,"byte_end":14178375,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178376,"byte_end":14178438,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178439,"byte_end":14178482,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178483,"byte_end":14178486,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178487,"byte_end":14178539,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/     let stream = stream?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178540,"byte_end":14178569,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/     let (reader, writer) = &mut (&stream, &stream);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178570,"byte_end":14178625,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/     io::copy(reader, writer).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178626,"byte_end":14178666,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178667,"byte_end":14178672,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178673,"byte_end":14178678,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178679,"byte_end":14178696,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178697,"byte_end":14178704,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7594},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179566,"byte_end":14179570,"line_start":78,"line_end":78,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` which will be bound to the specified address.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178816,"byte_end":14178893,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178898,"byte_end":14178901,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178906,"byte_end":14178967,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178972,"byte_end":14178975,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this listener.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178980,"byte_end":14179073,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ The port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179078,"byte_end":14179146,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179151,"byte_end":14179154,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179159,"byte_end":14179173,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/ Create a TCP listener bound to 127.0.0.1:0:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179178,"byte_end":14179225,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179230,"byte_end":14179233,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179238,"byte_end":14179251,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179256,"byte_end":14179330,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179335,"byte_end":14179340,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179345,"byte_end":14179381,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179386,"byte_end":14179389,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179394,"byte_end":14179453,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179458,"byte_end":14179463,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179468,"byte_end":14179485,"line_start":74,"line_end":74,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179490,"byte_end":14179497,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179502,"byte_end":14179505,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14179510,"byte_end":14179548,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":7599},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180736,"byte_end":14180742,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180203,"byte_end":14180258,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180263,"byte_end":14180266,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180271,"byte_end":14180363,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180368,"byte_end":14180371,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180376,"byte_end":14180391,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180396,"byte_end":14180399,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180404,"byte_end":14180417,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180422,"byte_end":14180496,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180501,"byte_end":14180506,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180511,"byte_end":14180547,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180552,"byte_end":14180555,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180560,"byte_end":14180619,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180624,"byte_end":14180674,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180679,"byte_end":14180684,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180689,"byte_end":14180706,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180711,"byte_end":14180718,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7602},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181906,"byte_end":14181914,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14180971,"byte_end":14181016,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181021,"byte_end":14181024,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181029,"byte_end":14181120,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181125,"byte_end":14181217,"line_start":126,"line_end":126,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181222,"byte_end":14181225,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181230,"byte_end":14181260,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181265,"byte_end":14181345,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181350,"byte_end":14181353,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181358,"byte_end":14181373,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181378,"byte_end":14181381,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181386,"byte_end":14181399,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181404,"byte_end":14181478,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181483,"byte_end":14181488,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181493,"byte_end":14181529,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181534,"byte_end":14181564,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181569,"byte_end":14181572,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181577,"byte_end":14181636,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181641,"byte_end":14181684,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181689,"byte_end":14181692,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181697,"byte_end":14181749,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181754,"byte_end":14181787,"line_start":143,"line_end":143,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181792,"byte_end":14181840,"line_start":144,"line_end":144,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181845,"byte_end":14181850,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181855,"byte_end":14181860,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181865,"byte_end":14181882,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14181887,"byte_end":14181894,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7603},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183190,"byte_end":14183203,"line_start":187,"line_end":187,"column_start":12,"column_end":25},"name":"into_incoming","qualname":"<TcpListener>::into_incoming","value":"pub fn into_incoming(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Turn this into a stream over the connections being received on this\n listener.","sig":null,"attributes":[{"value":"/ Turn this into a stream over the connections being received on this","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182041,"byte_end":14182112,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/ listener.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182117,"byte_end":14182130,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182135,"byte_end":14182138,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The returned stream is infinite and will also not yield","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182143,"byte_end":14182202,"line_start":158,"line_end":158,"column_start":5,"column_end":64}},{"value":"/ the peer's [`SocketAddr`] structure. Iterating over it is equivalent to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182207,"byte_end":14182282,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ calling [`TcpListener::accept`] in a loop.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182287,"byte_end":14182333,"line_start":160,"line_end":160,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182338,"byte_end":14182341,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182346,"byte_end":14182361,"line_start":162,"line_end":162,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182366,"byte_end":14182369,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Merge the incoming connections of multiple sockets into one [`Stream`]:","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182374,"byte_end":14182449,"line_start":164,"line_end":164,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182454,"byte_end":14182457,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182462,"byte_end":14182475,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182480,"byte_end":14182554,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182559,"byte_end":14182564,"line_start":168,"line_end":168,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182569,"byte_end":14182605,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182610,"byte_end":14182613,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Our server listens on multiple ports for some reason","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182618,"byte_end":14182677,"line_start":171,"line_end":171,"column_start":5,"column_end":64}},{"value":"/ let listeners = vec![","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182682,"byte_end":14182707,"line_start":172,"line_end":172,"column_start":5,"column_end":30}},{"value":"/     TcpListener::bind(\"[::0]:8080\").await?,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182712,"byte_end":14182759,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/     TcpListener::bind(\"[::0]:12345\").await?,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182764,"byte_end":14182812,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/     TcpListener::bind(\"[::0]:5678\").await?,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182817,"byte_end":14182864,"line_start":175,"line_end":175,"column_start":5,"column_end":52}},{"value":"/ ];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182869,"byte_end":14182875,"line_start":176,"line_end":176,"column_start":5,"column_end":11}},{"value":"/ // Iterate over all incoming connections","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182880,"byte_end":14182924,"line_start":177,"line_end":177,"column_start":5,"column_end":49}},{"value":"/ let incoming = futures::stream::select_all(","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182929,"byte_end":14182976,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/     listeners.into_iter()","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14182981,"byte_end":14183010,"line_start":179,"line_end":179,"column_start":5,"column_end":34}},{"value":"/         .map(TcpListener::into_incoming)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183015,"byte_end":14183059,"line_start":180,"line_end":180,"column_start":5,"column_end":49}},{"value":"/         .map(Box::pin)","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183064,"byte_end":14183090,"line_start":181,"line_end":181,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183095,"byte_end":14183101,"line_start":182,"line_end":182,"column_start":5,"column_end":11}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183106,"byte_end":14183111,"line_start":183,"line_end":183,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183116,"byte_end":14183133,"line_start":184,"line_end":184,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183138,"byte_end":14183145,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183150,"byte_end":14183178,"line_start":186,"line_end":186,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7608},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184005,"byte_end":14184015,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183460,"byte_end":14183521,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183526,"byte_end":14183529,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, to identify when binding to port 0 which port was assigned","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183534,"byte_end":14183629,"line_start":196,"line_end":196,"column_start":5,"column_end":100}},{"value":"/ by the OS.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183634,"byte_end":14183648,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183653,"byte_end":14183656,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183661,"byte_end":14183675,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183680,"byte_end":14183683,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183688,"byte_end":14183701,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183706,"byte_end":14183780,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183785,"byte_end":14183790,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183795,"byte_end":14183831,"line_start":204,"line_end":204,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183836,"byte_end":14183839,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183844,"byte_end":14183906,"line_start":206,"line_end":206,"column_start":5,"column_end":67}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183911,"byte_end":14183949,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183954,"byte_end":14183959,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183964,"byte_end":14183981,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14183986,"byte_end":14183993,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7609},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184655,"byte_end":14184663,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::listener::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":7611}],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184104,"byte_end":14184145,"line_start":216,"line_end":216,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184146,"byte_end":14184149,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184150,"byte_end":14184248,"line_start":218,"line_end":218,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`TcpListener`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184249,"byte_end":14184307,"line_start":219,"line_end":219,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184308,"byte_end":14184311,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::Incoming`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184312,"byte_end":14184372,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184373,"byte_end":14184376,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184377,"byte_end":14184457,"line_start":223,"line_end":223,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.TcpListener.html#method.incoming","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184458,"byte_end":14184515,"line_start":224,"line_end":224,"column_start":1,"column_end":58}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184516,"byte_end":14184560,"line_start":225,"line_end":225,"column_start":1,"column_end":45}},{"value":"/ [`std::net::Incoming`]: https://doc.rust-lang.org/std/net/struct.Incoming.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184561,"byte_end":14184643,"line_start":226,"line_end":226,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":8205},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188533,"byte_end":14188542,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":8206}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"/ A TCP stream between a local and a remote socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14186975,"byte_end":14187028,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187029,"byte_end":14187032,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `TcpStream` can either be created by connecting to an endpoint, via the [`connect`] method,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187033,"byte_end":14187130,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ or by [accepting] a connection from a [listener].  It can be read or written to using the","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187131,"byte_end":14187224,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ [`AsyncRead`], [`AsyncWrite`], and related extension traits in [`futures::io`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187225,"byte_end":14187308,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187309,"byte_end":14187312,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The connection will be closed when the value is dropped. The reading and writing portions of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187313,"byte_end":14187409,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ the connection can also be shut down individually with the [`shutdown`] method.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187410,"byte_end":14187493,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187494,"byte_end":14187497,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpStream`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187498,"byte_end":14187559,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187560,"byte_end":14187563,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`connect`]: struct.TcpStream.html#method.connect","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187564,"byte_end":14187617,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ [accepting]: struct.TcpListener.html#method.accept","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187618,"byte_end":14187672,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [listener]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187673,"byte_end":14187712,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncRead.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187713,"byte_end":14187791,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ [`AsyncWrite`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187792,"byte_end":14187872,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ [`futures::io`]: https://docs.rs/futures/0.3/futures/io/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187873,"byte_end":14187943,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`shutdown`]: struct.TcpStream.html#method.shutdown","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14187944,"byte_end":14187999,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ [`std::net::TcpStream`]: https://doc.rust-lang.org/std/net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188000,"byte_end":14188084,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188085,"byte_end":14188088,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188089,"byte_end":14188104,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188105,"byte_end":14188108,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188109,"byte_end":14188122,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188123,"byte_end":14188197,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188198,"byte_end":14188203,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188204,"byte_end":14188238,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188239,"byte_end":14188269,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188270,"byte_end":14188273,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188274,"byte_end":14188339,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188340,"byte_end":14188384,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188385,"byte_end":14188388,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188389,"byte_end":14188423,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188424,"byte_end":14188465,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188466,"byte_end":14188471,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188472,"byte_end":14188489,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188490,"byte_end":14188497,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7662},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14189307,"byte_end":14189314,"line_start":73,"line_end":73,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TCP stream connected to the specified address.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188626,"byte_end":14188690,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188695,"byte_end":14188698,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the `addr`","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188703,"byte_end":14188787,"line_start":56,"line_end":56,"column_start":5,"column_end":89}},{"value":"/ provided. The [returned future] will be resolved once the stream has successfully","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188792,"byte_end":14188877,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ connected, or it will return an error if one occurs.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188882,"byte_end":14188938,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188943,"byte_end":14188946,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [returned future]: struct.Connect.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188951,"byte_end":14188993,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188998,"byte_end":14189001,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14189006,"byte_end":14189020,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14189025,"byte_end":14189028,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14189033,"byte_end":14189046,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14189051,"byte_end":14189125,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14189130,"byte_end":14189135,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14189140,"byte_end":14189174,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14189179,"byte_end":14189182,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14189187,"byte_end":14189245,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14189250,"byte_end":14189255,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14189260,"byte_end":14189277,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14189282,"byte_end":14189289,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7667},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190483,"byte_end":14190493,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is connected to.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190067,"byte_end":14190130,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190135,"byte_end":14190138,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190143,"byte_end":14190158,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190163,"byte_end":14190166,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190171,"byte_end":14190184,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190189,"byte_end":14190263,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190268,"byte_end":14190273,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190278,"byte_end":14190312,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190317,"byte_end":14190320,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190325,"byte_end":14190386,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190391,"byte_end":14190427,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190432,"byte_end":14190437,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190442,"byte_end":14190459,"line_start":111,"line_end":111,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190464,"byte_end":14190471,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7668},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191000,"byte_end":14191009,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190584,"byte_end":14190648,"line_start":117,"line_end":117,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190653,"byte_end":14190656,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190661,"byte_end":14190676,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190681,"byte_end":14190684,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190689,"byte_end":14190702,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190707,"byte_end":14190781,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190786,"byte_end":14190791,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190796,"byte_end":14190830,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190835,"byte_end":14190838,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190843,"byte_end":14190904,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190909,"byte_end":14190944,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190949,"byte_end":14190954,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190959,"byte_end":14190976,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14190981,"byte_end":14190988,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7669},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191664,"byte_end":14191667,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191099,"byte_end":14191157,"line_start":135,"line_end":135,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191162,"byte_end":14191165,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191170,"byte_end":14191230,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191235,"byte_end":14191238,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191243,"byte_end":14191275,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191280,"byte_end":14191283,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191288,"byte_end":14191302,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191307,"byte_end":14191310,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191315,"byte_end":14191328,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191333,"byte_end":14191407,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191412,"byte_end":14191417,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191422,"byte_end":14191456,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191461,"byte_end":14191464,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191469,"byte_end":14191530,"line_start":148,"line_end":148,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191535,"byte_end":14191538,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191543,"byte_end":14191568,"line_start":150,"line_end":150,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191573,"byte_end":14191608,"line_start":151,"line_end":151,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191613,"byte_end":14191618,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191623,"byte_end":14191640,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191645,"byte_end":14191652,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7670},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192306,"byte_end":14192313,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191744,"byte_end":14191802,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191807,"byte_end":14191810,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191815,"byte_end":14191891,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191896,"byte_end":14191917,"line_start":162,"line_end":162,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191922,"byte_end":14191925,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191930,"byte_end":14191944,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191949,"byte_end":14191952,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191957,"byte_end":14191970,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14191975,"byte_end":14192049,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192054,"byte_end":14192059,"line_start":168,"line_end":168,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192064,"byte_end":14192098,"line_start":169,"line_end":169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192103,"byte_end":14192106,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192111,"byte_end":14192172,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192177,"byte_end":14192180,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192185,"byte_end":14192210,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192215,"byte_end":14192250,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192255,"byte_end":14192260,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192265,"byte_end":14192282,"line_start":176,"line_end":176,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192287,"byte_end":14192294,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7671},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193164,"byte_end":14193168,"line_start":204,"line_end":204,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is connected, without\n removing that data from the queue.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is connected, without","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192406,"byte_end":14192495,"line_start":182,"line_end":182,"column_start":5,"column_end":94}},{"value":"/ removing that data from the queue.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192500,"byte_end":14192538,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192543,"byte_end":14192546,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192551,"byte_end":14192602,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192607,"byte_end":14192610,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192615,"byte_end":14192710,"line_start":187,"line_end":187,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192715,"byte_end":14192756,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192761,"byte_end":14192764,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192769,"byte_end":14192783,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192788,"byte_end":14192791,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192796,"byte_end":14192809,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192814,"byte_end":14192888,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192893,"byte_end":14192898,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192903,"byte_end":14192937,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192942,"byte_end":14192945,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14192950,"byte_end":14193011,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193016,"byte_end":14193019,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193024,"byte_end":14193056,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193061,"byte_end":14193102,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193107,"byte_end":14193112,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193117,"byte_end":14193134,"line_start":202,"line_end":202,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193139,"byte_end":14193146,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7674},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193854,"byte_end":14193861,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193263,"byte_end":14193325,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193330,"byte_end":14193333,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193338,"byte_end":14193402,"line_start":210,"line_end":210,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193407,"byte_end":14193410,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: #method.set_nodelay","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193415,"byte_end":14193455,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193460,"byte_end":14193463,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193468,"byte_end":14193482,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193487,"byte_end":14193490,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193495,"byte_end":14193508,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193513,"byte_end":14193587,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193592,"byte_end":14193597,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193602,"byte_end":14193636,"line_start":219,"line_end":219,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193641,"byte_end":14193644,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193649,"byte_end":14193710,"line_start":221,"line_end":221,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193715,"byte_end":14193718,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193723,"byte_end":14193753,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193758,"byte_end":14193798,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193803,"byte_end":14193808,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193813,"byte_end":14193830,"line_start":226,"line_end":226,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193835,"byte_end":14193842,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7675},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194745,"byte_end":14194756,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14193943,"byte_end":14194005,"line_start":232,"line_end":232,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194010,"byte_end":14194013,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194018,"byte_end":14194087,"line_start":234,"line_end":234,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194092,"byte_end":14194165,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194170,"byte_end":14194243,"line_start":236,"line_end":236,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194248,"byte_end":14194323,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194328,"byte_end":14194346,"line_start":238,"line_end":238,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194351,"byte_end":14194354,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194359,"byte_end":14194373,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194378,"byte_end":14194381,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194386,"byte_end":14194399,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194404,"byte_end":14194478,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194483,"byte_end":14194488,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194493,"byte_end":14194527,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194532,"byte_end":14194535,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194540,"byte_end":14194601,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194606,"byte_end":14194609,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194614,"byte_end":14194644,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194649,"byte_end":14194689,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194694,"byte_end":14194699,"line_start":251,"line_end":251,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194704,"byte_end":14194721,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194726,"byte_end":14194733,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7676},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195593,"byte_end":14195601,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194862,"byte_end":14194928,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194933,"byte_end":14194936,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O on the specified portions to return","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14194941,"byte_end":14195030,"line_start":260,"line_end":260,"column_start":5,"column_end":94}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195035,"byte_end":14195117,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195122,"byte_end":14195125,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195130,"byte_end":14195200,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195205,"byte_end":14195208,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195213,"byte_end":14195227,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195232,"byte_end":14195235,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195240,"byte_end":14195253,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195258,"byte_end":14195332,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195337,"byte_end":14195342,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195347,"byte_end":14195374,"line_start":270,"line_end":270,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195379,"byte_end":14195382,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195387,"byte_end":14195421,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195426,"byte_end":14195429,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195434,"byte_end":14195495,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195500,"byte_end":14195537,"line_start":275,"line_end":275,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195542,"byte_end":14195547,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195552,"byte_end":14195569,"line_start":277,"line_end":277,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195574,"byte_end":14195581,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8230},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201467,"byte_end":14201476,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":8231}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200213,"byte_end":14200230,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200231,"byte_end":14200234,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ After creating a `UdpSocket` by [`bind`]ing it to a socket address, data can be [sent to] and","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200235,"byte_end":14200332,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ [received from] any other socket address.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200333,"byte_end":14200378,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200379,"byte_end":14200382,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200383,"byte_end":14200482,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`] and [`TcpStream`] for async TCP primitives.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200483,"byte_end":14200576,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200577,"byte_end":14200580,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::UdpSocket`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200581,"byte_end":14200642,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200643,"byte_end":14200646,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200647,"byte_end":14200673,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200674,"byte_end":14200712,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200713,"byte_end":14200743,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200744,"byte_end":14200788,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200789,"byte_end":14200829,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200830,"byte_end":14200892,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200893,"byte_end":14200947,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ [`std::net::UdpSocket`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14200948,"byte_end":14201032,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201033,"byte_end":14201036,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201037,"byte_end":14201052,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201053,"byte_end":14201056,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201057,"byte_end":14201070,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201071,"byte_end":14201145,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201146,"byte_end":14201151,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201152,"byte_end":14201186,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201187,"byte_end":14201190,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201191,"byte_end":14201249,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201250,"byte_end":14201284,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201285,"byte_end":14201288,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201289,"byte_end":14201299,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201300,"byte_end":14201358,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201359,"byte_end":14201407,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201408,"byte_end":14201413,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201414,"byte_end":14201419,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201420,"byte_end":14201430,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201431,"byte_end":14201438,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7719},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202131,"byte_end":14202135,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201544,"byte_end":14201592,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201597,"byte_end":14201600,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this socket. The","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201605,"byte_end":14201700,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201705,"byte_end":14201769,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201774,"byte_end":14201777,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201782,"byte_end":14201820,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201825,"byte_end":14201828,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201833,"byte_end":14201847,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201852,"byte_end":14201855,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201860,"byte_end":14201873,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201878,"byte_end":14201952,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201957,"byte_end":14201962,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201967,"byte_end":14202001,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202006,"byte_end":14202009,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202014,"byte_end":14202069,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202074,"byte_end":14202079,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202084,"byte_end":14202101,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202106,"byte_end":14202113,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7724},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203414,"byte_end":14203423,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address that this listener is connected to.","sig":null,"attributes":[{"value":"/ Returns the peer address that this listener is connected to.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202758,"byte_end":14202822,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202827,"byte_end":14202830,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when connect to port 0 to figure out which port was","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202835,"byte_end":14202923,"line_start":93,"line_end":93,"column_start":5,"column_end":93}},{"value":"/ actually connected.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202928,"byte_end":14202951,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202956,"byte_end":14202959,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202964,"byte_end":14202978,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202983,"byte_end":14202986,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14202991,"byte_end":14203004,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203009,"byte_end":14203083,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203088,"byte_end":14203093,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203098,"byte_end":14203132,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203137,"byte_end":14203140,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let socket1 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203145,"byte_end":14203201,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ let socket2 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203206,"byte_end":14203262,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/ socket1.connect(socket2.local_addr()?).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203267,"byte_end":14203317,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ let addr = socket1.peer_addr()?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203322,"byte_end":14203358,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203363,"byte_end":14203368,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203373,"byte_end":14203390,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203395,"byte_end":14203402,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7726},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204139,"byte_end":14204149,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203607,"byte_end":14203668,"line_start":117,"line_end":117,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203673,"byte_end":14203676,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203681,"byte_end":14203769,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203774,"byte_end":14203793,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203798,"byte_end":14203801,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203806,"byte_end":14203820,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203825,"byte_end":14203828,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203833,"byte_end":14203846,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203851,"byte_end":14203925,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203930,"byte_end":14203935,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203940,"byte_end":14203974,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203979,"byte_end":14203982,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14203987,"byte_end":14204042,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204047,"byte_end":14204083,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204088,"byte_end":14204093,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204098,"byte_end":14204115,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204120,"byte_end":14204127,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7728},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205193,"byte_end":14205200,"line_start":167,"line_end":167,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204335,"byte_end":14204385,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204390,"byte_end":14204393,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204398,"byte_end":14204450,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204455,"byte_end":14204458,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204463,"byte_end":14204477,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204482,"byte_end":14204485,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204490,"byte_end":14204503,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204508,"byte_end":14204582,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204587,"byte_end":14204592,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204597,"byte_end":14204631,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204636,"byte_end":14204639,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ const THE_MERCHANT_OF_VENICE: &[u8] = b\"","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204644,"byte_end":14204688,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/     If you prick us, do we not bleed?","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204693,"byte_end":14204734,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/     If you tickle us, do we not laugh?","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204739,"byte_end":14204781,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/     If you poison us, do we not die?","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204786,"byte_end":14204826,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/     And if you wrong us, shall we not revenge?","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204831,"byte_end":14204881,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/ \";","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204886,"byte_end":14204892,"line_start":157,"line_end":157,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204897,"byte_end":14204900,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204905,"byte_end":14204960,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204965,"byte_end":14204968,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:7878\";","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14204973,"byte_end":14205005,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ let sent = socket.send_to(THE_MERCHANT_OF_VENICE, &addr).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205010,"byte_end":14205078,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ println!(\"Sent {} bytes to {}\", sent, addr);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205083,"byte_end":14205131,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205136,"byte_end":14205141,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205146,"byte_end":14205163,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205168,"byte_end":14205175,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7733},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206315,"byte_end":14206324,"line_start":203,"line_end":203,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205733,"byte_end":14205767,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205772,"byte_end":14205775,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205780,"byte_end":14205844,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205849,"byte_end":14205852,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205857,"byte_end":14205871,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205876,"byte_end":14205879,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205884,"byte_end":14205897,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205902,"byte_end":14205976,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205981,"byte_end":14205986,"line_start":192,"line_end":192,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14205991,"byte_end":14206025,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206030,"byte_end":14206033,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206038,"byte_end":14206093,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206098,"byte_end":14206101,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206106,"byte_end":14206138,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206143,"byte_end":14206197,"line_start":198,"line_end":198,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, peer);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206202,"byte_end":14206253,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206258,"byte_end":14206263,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206268,"byte_end":14206285,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206290,"byte_end":14206297,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7736},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207052,"byte_end":14207061,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from socket without removing it from the queue.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206438,"byte_end":14206503,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206508,"byte_end":14206511,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the origin.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206516,"byte_end":14206582,"line_start":209,"line_end":209,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206587,"byte_end":14206590,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206595,"byte_end":14206609,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206614,"byte_end":14206617,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206622,"byte_end":14206635,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206640,"byte_end":14206714,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206719,"byte_end":14206724,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206729,"byte_end":14206763,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206768,"byte_end":14206771,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206776,"byte_end":14206831,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206836,"byte_end":14206839,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206844,"byte_end":14206876,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.peek_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206881,"byte_end":14206935,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/ println!(\"Peeked {} bytes from {}\", n, peer);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206940,"byte_end":14206989,"line_start":222,"line_end":222,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14206994,"byte_end":14206999,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ # Ok (()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207004,"byte_end":14207022,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207027,"byte_end":14207034,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7739},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207953,"byte_end":14207960,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to a remote address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to a remote address.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207175,"byte_end":14207223,"line_start":230,"line_end":230,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207228,"byte_end":14207231,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send`] and [`recv`] will use the specified address for sending","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207236,"byte_end":14207328,"line_start":232,"line_end":232,"column_start":5,"column_end":97}},{"value":"/ and receiving messages. Additionally, a filter will be applied to [`recv_from`] so that it","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207333,"byte_end":14207427,"line_start":233,"line_end":233,"column_start":5,"column_end":99}},{"value":"/ only receives messages from that same address.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207432,"byte_end":14207482,"line_start":234,"line_end":234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207487,"byte_end":14207490,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207495,"byte_end":14207521,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207526,"byte_end":14207552,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207557,"byte_end":14207593,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207598,"byte_end":14207601,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207606,"byte_end":14207620,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207625,"byte_end":14207628,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207633,"byte_end":14207646,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207651,"byte_end":14207725,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207730,"byte_end":14207735,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207740,"byte_end":14207774,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207779,"byte_end":14207782,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207787,"byte_end":14207842,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207847,"byte_end":14207891,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207896,"byte_end":14207901,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207906,"byte_end":14207923,"line_start":250,"line_end":250,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14207928,"byte_end":14207935,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7745},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209399,"byte_end":14209403,"line_start":297,"line_end":297,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address to which it is connected.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14208663,"byte_end":14208739,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14208744,"byte_end":14208747,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14208752,"byte_end":14208824,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14208829,"byte_end":14208886,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14208891,"byte_end":14208894,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14208899,"byte_end":14208931,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14208936,"byte_end":14208939,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14208944,"byte_end":14208958,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14208963,"byte_end":14208966,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14208971,"byte_end":14208984,"line_start":284,"line_end":284,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14208989,"byte_end":14209063,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209068,"byte_end":14209073,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209078,"byte_end":14209112,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209117,"byte_end":14209120,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209125,"byte_end":14209184,"line_start":289,"line_end":289,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209189,"byte_end":14209233,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ let bytes = socket.send(b\"Hi there!\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209238,"byte_end":14209287,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209292,"byte_end":14209295,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ println!(\"Sent {} bytes\", bytes);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209300,"byte_end":14209337,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209342,"byte_end":14209347,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209352,"byte_end":14209369,"line_start":295,"line_end":295,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209374,"byte_end":14209381,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7748},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210083,"byte_end":14210087,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209494,"byte_end":14209528,"line_start":301,"line_end":301,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209533,"byte_end":14209536,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209541,"byte_end":14209590,"line_start":303,"line_end":303,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209595,"byte_end":14209598,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209603,"byte_end":14209617,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209622,"byte_end":14209625,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209630,"byte_end":14209643,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209648,"byte_end":14209722,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209727,"byte_end":14209732,"line_start":309,"line_end":309,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209737,"byte_end":14209771,"line_start":310,"line_end":310,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209776,"byte_end":14209779,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209784,"byte_end":14209839,"line_start":312,"line_end":312,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209844,"byte_end":14209888,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209893,"byte_end":14209896,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209901,"byte_end":14209933,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209938,"byte_end":14209979,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14209984,"byte_end":14210021,"line_start":317,"line_end":317,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210026,"byte_end":14210031,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210036,"byte_end":14210053,"line_start":319,"line_end":319,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210058,"byte_end":14210065,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7751},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210806,"byte_end":14210810,"line_start":345,"line_end":345,"column_start":18,"column_end":22},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from the socket without removing it from the queue.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210182,"byte_end":14210251,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210256,"byte_end":14210259,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210264,"byte_end":14210315,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210320,"byte_end":14210323,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210328,"byte_end":14210342,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210347,"byte_end":14210350,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210355,"byte_end":14210368,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210373,"byte_end":14210447,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210452,"byte_end":14210457,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210462,"byte_end":14210496,"line_start":334,"line_end":334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210501,"byte_end":14210504,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210509,"byte_end":14210564,"line_start":336,"line_end":336,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210569,"byte_end":14210613,"line_start":337,"line_end":337,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210618,"byte_end":14210621,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210626,"byte_end":14210658,"line_start":339,"line_end":339,"column_start":5,"column_end":37}},{"value":"/ let n = socket.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210663,"byte_end":14210704,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/ println!(\"Peeked {} bytes\", n);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210709,"byte_end":14210744,"line_start":341,"line_end":341,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210749,"byte_end":14210754,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210759,"byte_end":14210776,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210781,"byte_end":14210788,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7754},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211117,"byte_end":14211126,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210905,"byte_end":14210969,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210974,"byte_end":14210977,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14210982,"byte_end":14211048,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211053,"byte_end":14211056,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211061,"byte_end":14211105,"line_start":353,"line_end":353,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7755},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211379,"byte_end":14211392,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211210,"byte_end":14211274,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211279,"byte_end":14211282,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211287,"byte_end":14211367,"line_start":360,"line_end":360,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":7756},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211731,"byte_end":14211748,"line_start":370,"line_end":370,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211490,"byte_end":14211559,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211564,"byte_end":14211567,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211572,"byte_end":14211646,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211651,"byte_end":14211654,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211659,"byte_end":14211719,"line_start":369,"line_end":369,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7757},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212093,"byte_end":14212114,"line_start":381,"line_end":381,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211840,"byte_end":14211909,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211914,"byte_end":14211917,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14211922,"byte_end":14211996,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212001,"byte_end":14212004,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212009,"byte_end":14212019,"line_start":378,"line_end":378,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212024,"byte_end":14212027,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212032,"byte_end":14212081,"line_start":380,"line_end":380,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7758},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212457,"byte_end":14212473,"line_start":390,"line_end":390,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212220,"byte_end":14212288,"line_start":385,"line_end":385,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212293,"byte_end":14212296,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212301,"byte_end":14212374,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212379,"byte_end":14212382,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212387,"byte_end":14212445,"line_start":389,"line_end":389,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7759},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212957,"byte_end":14212977,"line_start":403,"line_end":403,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212563,"byte_end":14212631,"line_start":394,"line_end":394,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212636,"byte_end":14212639,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212644,"byte_end":14212739,"line_start":396,"line_end":396,"column_start":5,"column_end":100}},{"value":"/ value is 1 which means that multicast packets don't leave the local network unless","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212744,"byte_end":14212830,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"/ explicitly requested.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212835,"byte_end":14212860,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212865,"byte_end":14212868,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212873,"byte_end":14212883,"line_start":400,"line_end":400,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212888,"byte_end":14212891,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14212896,"byte_end":14212945,"line_start":402,"line_end":402,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7760},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213326,"byte_end":14213343,"line_start":412,"line_end":412,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213083,"byte_end":14213154,"line_start":407,"line_end":407,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213159,"byte_end":14213162,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213167,"byte_end":14213241,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213246,"byte_end":14213249,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213254,"byte_end":14213314,"line_start":411,"line_end":411,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7761},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213692,"byte_end":14213713,"line_start":423,"line_end":423,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213435,"byte_end":14213506,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213511,"byte_end":14213514,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213519,"byte_end":14213595,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213600,"byte_end":14213603,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213608,"byte_end":14213618,"line_start":420,"line_end":420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213623,"byte_end":14213626,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213631,"byte_end":14213680,"line_start":422,"line_end":422,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7762},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214007,"byte_end":14214010,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213819,"byte_end":14213877,"line_start":427,"line_end":427,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213882,"byte_end":14213885,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213890,"byte_end":14213950,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213955,"byte_end":14213958,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14213963,"byte_end":14213995,"line_start":431,"line_end":431,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7763},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214272,"byte_end":14214279,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214087,"byte_end":14214145,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214150,"byte_end":14214153,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214158,"byte_end":14214234,"line_start":438,"line_end":438,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214239,"byte_end":14214260,"line_start":439,"line_end":439,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":7764},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215296,"byte_end":14215313,"line_start":468,"line_end":468,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214372,"byte_end":14214430,"line_start":444,"line_end":444,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214435,"byte_end":14214438,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214443,"byte_end":14214535,"line_start":446,"line_end":446,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the address of the local interface with which","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214540,"byte_end":14214635,"line_start":447,"line_end":447,"column_start":5,"column_end":100}},{"value":"/ the system should join the multicast group. If it's equal to `INADDR_ANY` then an","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214640,"byte_end":14214725,"line_start":448,"line_end":448,"column_start":5,"column_end":90}},{"value":"/ appropriate interface is chosen by the system.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214730,"byte_end":14214780,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214785,"byte_end":14214788,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214793,"byte_end":14214807,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214812,"byte_end":14214815,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214820,"byte_end":14214833,"line_start":453,"line_end":453,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214838,"byte_end":14214912,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214917,"byte_end":14214922,"line_start":455,"line_end":455,"column_start":5,"column_end":10}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214927,"byte_end":14214954,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214959,"byte_end":14214962,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14214967,"byte_end":14215001,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215006,"byte_end":14215009,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let interface = Ipv4Addr::new(0, 0, 0, 0);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215014,"byte_end":14215060,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/ let mdns_addr = Ipv4Addr::new(224, 0, 0, 123);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215065,"byte_end":14215115,"line_start":461,"line_end":461,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215120,"byte_end":14215123,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215128,"byte_end":14215183,"line_start":463,"line_end":463,"column_start":5,"column_end":60}},{"value":"/ socket.join_multicast_v4(mdns_addr, interface)?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215188,"byte_end":14215240,"line_start":464,"line_end":464,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215245,"byte_end":14215250,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215255,"byte_end":14215272,"line_start":466,"line_end":466,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215277,"byte_end":14215284,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7765},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216376,"byte_end":14216393,"line_start":497,"line_end":497,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215493,"byte_end":14215553,"line_start":474,"line_end":474,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215558,"byte_end":14215561,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215566,"byte_end":14215658,"line_start":476,"line_end":476,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the index of the interface to join/leave (or","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215663,"byte_end":14215757,"line_start":477,"line_end":477,"column_start":5,"column_end":99}},{"value":"/ 0 to indicate any interface).","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215762,"byte_end":14215795,"line_start":478,"line_end":478,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215800,"byte_end":14215803,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215808,"byte_end":14215822,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215827,"byte_end":14215830,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215835,"byte_end":14215848,"line_start":482,"line_end":482,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215853,"byte_end":14215927,"line_start":483,"line_end":483,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215932,"byte_end":14215937,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ use std::net::{Ipv6Addr, SocketAddr};","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215942,"byte_end":14215983,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215988,"byte_end":14215991,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14215996,"byte_end":14216030,"line_start":487,"line_end":487,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216035,"byte_end":14216038,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let socket_addr = SocketAddr::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0).into(), 0);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216043,"byte_end":14216130,"line_start":489,"line_end":489,"column_start":5,"column_end":92}},{"value":"/ let mdns_addr = Ipv6Addr::new(0xFF02, 0, 0, 0, 0, 0, 0, 0x0123);","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216135,"byte_end":14216203,"line_start":490,"line_end":490,"column_start":5,"column_end":73}},{"value":"/ let socket = UdpSocket::bind(&socket_addr).await?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216208,"byte_end":14216262,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216267,"byte_end":14216270,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ socket.join_multicast_v6(&mdns_addr, 0)?;","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216275,"byte_end":14216320,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216325,"byte_end":14216330,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216335,"byte_end":14216352,"line_start":495,"line_end":495,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216357,"byte_end":14216364,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7766},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216786,"byte_end":14216804,"line_start":508,"line_end":508,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216567,"byte_end":14216626,"line_start":503,"line_end":503,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216631,"byte_end":14216634,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216639,"byte_end":14216709,"line_start":505,"line_end":505,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216714,"byte_end":14216717,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216722,"byte_end":14216774,"line_start":507,"line_end":507,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7767},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14217206,"byte_end":14217224,"line_start":519,"line_end":519,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14216985,"byte_end":14217046,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14217051,"byte_end":14217054,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14217059,"byte_end":14217129,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14217134,"byte_end":14217137,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14217142,"byte_end":14217194,"line_start":518,"line_end":518,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":8253},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\pin\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pin","qualname":"::pin","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\pin\\mod.rs","parent":null,"children":[{"krate":0,"index":8254}],"decl_id":null,"docs":" Types that pin data to its location in memory.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":14825,"byte_end":14853,"line_start":132,"line_end":132,"column_start":13,"column_end":41}},{"value":"/ Types that pin data to its location in memory.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\pin\\mod.rs","byte_start":14223032,"byte_end":14223082,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\pin\\mod.rs","byte_start":14223083,"byte_end":14223086,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ For more documentation see [`std::pin`](https://doc.rust-lang.org/std/pin/index.html).","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\pin\\mod.rs","byte_start":14223087,"byte_end":14223177,"line_start":3,"line_end":3,"column_start":1,"column_end":91}}]},{"kind":"Mod","id":{"krate":0,"index":8257},"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","parent":null,"children":[{"krate":0,"index":8258},{"krate":0,"index":8261},{"krate":0,"index":8264},{"krate":0,"index":8267},{"krate":0,"index":8270},{"krate":0,"index":8273},{"krate":0,"index":8276},{"krate":0,"index":8279},{"krate":0,"index":8282},{"krate":0,"index":8283},{"krate":0,"index":8286},{"krate":0,"index":8289}],"decl_id":null,"docs":" A module for working with processes.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":14825,"byte_end":14853,"line_start":132,"line_end":132,"column_start":13,"column_end":41}},{"value":"cfg(all(not(target_os = \"unknown\"), feature = \"std\"))","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":11272,"byte_end":11328,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/ A module for working with processes.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14223218,"byte_end":14223258,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14223259,"byte_end":14223262,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is mostly concerned with spawning and interacting with child processes, but it also","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14223263,"byte_end":14223362,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ provides abort and exit for terminating the current process.","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14223363,"byte_end":14223427,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14223428,"byte_end":14223431,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::process`].","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14223432,"byte_end":14223481,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14223482,"byte_end":14223485,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`std::process`]: https://doc.rust-lang.org/std/process/index.html","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\process.rs","byte_start":14223486,"byte_end":14223556,"line_start":8,"line_end":8,"column_start":1,"column_end":71}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":11808,"byte_end":11812,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617586,"byte_end":13617594,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1997}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13619493,"byte_end":13619500,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2088},{"krate":0,"index":2091},{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13624857,"byte_end":13624874,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627120,"byte_end":13627130,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13628203,"byte_end":13628213,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13628362,"byte_end":13628372,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2149},{"krate":0,"index":2150}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13631574,"byte_end":13631578,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13632188,"byte_end":13632192,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2205}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632746,"byte_end":13632752,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2218}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13633163,"byte_end":13633169,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633759,"byte_end":13633767,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2244},{"krate":0,"index":2247},{"krate":0,"index":2252}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13637647,"byte_end":13637658,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13637802,"byte_end":13637813,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13637978,"byte_end":13637989,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13638357,"byte_end":13638366,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_locals_wrapper.rs","byte_start":13640218,"byte_end":13640235,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_locals_wrapper.rs","byte_start":13641648,"byte_end":13641665,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\delay.rs","byte_start":13779257,"byte_end":13779268,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\delay.rs","byte_start":13779448,"byte_end":13779459,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2465},{"krate":0,"index":2466}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\flatten.rs","byte_start":13780488,"byte_end":13780501,"line_start":33,"line_end":33,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\flatten.rs","byte_start":13780688,"byte_end":13780701,"line_start":41,"line_end":41,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2496},{"krate":0,"index":2497}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\race.rs","byte_start":13781966,"byte_end":13781970,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2521}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\race.rs","byte_start":13782224,"byte_end":13782228,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2525},{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\try_race.rs","byte_start":13783221,"byte_end":13783228,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\try_race.rs","byte_start":13783488,"byte_end":13783495,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2556},{"krate":0,"index":2557}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\join.rs","byte_start":13784967,"byte_end":13784971,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\join.rs","byte_start":13785205,"byte_end":13785209,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2585},{"krate":0,"index":2586}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\try_join.rs","byte_start":13786387,"byte_end":13786394,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2610}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\try_join.rs","byte_start":13786637,"byte_end":13786644,"line_start":35,"line_end":35,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13778871,"byte_end":13778872,"line_start":287,"line_end":287,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788574,"byte_end":13788581,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2681},{"krate":0,"index":2682}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789474,"byte_end":13789480,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789510,"byte_end":13789516,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13482017,"byte_end":13482030,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13482257,"byte_end":13482270,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13482906,"byte_end":13482918,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13482945,"byte_end":13482957,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13791167,"byte_end":13791168,"line_start":46,"line_end":46,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\maybe_done.rs","byte_start":13791981,"byte_end":13791990,"line_start":27,"line_end":27,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\maybe_done.rs","byte_start":13793243,"byte_end":13793252,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2777},{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\all.rs","byte_start":13553325,"byte_end":13553334,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\all.rs","byte_start":13553541,"byte_end":13553550,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\all.rs","byte_start":13553590,"byte_end":13553599,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\any.rs","byte_start":13554680,"byte_end":13554689,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\any.rs","byte_start":13554896,"byte_end":13554905,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\any.rs","byte_start":13554945,"byte_end":13554954,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\chain.rs","byte_start":13556324,"byte_end":13556329,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\chain.rs","byte_start":13556547,"byte_end":13556552,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cloned.rs","byte_start":13557590,"byte_end":13557596,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cloned.rs","byte_start":13557708,"byte_end":13557714,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cmp.rs","byte_start":13558665,"byte_end":13558674,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cmp.rs","byte_start":13558903,"byte_end":13558912,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\copied.rs","byte_start":13561211,"byte_end":13561217,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\copied.rs","byte_start":13561329,"byte_end":13561335,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cycle.rs","byte_start":13561992,"byte_end":13561997,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cycle.rs","byte_start":13562182,"byte_end":13562187,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\enumerate.rs","byte_start":13562880,"byte_end":13562889,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\enumerate.rs","byte_start":13562996,"byte_end":13563005,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\eq.rs","byte_start":13564021,"byte_end":13564029,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\eq.rs","byte_start":13564243,"byte_end":13564251,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\filter.rs","byte_start":13565520,"byte_end":13565526,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\filter.rs","byte_start":13565691,"byte_end":13565697,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\filter_map.rs","byte_start":13566494,"byte_end":13566503,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\filter_map.rs","byte_start":13566622,"byte_end":13566631,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find.rs","byte_start":13567470,"byte_end":13567480,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find.rs","byte_start":13567614,"byte_end":13567624,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find.rs","byte_start":13567665,"byte_end":13567675,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find_map.rs","byte_start":13568469,"byte_end":13568482,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find_map.rs","byte_start":13568616,"byte_end":13568629,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find_map.rs","byte_start":13568673,"byte_end":13568686,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\fold.rs","byte_start":13569599,"byte_end":13569609,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\fold.rs","byte_start":13569802,"byte_end":13569812,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\for_each.rs","byte_start":13570772,"byte_end":13570785,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\for_each.rs","byte_start":13570934,"byte_end":13570947,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\fuse.rs","byte_start":13571978,"byte_end":13571982,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\fuse.rs","byte_start":13572137,"byte_end":13572141,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\ge.rs","byte_start":13573164,"byte_end":13573172,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\ge.rs","byte_start":13573380,"byte_end":13573388,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\gt.rs","byte_start":13574397,"byte_end":13574405,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\gt.rs","byte_start":13574613,"byte_end":13574621,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\inspect.rs","byte_start":13575589,"byte_end":13575596,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\inspect.rs","byte_start":13575745,"byte_end":13575752,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\last.rs","byte_start":13576472,"byte_end":13576482,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\last.rs","byte_start":13576598,"byte_end":13576608,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\le.rs","byte_start":13577726,"byte_end":13577734,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\le.rs","byte_start":13577942,"byte_end":13577950,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\lt.rs","byte_start":13578969,"byte_end":13578977,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\lt.rs","byte_start":13579185,"byte_end":13579193,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\map.rs","byte_start":13579926,"byte_end":13579929,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\map.rs","byte_start":13580081,"byte_end":13580084,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max.rs","byte_start":13580769,"byte_end":13580778,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max.rs","byte_start":13580893,"byte_end":13580902,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max_by.rs","byte_start":13582074,"byte_end":13582085,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max_by.rs","byte_start":13582272,"byte_end":13582283,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13583505,"byte_end":13583519,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13583704,"byte_end":13583718,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min.rs","byte_start":13585124,"byte_end":13585133,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min.rs","byte_start":13585248,"byte_end":13585257,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min_by.rs","byte_start":13586426,"byte_end":13586437,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min_by.rs","byte_start":13586624,"byte_end":13586635,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13587883,"byte_end":13587897,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13588082,"byte_end":13588096,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\ne.rs","byte_start":13589665,"byte_end":13589673,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\ne.rs","byte_start":13589887,"byte_end":13589895,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\next.rs","byte_start":13590951,"byte_end":13590961,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\nth.rs","byte_start":13591408,"byte_end":13591417,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\nth.rs","byte_start":13591441,"byte_end":13591450,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\nth.rs","byte_start":13591580,"byte_end":13591589,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13592802,"byte_end":13592818,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13593047,"byte_end":13593063,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\position.rs","byte_start":13595446,"byte_end":13595460,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\position.rs","byte_start":13595490,"byte_end":13595504,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\position.rs","byte_start":13595707,"byte_end":13595721,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\scan.rs","byte_start":13596919,"byte_end":13596923,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\scan.rs","byte_start":13597128,"byte_end":13597132,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\skip.rs","byte_start":13598117,"byte_end":13598121,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\skip.rs","byte_start":13598235,"byte_end":13598239,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\skip_while.rs","byte_start":13599359,"byte_end":13599368,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\skip_while.rs","byte_start":13599550,"byte_end":13599559,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\step_by.rs","byte_start":13600902,"byte_end":13600908,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\step_by.rs","byte_start":13601109,"byte_end":13601115,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\take.rs","byte_start":13602318,"byte_end":13602322,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\take.rs","byte_start":13602493,"byte_end":13602497,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1406},{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\take_while.rs","byte_start":13603542,"byte_end":13603551,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\take_while.rs","byte_start":13603716,"byte_end":13603725,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_fold.rs","byte_start":13604579,"byte_end":13604592,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_fold.rs","byte_start":13604628,"byte_end":13604641,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_fold.rs","byte_start":13604853,"byte_end":13604866,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13605896,"byte_end":13605912,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13605942,"byte_end":13605958,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13606093,"byte_end":13606109,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\zip.rs","byte_start":13607371,"byte_end":13607374,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\zip.rs","byte_start":13607614,"byte_end":13607617,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\zip.rs","byte_start":13607819,"byte_end":13607822,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\count.rs","byte_start":13823716,"byte_end":13823727,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\count.rs","byte_start":13823838,"byte_end":13823849,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2873},{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\merge.rs","byte_start":13825066,"byte_end":13825071,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2904}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\merge.rs","byte_start":13825254,"byte_end":13825259,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2909},{"krate":0,"index":2910}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\flatten.rs","byte_start":13826888,"byte_end":13826895,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\flatten.rs","byte_start":13827098,"byte_end":13827105,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2945},{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\flatten.rs","byte_start":13827950,"byte_end":13827957,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\flat_map.rs","byte_start":13828957,"byte_end":13828964,"line_start":27,"line_end":27,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2982}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\flat_map.rs","byte_start":13829219,"byte_end":13829226,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2987},{"krate":0,"index":2988}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\partition.rs","byte_start":13830468,"byte_end":13830483,"line_start":21,"line_end":21,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3016}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\partition.rs","byte_start":13830691,"byte_end":13830706,"line_start":31,"line_end":31,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3021},{"krate":0,"index":3022}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\timeout.rs","byte_start":13831952,"byte_end":13831959,"line_start":25,"line_end":25,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\timeout.rs","byte_start":13832144,"byte_end":13832151,"line_start":33,"line_end":33,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3064},{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\timeout.rs","byte_start":13833073,"byte_end":13833085,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\timeout.rs","byte_start":13833112,"byte_end":13833124,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3068}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\throttle.rs","byte_start":13834008,"byte_end":13834016,"line_start":32,"line_end":32,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3101}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\throttle.rs","byte_start":13834269,"byte_end":13834277,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3104},{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\delay.rs","byte_start":13835469,"byte_end":13835474,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3138}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\delay.rs","byte_start":13835680,"byte_end":13835685,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3141},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\unzip.rs","byte_start":13836473,"byte_end":13836484,"line_start":20,"line_end":20,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3167}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\unzip.rs","byte_start":13836754,"byte_end":13836765,"line_start":33,"line_end":33,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3174},{"krate":0,"index":3175}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13552971,"byte_end":13552972,"line_start":2309,"line_end":2309,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13609360,"byte_end":13609365,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13609866,"byte_end":13609872,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610801,"byte_end":13610807,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13612161,"byte_end":13612169,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1877},{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13612424,"byte_end":13612432,"line_start":58,"line_end":58,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13613476,"byte_end":13613480,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13613705,"byte_end":13613709,"line_start":54,"line_end":54,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614649,"byte_end":13614655,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615224,"byte_end":13615234,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616426,"byte_end":13616436,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\next_back.rs","byte_start":13844789,"byte_end":13844803,"line_start":13,"line_end":13,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3260},{"krate":0,"index":3261}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\nth_back.rs","byte_start":13845257,"byte_end":13845270,"line_start":14,"line_end":14,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\nth_back.rs","byte_start":13845409,"byte_end":13845422,"line_start":20,"line_end":20,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3291},{"krate":0,"index":3292}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfind.rs","byte_start":13846279,"byte_end":13846290,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3320}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfind.rs","byte_start":13846431,"byte_end":13846442,"line_start":20,"line_end":20,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfind.rs","byte_start":13846483,"byte_end":13846494,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3328},{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfold.rs","byte_start":13847419,"byte_end":13847430,"line_start":20,"line_end":20,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfold.rs","byte_start":13847630,"byte_end":13847641,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3359},{"krate":0,"index":3360}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\try_rfold.rs","byte_start":13848660,"byte_end":13848674,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3385}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\try_rfold.rs","byte_start":13848880,"byte_end":13848894,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3391},{"krate":0,"index":3392}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13862361,"byte_end":13862369,"line_start":67,"line_end":67,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863589,"byte_end":13863590,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864750,"byte_end":13864757,"line_start":48,"line_end":48,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3549},{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864925,"byte_end":13864932,"line_start":56,"line_end":56,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3553}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13865079,"byte_end":13865086,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13865122,"byte_end":13865129,"line_start":64,"line_end":64,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3558}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13869281,"byte_end":13869291,"line_start":58,"line_end":58,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3611},{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\lines.rs","byte_start":13900196,"byte_end":13900201,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4451},{"krate":0,"index":4452}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\read_line.rs","byte_start":13902123,"byte_end":13902137,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4495},{"krate":0,"index":4496}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\read_until.rs","byte_start":13903596,"byte_end":13903611,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4531},{"krate":0,"index":4532}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\split.rs","byte_start":13904811,"byte_end":13904816,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4565},{"krate":0,"index":4566}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","byte_start":13898565,"byte_end":13898566,"line_start":240,"line_end":240,"column_start":42,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\bytes.rs","byte_start":13917593,"byte_end":13917598,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4633},{"krate":0,"index":4634}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919413,"byte_end":13919418,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4668},{"krate":0,"index":4669},{"krate":0,"index":4670}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921577,"byte_end":13921582,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4674}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921824,"byte_end":13921829,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4678},{"krate":0,"index":4679}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13922974,"byte_end":13922979,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4683},{"krate":0,"index":4684}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read.rs","byte_start":13924680,"byte_end":13924690,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4713},{"krate":0,"index":4714}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_exact.rs","byte_start":13925265,"byte_end":13925280,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4746},{"krate":0,"index":4747}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_to_end.rs","byte_start":13926202,"byte_end":13926217,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4777},{"krate":0,"index":4778}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_to_end.rs","byte_start":13927367,"byte_end":13927372,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4786}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_to_string.rs","byte_start":13928689,"byte_end":13928707,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4826},{"krate":0,"index":4827}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_vectored.rs","byte_start":13930061,"byte_end":13930079,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4860},{"krate":0,"index":4861}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13930899,"byte_end":13930903,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4891},{"krate":0,"index":4892},{"krate":0,"index":4893},{"krate":0,"index":4894},{"krate":0,"index":4895}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934575,"byte_end":13934579,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4898}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13935497,"byte_end":13935501,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4903},{"krate":0,"index":4904}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13915983,"byte_end":13915984,"line_start":376,"line_end":376,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\seek\\seek.rs","byte_start":13938390,"byte_end":13938400,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4994},{"krate":0,"index":4995}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\seek\\mod.rs","byte_start":13938054,"byte_end":13938055,"line_start":50,"line_end":50,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\flush.rs","byte_start":13944191,"byte_end":13944202,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5037},{"krate":0,"index":5038}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write.rs","byte_start":13944714,"byte_end":13944725,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5067},{"krate":0,"index":5068}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_all.rs","byte_start":13945290,"byte_end":13945304,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5100},{"krate":0,"index":5101}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_fmt.rs","byte_start":13946275,"byte_end":13946289,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5132},{"krate":0,"index":5133}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_vectored.rs","byte_start":13947774,"byte_end":13947793,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5165},{"krate":0,"index":5166}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\mod.rs","byte_start":13943892,"byte_end":13943893,"line_start":187,"line_end":187,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\utils.rs","byte_start":13948260,"byte_end":13948266,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5222}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\utils.rs","byte_start":13948519,"byte_end":13948531,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5226}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\utils.rs","byte_start":13948818,"byte_end":13948830,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\utils.rs","byte_start":13948961,"byte_end":13948973,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5231}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13950954,"byte_end":13950963,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5281},{"krate":0,"index":5282}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952191,"byte_end":13952200,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5285},{"krate":0,"index":5286},{"krate":0,"index":5287},{"krate":0,"index":5288},{"krate":0,"index":5289},{"krate":0,"index":5290}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954940,"byte_end":13954949,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5293},{"krate":0,"index":5294}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13956403,"byte_end":13956412,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5298},{"krate":0,"index":5300}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13957334,"byte_end":13957343,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5303}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13957681,"byte_end":13957690,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5306}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964520,"byte_end":13964529,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5348},{"krate":0,"index":5349},{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5352},{"krate":0,"index":5353},{"krate":0,"index":5356},{"krate":0,"index":5357}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13970361,"byte_end":13970370,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5362}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13971268,"byte_end":13971277,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5365}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13971523,"byte_end":13971532,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5368}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13976328,"byte_end":13976338,"line_start":150,"line_end":150,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5413},{"krate":0,"index":5414}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978401,"byte_end":13978407,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5456},{"krate":0,"index":5457},{"krate":0,"index":5458},{"krate":0,"index":5459}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981708,"byte_end":13981714,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5462}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981980,"byte_end":13981986,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5465},{"krate":0,"index":5466}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13982502,"byte_end":13982508,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5469},{"krate":0,"index":5470}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13982858,"byte_end":13982864,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5472},{"krate":0,"index":5473},{"krate":0,"index":5474},{"krate":0,"index":5475}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13983623,"byte_end":13983629,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5477},{"krate":0,"index":5478},{"krate":0,"index":5479}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13984153,"byte_end":13984159,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5481},{"krate":0,"index":5482},{"krate":0,"index":5483}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985437,"byte_end":13985442,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5512}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985561,"byte_end":13985566,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5514}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985770,"byte_end":13985775,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5516},{"krate":0,"index":5518}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986960,"byte_end":13986966,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5544}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13987085,"byte_end":13987091,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5546}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13988076,"byte_end":13988080,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5572}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13988199,"byte_end":13988203,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989951,"byte_end":13989958,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5677},{"krate":0,"index":5678}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13992949,"byte_end":13992955,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5711},{"krate":0,"index":5713},{"krate":0,"index":5715}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13996644,"byte_end":13996650,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5855}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999294,"byte_end":13999299,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5754}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":14001315,"byte_end":14001320,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5761}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":14003664,"byte_end":14003669,"line_start":214,"line_end":214,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5894}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14006794,"byte_end":14006800,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5813},{"krate":0,"index":5815},{"krate":0,"index":5817}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14010489,"byte_end":14010495,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5932}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016170,"byte_end":14016187,"line_start":15,"line_end":15,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6074}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017350,"byte_end":14017357,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017382,"byte_end":14017389,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017411,"byte_end":14017418,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6080}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017485,"byte_end":14017492,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6082},{"krate":0,"index":6083},{"krate":0,"index":6088},{"krate":0,"index":6091},{"krate":0,"index":6097},{"krate":0,"index":6102},{"krate":0,"index":6108},{"krate":0,"index":6109}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14026266,"byte_end":14026273,"line_start":362,"line_end":362,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6111}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14027065,"byte_end":14027076,"line_start":384,"line_end":384,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6123},{"krate":0,"index":6124}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14027984,"byte_end":14027995,"line_start":411,"line_end":411,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6129}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\waker_set.rs","byte_start":14029637,"byte_end":14029645,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6171},{"krate":0,"index":6172},{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6175},{"krate":0,"index":6176},{"krate":0,"index":6177},{"krate":0,"index":6178}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\waker_set.rs","byte_start":14033803,"byte_end":14033807,"line_start":190,"line_end":190,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6183}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\waker_set.rs","byte_start":14034373,"byte_end":14034377,"line_start":210,"line_end":210,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6185},{"krate":0,"index":6186}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\waker_set.rs","byte_start":14034531,"byte_end":14034535,"line_start":219,"line_end":219,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6188}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042838,"byte_end":14042848,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6391},{"krate":0,"index":6392},{"krate":0,"index":6393}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046072,"byte_end":14046080,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6428},{"krate":0,"index":6429},{"krate":0,"index":6430},{"krate":0,"index":6434},{"krate":0,"index":6438}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14050043,"byte_end":14050051,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6440}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14050204,"byte_end":14050212,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6442}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052391,"byte_end":14052395,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":6541},{"krate":0,"index":6546},{"krate":0,"index":6551},{"krate":0,"index":6556},{"krate":0,"index":6561},{"krate":0,"index":6565}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14060163,"byte_end":14060167,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6570}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14060662,"byte_end":14060666,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6572}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14060780,"byte_end":14060784,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6574}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14061265,"byte_end":14061269,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6578},{"krate":0,"index":6579},{"krate":0,"index":6580}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14062433,"byte_end":14062437,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6587}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14062926,"byte_end":14062930,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6591}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14063795,"byte_end":14063799,"line_start":444,"line_end":444,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7807}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14063931,"byte_end":14063935,"line_start":450,"line_end":450,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7809}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14064103,"byte_end":14064107,"line_start":456,"line_end":456,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7811}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14064511,"byte_end":14064515,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14064552,"byte_end":14064556,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14064582,"byte_end":14064586,"line_start":473,"line_end":473,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6602}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14064938,"byte_end":14064942,"line_start":492,"line_end":492,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6610},{"krate":0,"index":6611}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14066177,"byte_end":14066186,"line_start":529,"line_end":529,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14066223,"byte_end":14066232,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14066248,"byte_end":14066257,"line_start":532,"line_end":532,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6623}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14066648,"byte_end":14066657,"line_start":545,"line_end":545,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6627}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14066965,"byte_end":14066974,"line_start":557,"line_end":557,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6630},{"krate":0,"index":6631}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14067100,"byte_end":14067109,"line_start":565,"line_end":565,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6634}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14068670,"byte_end":14068679,"line_start":618,"line_end":618,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6651},{"krate":0,"index":6652},{"krate":0,"index":6654},{"krate":0,"index":6655},{"krate":0,"index":6656},{"krate":0,"index":6658},{"krate":0,"index":6660}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092743,"byte_end":14092754,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6714},{"krate":0,"index":6715},{"krate":0,"index":6716},{"krate":0,"index":6717},{"krate":0,"index":6718},{"krate":0,"index":6719},{"krate":0,"index":6720},{"krate":0,"index":6721}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14099543,"byte_end":14099554,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6727}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14105395,"byte_end":14105402,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6790}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14105601,"byte_end":14105608,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6793}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120554,"byte_end":14120563,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6981},{"krate":0,"index":6982}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120768,"byte_end":14120777,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121523,"byte_end":14121533,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7000}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14122042,"byte_end":14122052,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7002}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14122145,"byte_end":14122155,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7004}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14122261,"byte_end":14122271,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7007},{"krate":0,"index":7008}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14122428,"byte_end":14122438,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7011}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14122563,"byte_end":14122573,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14122603,"byte_end":14122612,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7014}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123243,"byte_end":14123247,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7037}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123720,"byte_end":14123724,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7040},{"krate":0,"index":7041}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123886,"byte_end":14123890,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7043}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14124031,"byte_end":14124042,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7049}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14124339,"byte_end":14124343,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7051}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14124436,"byte_end":14124440,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7053}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14124557,"byte_end":14124561,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7056}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14124708,"byte_end":14124712,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126312,"byte_end":14126316,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7109},{"krate":0,"index":7111},{"krate":0,"index":7112},{"krate":0,"index":7113},{"krate":0,"index":7114},{"krate":0,"index":7115},{"krate":0,"index":7116},{"krate":0,"index":7117},{"krate":0,"index":7118},{"krate":0,"index":7120},{"krate":0,"index":7121},{"krate":0,"index":7122},{"krate":0,"index":7124},{"krate":0,"index":7126},{"krate":0,"index":7128},{"krate":0,"index":7129},{"krate":0,"index":7130},{"krate":0,"index":7132},{"krate":0,"index":7134},{"krate":0,"index":7136},{"krate":0,"index":7137},{"krate":0,"index":7138},{"krate":0,"index":7139},{"krate":0,"index":7142},{"krate":0,"index":7145},{"krate":0,"index":7148},{"krate":0,"index":7151},{"krate":0,"index":7154},{"krate":0,"index":7157},{"krate":0,"index":7161},{"krate":0,"index":7165}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151478,"byte_end":14151481,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7167}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151710,"byte_end":14151713,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7169}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152008,"byte_end":14152010,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7171}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152213,"byte_end":14152217,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7173},{"krate":0,"index":7174}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152341,"byte_end":14152345,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7176}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152439,"byte_end":14152443,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7178}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152521,"byte_end":14152526,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7180}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152622,"byte_end":14152625,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7183}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152751,"byte_end":14152754,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7185}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152854,"byte_end":14152862,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7187}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14153043,"byte_end":14153049,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7191}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14153138,"byte_end":14153145,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7193}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14156293,"byte_end":14156297,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7213}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14156404,"byte_end":14156408,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7215}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14156504,"byte_end":14156511,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7217}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157287,"byte_end":14157294,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7270},{"krate":0,"index":7271},{"krate":0,"index":7272},{"krate":0,"index":7274},{"krate":0,"index":7275},{"krate":0,"index":7277},{"krate":0,"index":7279},{"krate":0,"index":7280}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162540,"byte_end":14162547,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7282}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162655,"byte_end":14162658,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7284}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162758,"byte_end":14162761,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7286}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162912,"byte_end":14162919,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7289}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163036,"byte_end":14163043,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7291}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163152,"byte_end":14163160,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7293}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163269,"byte_end":14163276,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7295}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163382,"byte_end":14163389,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7297},{"krate":0,"index":7298}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163568,"byte_end":14163575,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7301}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163770,"byte_end":14163777,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7305}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163934,"byte_end":14163941,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7309},{"krate":0,"index":7310}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14164062,"byte_end":14164069,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7312}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14164161,"byte_end":14164164,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7315}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14164296,"byte_end":14164299,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7318}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14164450,"byte_end":14164457,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7321}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14164569,"byte_end":14164572,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7323}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14164795,"byte_end":14164797,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7325}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14165012,"byte_end":14165019,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7327}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14165164,"byte_end":14165171,"line_start":322,"line_end":322,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7330}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14165713,"byte_end":14165720,"line_start":343,"line_end":343,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":7337}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14166163,"byte_end":14166170,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7342}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14166299,"byte_end":14166306,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7344}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14166411,"byte_end":14166418,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7346}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14171246,"byte_end":14171265,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14171433,"byte_end":14171452,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7493}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14171724,"byte_end":14171743,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":7497},{"krate":0,"index":7498}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14172446,"byte_end":14172456,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7500},{"krate":0,"index":7501}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14172751,"byte_end":14172763,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7503},{"krate":0,"index":7504}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14173128,"byte_end":14173140,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7507},{"krate":0,"index":7508}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14176859,"byte_end":14176865,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7538},{"krate":0,"index":7539}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178798,"byte_end":14178809,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7594},{"krate":0,"index":7599},{"krate":0,"index":7602},{"krate":0,"index":7603},{"krate":0,"index":7608}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184784,"byte_end":14184792,"line_start":231,"line_end":231,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7613},{"krate":0,"index":7614}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14185127,"byte_end":14185135,"line_start":240,"line_end":240,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7618}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14185291,"byte_end":14185302,"line_start":246,"line_end":246,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7620}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14186261,"byte_end":14186272,"line_start":282,"line_end":282,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8200}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14186407,"byte_end":14186418,"line_start":288,"line_end":288,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8202}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14186601,"byte_end":14186612,"line_start":294,"line_end":294,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8204}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188610,"byte_end":14188619,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7662},{"krate":0,"index":7667},{"krate":0,"index":7668},{"krate":0,"index":7669},{"krate":0,"index":7670},{"krate":0,"index":7671},{"krate":0,"index":7674},{"krate":0,"index":7675},{"krate":0,"index":7676}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195727,"byte_end":14195736,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7678},{"krate":0,"index":7679}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14196637,"byte_end":14196646,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7684},{"krate":0,"index":7685},{"krate":0,"index":7686},{"krate":0,"index":7687}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14198130,"byte_end":14198139,"line_start":372,"line_end":372,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7694}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14199324,"byte_end":14199333,"line_start":411,"line_end":411,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8225}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14199478,"byte_end":14199487,"line_start":417,"line_end":417,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8227}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14199666,"byte_end":14199675,"line_start":423,"line_end":423,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8229}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201528,"byte_end":14201537,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7719},{"krate":0,"index":7724},{"krate":0,"index":7726},{"krate":0,"index":7728},{"krate":0,"index":7733},{"krate":0,"index":7736},{"krate":0,"index":7739},{"krate":0,"index":7745},{"krate":0,"index":7748},{"krate":0,"index":7751},{"krate":0,"index":7754},{"krate":0,"index":7755},{"krate":0,"index":7756},{"krate":0,"index":7757},{"krate":0,"index":7758},{"krate":0,"index":7759},{"krate":0,"index":7760},{"krate":0,"index":7761},{"krate":0,"index":7762},{"krate":0,"index":7763},{"krate":0,"index":7764},{"krate":0,"index":7765},{"krate":0,"index":7766},{"krate":0,"index":7767}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14217432,"byte_end":14217441,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7769}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14218375,"byte_end":14218384,"line_start":562,"line_end":562,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8248}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14218529,"byte_end":14218538,"line_start":568,"line_end":568,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8250}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14218717,"byte_end":14218726,"line_start":574,"line_end":574,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8252}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\vec\\extend.rs","byte_start":14225873,"byte_end":14225876,"line_start":6,"line_end":6,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8341}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\vec\\from_stream.rs","byte_start":14226435,"byte_end":14226438,"line_start":9,"line_end":9,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8371}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\vec\\from_stream.rs","byte_start":14226889,"byte_end":14226892,"line_start":27,"line_end":27,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8378}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\vec\\from_stream.rs","byte_start":14227297,"byte_end":14227300,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8384}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\vec\\from_stream.rs","byte_start":14227701,"byte_end":14227703,"line_start":59,"line_end":59,"column_start":33,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8390}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\vec\\from_stream.rs","byte_start":14228092,"byte_end":14228095,"line_start":75,"line_end":75,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8396}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\result\\from_stream.rs","byte_start":14228830,"byte_end":14228836,"line_start":6,"line_end":6,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8420}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\result\\product.rs","byte_start":14248986,"byte_end":14248992,"line_start":6,"line_end":6,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8966}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\result\\sum.rs","byte_start":14251255,"byte_end":14251261,"line_start":6,"line_end":6,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":8988}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\option\\from_stream.rs","byte_start":14231291,"byte_end":14231297,"line_start":7,"line_end":7,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8448}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\option\\product.rs","byte_start":14253520,"byte_end":14253526,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9012}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\option\\sum.rs","byte_start":14255327,"byte_end":14255333,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9035}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\extend.rs","byte_start":14232748,"byte_end":14232754,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8473}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\extend.rs","byte_start":14233289,"byte_end":14233295,"line_start":28,"line_end":28,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8479}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\extend.rs","byte_start":14233790,"byte_end":14233796,"line_start":48,"line_end":48,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8485}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\extend.rs","byte_start":14234288,"byte_end":14234294,"line_start":68,"line_end":68,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8490}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\extend.rs","byte_start":14234795,"byte_end":14234801,"line_start":88,"line_end":88,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8496}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\from_stream.rs","byte_start":14235409,"byte_end":14235415,"line_start":7,"line_end":7,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8519}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\from_stream.rs","byte_start":14235864,"byte_end":14235870,"line_start":25,"line_end":25,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8525}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\from_stream.rs","byte_start":14236322,"byte_end":14236328,"line_start":43,"line_end":43,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8531}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\from_stream.rs","byte_start":14236774,"byte_end":14236780,"line_start":61,"line_end":61,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8536}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\from_stream.rs","byte_start":14237235,"byte_end":14237241,"line_start":79,"line_end":79,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8542}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\binary_heap\\extend.rs","byte_start":14238470,"byte_end":14238480,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8568}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\binary_heap\\from_stream.rs","byte_start":14239020,"byte_end":14239030,"line_start":7,"line_end":7,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8592}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\btree_map\\extend.rs","byte_start":14239726,"byte_end":14239734,"line_start":7,"line_end":7,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":8618}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\btree_map\\from_stream.rs","byte_start":14240248,"byte_end":14240256,"line_start":7,"line_end":7,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8643}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\btree_set\\extend.rs","byte_start":14240945,"byte_end":14240953,"line_start":7,"line_end":7,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8668}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\btree_set\\from_stream.rs","byte_start":14241443,"byte_end":14241451,"line_start":7,"line_end":7,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8692}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\hash_map\\extend.rs","byte_start":14242216,"byte_end":14242223,"line_start":8,"line_end":8,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8726}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\hash_map\\from_stream.rs","byte_start":14243510,"byte_end":14243517,"line_start":8,"line_end":8,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8759}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\hash_set\\extend.rs","byte_start":14244391,"byte_end":14244398,"line_start":8,"line_end":8,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8792}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\hash_set\\from_stream.rs","byte_start":14245847,"byte_end":14245854,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8824}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\linked_list\\extend.rs","byte_start":14246654,"byte_end":14246664,"line_start":7,"line_end":7,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8849}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\linked_list\\from_stream.rs","byte_start":14247157,"byte_end":14247167,"line_start":7,"line_end":7,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":8873}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\vec_deque\\extend.rs","byte_start":14247894,"byte_end":14247902,"line_start":7,"line_end":7,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8898}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\vec_deque\\from_stream.rs","byte_start":14248439,"byte_end":14248447,"line_start":7,"line_end":7,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8922}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":10910,"byte_end":10914,"line_start":300,"line_end":300,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":51}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":10928,"byte_end":10934,"line_start":301,"line_end":301,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":52}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":10948,"byte_end":10954,"line_start":302,"line_end":302,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":108}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":10982,"byte_end":10984,"line_start":306,"line_end":306,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4282}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\mod.rs","byte_start":13881662,"byte_end":13881669,"line_start":290,"line_end":290,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4390}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":10998,"byte_end":11000,"line_start":307,"line_end":307,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4284}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\mod.rs","byte_start":13882656,"byte_end":13882663,"line_start":8,"line_end":8,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":5933}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","byte_start":14010680,"byte_end":14010682,"line_start":4,"line_end":4,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":5934}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\os\\windows\\mod.rs","byte_start":14010747,"byte_end":14010749,"line_start":9,"line_end":9,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":5960}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":11014,"byte_end":11021,"line_start":308,"line_end":308,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4285}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":11035,"byte_end":11039,"line_start":309,"line_end":309,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4286}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":11053,"byte_end":11060,"line_start":310,"line_end":310,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4317}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":11131,"byte_end":11133,"line_start":315,"line_end":315,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":6220}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":11147,"byte_end":11151,"line_start":316,"line_end":316,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6971}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":11165,"byte_end":11168,"line_start":317,"line_end":317,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":7384}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":11263,"byte_end":11266,"line_start":323,"line_end":323,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":8253}},{"kind":"Mod","span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\lib.rs","byte_start":11341,"byte_end":11348,"line_start":325,"line_end":325,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":8257}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\utils.rs","byte_start":11808,"byte_end":11812,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\yield_now.rs","byte_start":13617586,"byte_end":13617594,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1992},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13619493,"byte_end":13619500,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\builder.rs","byte_start":13624857,"byte_end":13624874,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12032},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13627120,"byte_end":13627130,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13628203,"byte_end":13628213,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2327},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\join_handle.rs","byte_start":13628362,"byte_end":13628372,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2327},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13631574,"byte_end":13631578,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task.rs","byte_start":13632188,"byte_end":13632192,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2334},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13632746,"byte_end":13632752,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_id.rs","byte_start":13633163,"byte_end":13633169,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2339},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13633759,"byte_end":13633767,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13637647,"byte_end":13637658,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13637802,"byte_end":13637813,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13637978,"byte_end":13637989,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2364},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_local.rs","byte_start":13638357,"byte_end":13638366,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_locals_wrapper.rs","byte_start":13640218,"byte_end":13640235,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\task\\task_locals_wrapper.rs","byte_start":13641648,"byte_end":13641665,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2291},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\delay.rs","byte_start":13779257,"byte_end":13779268,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":11995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\delay.rs","byte_start":13779448,"byte_end":13779459,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":11995},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\flatten.rs","byte_start":13780488,"byte_end":13780501,"line_start":33,"line_end":33,"column_start":18,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":11954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\flatten.rs","byte_start":13780688,"byte_end":13780701,"line_start":41,"line_end":41,"column_start":23,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":11954},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\race.rs","byte_start":13781966,"byte_end":13781970,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":11862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\race.rs","byte_start":13782224,"byte_end":13782228,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":11862},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\try_race.rs","byte_start":13783221,"byte_end":13783228,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":11817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\try_race.rs","byte_start":13783488,"byte_end":13783495,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":11817},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\join.rs","byte_start":13784967,"byte_end":13784971,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":11772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\join.rs","byte_start":13785205,"byte_end":13785209,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":11772},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\try_join.rs","byte_start":13786387,"byte_end":13786394,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":11727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\try_join.rs","byte_start":13786637,"byte_end":13786644,"line_start":35,"line_end":35,"column_start":32,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":11727},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13771648,"byte_end":13771654,"line_start":30,"line_end":30,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":13098},"to":{"krate":0,"index":2414}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\future\\mod.rs","byte_start":13778871,"byte_end":13778872,"line_start":287,"line_end":287,"column_start":40,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2432},"to":{"krate":0,"index":2414}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\pending.rs","byte_start":13788574,"byte_end":13788581,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789474,"byte_end":13789480,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2702},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\poll_fn.rs","byte_start":13789510,"byte_end":13789516,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2702},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13482017,"byte_end":13482030,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":11690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13482257,"byte_end":13482270,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":11690},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13482906,"byte_end":13482918,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2717},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\timeout.rs","byte_start":13482945,"byte_end":13482957,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2717},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\into_future.rs","byte_start":13791167,"byte_end":13791168,"line_start":46,"line_end":46,"column_start":32,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2746},"to":{"krate":0,"index":2741}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\maybe_done.rs","byte_start":13791981,"byte_end":13791990,"line_start":27,"line_end":27,"column_start":19,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\future\\maybe_done.rs","byte_start":13793243,"byte_end":13793252,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2779},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\all.rs","byte_start":13553325,"byte_end":13553334,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\all.rs","byte_start":13553541,"byte_end":13553550,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":173},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\all.rs","byte_start":13553590,"byte_end":13553599,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":173},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\any.rs","byte_start":13554680,"byte_end":13554689,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\any.rs","byte_start":13554896,"byte_end":13554905,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\any.rs","byte_start":13554945,"byte_end":13554954,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\chain.rs","byte_start":13556324,"byte_end":13556329,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":11641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\chain.rs","byte_start":13556547,"byte_end":13556552,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":11641},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cloned.rs","byte_start":13557590,"byte_end":13557596,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":11605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cloned.rs","byte_start":13557708,"byte_end":13557714,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":11605},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cmp.rs","byte_start":13558665,"byte_end":13558674,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":11552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cmp.rs","byte_start":13558903,"byte_end":13558912,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":11552},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\copied.rs","byte_start":13561211,"byte_end":13561217,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":11516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\copied.rs","byte_start":13561329,"byte_end":13561335,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":11516},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cycle.rs","byte_start":13561992,"byte_end":13561997,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":11476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\cycle.rs","byte_start":13562182,"byte_end":13562187,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":11476},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\enumerate.rs","byte_start":13562880,"byte_end":13562889,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":11436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\enumerate.rs","byte_start":13562996,"byte_end":13563005,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":11436},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\eq.rs","byte_start":13564021,"byte_end":13564029,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":11391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\eq.rs","byte_start":13564243,"byte_end":13564251,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":11391},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\filter.rs","byte_start":13565520,"byte_end":13565526,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":11342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\filter.rs","byte_start":13565691,"byte_end":13565697,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":11342},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\filter_map.rs","byte_start":13566494,"byte_end":13566503,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":11293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\filter_map.rs","byte_start":13566622,"byte_end":13566631,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":11293},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find.rs","byte_start":13567470,"byte_end":13567480,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find.rs","byte_start":13567614,"byte_end":13567624,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find.rs","byte_start":13567665,"byte_end":13567675,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find_map.rs","byte_start":13568469,"byte_end":13568482,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find_map.rs","byte_start":13568616,"byte_end":13568629,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":554},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\find_map.rs","byte_start":13568673,"byte_end":13568686,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":554},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\fold.rs","byte_start":13569599,"byte_end":13569609,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":11231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\fold.rs","byte_start":13569802,"byte_end":13569812,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":11231},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\for_each.rs","byte_start":13570772,"byte_end":13570785,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":11186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\for_each.rs","byte_start":13570934,"byte_end":13570947,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":11186},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\fuse.rs","byte_start":13571978,"byte_end":13571982,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":11143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\fuse.rs","byte_start":13572137,"byte_end":13572141,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":11143},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\ge.rs","byte_start":13573164,"byte_end":13573172,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":11102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\ge.rs","byte_start":13573380,"byte_end":13573388,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":11102},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\gt.rs","byte_start":13574397,"byte_end":13574405,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":11061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\gt.rs","byte_start":13574613,"byte_end":13574621,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":11061},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\inspect.rs","byte_start":13575589,"byte_end":13575596,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":11012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\inspect.rs","byte_start":13575745,"byte_end":13575752,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":11012},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\last.rs","byte_start":13576472,"byte_end":13576482,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":10967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\last.rs","byte_start":13576598,"byte_end":13576608,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":10967},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\le.rs","byte_start":13577726,"byte_end":13577734,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":10926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\le.rs","byte_start":13577942,"byte_end":13577950,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":10926},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\lt.rs","byte_start":13578969,"byte_end":13578977,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":10885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\lt.rs","byte_start":13579185,"byte_end":13579193,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":10885},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\map.rs","byte_start":13579926,"byte_end":13579929,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":10836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\map.rs","byte_start":13580081,"byte_end":13580084,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":10836},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max.rs","byte_start":13580769,"byte_end":13580778,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":10791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max.rs","byte_start":13580893,"byte_end":13580902,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":10791},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max_by.rs","byte_start":13582074,"byte_end":13582085,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":10734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max_by.rs","byte_start":13582272,"byte_end":13582283,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":10734},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13583505,"byte_end":13583519,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":10677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13583704,"byte_end":13583718,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10677},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min.rs","byte_start":13585124,"byte_end":13585133,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min.rs","byte_start":13585248,"byte_end":13585257,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10632},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min_by.rs","byte_start":13586426,"byte_end":13586437,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":10575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min_by.rs","byte_start":13586624,"byte_end":13586635,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10575},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13587883,"byte_end":13587897,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13588082,"byte_end":13588096,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10518},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\ne.rs","byte_start":13589665,"byte_end":13589673,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":10473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\ne.rs","byte_start":13589887,"byte_end":13589895,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":10473},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\next.rs","byte_start":13590951,"byte_end":13590961,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1161},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\nth.rs","byte_start":13591408,"byte_end":13591417,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1186},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\nth.rs","byte_start":13591441,"byte_end":13591450,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\nth.rs","byte_start":13591580,"byte_end":13591589,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1186},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13592802,"byte_end":13592818,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":10420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13593047,"byte_end":13593063,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":10420},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\position.rs","byte_start":13595446,"byte_end":13595460,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\position.rs","byte_start":13595490,"byte_end":13595504,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\position.rs","byte_start":13595707,"byte_end":13595721,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\scan.rs","byte_start":13596919,"byte_end":13596923,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":10362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\scan.rs","byte_start":13597128,"byte_end":13597132,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":10362},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\skip.rs","byte_start":13598117,"byte_end":13598121,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":10322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\skip.rs","byte_start":13598235,"byte_end":13598239,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":10322},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\skip_while.rs","byte_start":13599359,"byte_end":13599368,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":10273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\skip_while.rs","byte_start":13599550,"byte_end":13599559,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":10273},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\step_by.rs","byte_start":13600902,"byte_end":13600908,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":10229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\step_by.rs","byte_start":13601109,"byte_end":13601115,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":10229},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\take.rs","byte_start":13602318,"byte_end":13602322,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":10186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\take.rs","byte_start":13602493,"byte_end":13602497,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":10186},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\take_while.rs","byte_start":13603542,"byte_end":13603551,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":10137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\take_while.rs","byte_start":13603716,"byte_end":13603725,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":10137},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_fold.rs","byte_start":13604579,"byte_end":13604592,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1451},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_fold.rs","byte_start":13604628,"byte_end":13604641,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_fold.rs","byte_start":13604853,"byte_end":13604866,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1451},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13605896,"byte_end":13605912,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1495},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13605942,"byte_end":13605958,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13606093,"byte_end":13606109,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1495},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\zip.rs","byte_start":13607371,"byte_end":13607374,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":10088},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\zip.rs","byte_start":13607614,"byte_end":13607617,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":10088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\zip.rs","byte_start":13607819,"byte_end":13607822,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":10088},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\count.rs","byte_start":13823716,"byte_end":13823727,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\count.rs","byte_start":13823838,"byte_end":13823849,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":10051},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\merge.rs","byte_start":13825066,"byte_end":13825071,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":10002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\merge.rs","byte_start":13825254,"byte_end":13825259,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":10002},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\flatten.rs","byte_start":13826888,"byte_end":13826895,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":9965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\flatten.rs","byte_start":13827098,"byte_end":13827105,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":9965},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\flatten.rs","byte_start":13827950,"byte_end":13827957,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":9965},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\flat_map.rs","byte_start":13828957,"byte_end":13828964,"line_start":27,"line_end":27,"column_start":15,"column_end":22},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":9912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\flat_map.rs","byte_start":13829219,"byte_end":13829226,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":9912},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\partition.rs","byte_start":13830468,"byte_end":13830483,"line_start":21,"line_end":21,"column_start":24,"column_end":39},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":9850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\partition.rs","byte_start":13830691,"byte_end":13830706,"line_start":31,"line_end":31,"column_start":26,"column_end":41},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":9850},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\timeout.rs","byte_start":13831952,"byte_end":13831959,"line_start":25,"line_end":25,"column_start":17,"column_end":24},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":9806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\timeout.rs","byte_start":13832144,"byte_end":13832151,"line_start":33,"line_end":33,"column_start":28,"column_end":35},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":9806},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\timeout.rs","byte_start":13833073,"byte_end":13833085,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3176},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\timeout.rs","byte_start":13833112,"byte_end":13833124,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3176},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\throttle.rs","byte_start":13834008,"byte_end":13834016,"line_start":32,"line_end":32,"column_start":17,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":9761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\throttle.rs","byte_start":13834269,"byte_end":13834277,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":9761},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\delay.rs","byte_start":13835469,"byte_end":13835474,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":9720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\delay.rs","byte_start":13835680,"byte_end":13835685,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":9720},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\unzip.rs","byte_start":13836473,"byte_end":13836484,"line_start":20,"line_end":20,"column_start":31,"column_end":42},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":9657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\unzip.rs","byte_start":13836754,"byte_end":13836765,"line_start":33,"line_end":33,"column_start":40,"column_end":51},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":9657},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13497218,"byte_end":13497224,"line_start":153,"line_end":153,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":21,"index":96},"to":{"krate":0,"index":1686}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\stream\\mod.rs","byte_start":13552971,"byte_end":13552972,"line_start":2309,"line_end":2309,"column_start":40,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1805},"to":{"krate":0,"index":1686}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\empty.rs","byte_start":13609360,"byte_end":13609365,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3190},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13609866,"byte_end":13609872,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_fn.rs","byte_start":13610801,"byte_end":13610807,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3196},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13612161,"byte_end":13612169,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":9618},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\from_iter.rs","byte_start":13612424,"byte_end":13612432,"line_start":58,"line_end":58,"column_start":52,"column_end":60},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":9618},"to":{"krate":0,"index":3408}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13613476,"byte_end":13613480,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":9579},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\once.rs","byte_start":13613705,"byte_end":13613709,"line_start":54,"line_end":54,"column_start":32,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":9579},"to":{"krate":0,"index":3408}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat.rs","byte_start":13614649,"byte_end":13614655,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3205},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13615224,"byte_end":13615234,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3214},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\repeat_with.rs","byte_start":13616426,"byte_end":13616436,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3214},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\next_back.rs","byte_start":13844789,"byte_end":13844803,"line_start":13,"line_end":13,"column_start":56,"column_end":70},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3254},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\nth_back.rs","byte_start":13845257,"byte_end":13845270,"line_start":14,"line_end":14,"column_start":13,"column_end":26},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\nth_back.rs","byte_start":13845409,"byte_end":13845422,"line_start":20,"line_end":20,"column_start":24,"column_end":37},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3279},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfind.rs","byte_start":13846279,"byte_end":13846290,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfind.rs","byte_start":13846431,"byte_end":13846442,"line_start":20,"line_end":20,"column_start":29,"column_end":40},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfind.rs","byte_start":13846483,"byte_end":13846494,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfold.rs","byte_start":13847419,"byte_end":13847430,"line_start":20,"line_end":20,"column_start":15,"column_end":26},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":9522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\rfold.rs","byte_start":13847630,"byte_end":13847641,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":9522},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\try_rfold.rs","byte_start":13848660,"byte_end":13848674,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":9465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\try_rfold.rs","byte_start":13848880,"byte_end":13848894,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":9465},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\double_ended_stream\\mod.rs","byte_start":13838146,"byte_end":13838152,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":"SuperTrait","from":{"krate":21,"index":96},"to":{"krate":0,"index":3408}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\exact_size_stream.rs","byte_start":13852140,"byte_end":13852146,"line_start":81,"line_end":81,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":21,"index":96},"to":{"krate":0,"index":3425}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\fused_stream.rs","byte_start":13860473,"byte_end":13860479,"line_start":19,"line_end":19,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":21,"index":96},"to":{"krate":0,"index":3471}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\interval.rs","byte_start":13862361,"byte_end":13862369,"line_start":67,"line_end":67,"column_start":17,"column_end":25},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3691},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\into_stream.rs","byte_start":13863589,"byte_end":13863590,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3514},"to":{"krate":0,"index":3509}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864750,"byte_end":13864757,"line_start":48,"line_end":48,"column_start":20,"column_end":27},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3696},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13864925,"byte_end":13864932,"line_start":56,"line_end":56,"column_start":31,"column_end":38},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3696},"to":{"krate":0,"index":3408}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13865079,"byte_end":13865086,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3696},"to":{"krate":0,"index":3471}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\pending.rs","byte_start":13865122,"byte_end":13865129,"line_start":64,"line_end":64,"column_start":29,"column_end":36},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3696},"to":{"krate":0,"index":3425}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\product.rs","byte_start":13865897,"byte_end":13865902,"line_start":18,"line_end":18,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":3569}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\successors.rs","byte_start":13869281,"byte_end":13869291,"line_start":58,"line_end":58,"column_start":23,"column_end":33},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":9416},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\stream\\sum.rs","byte_start":13870488,"byte_end":13870493,"line_start":18,"line_end":18,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":3623}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\lines.rs","byte_start":13900196,"byte_end":13900201,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":9368},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\read_line.rs","byte_start":13902123,"byte_end":13902137,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4486},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\read_until.rs","byte_start":13903596,"byte_end":13903611,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4522},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\split.rs","byte_start":13904811,"byte_end":13904816,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":9320},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","byte_start":13892268,"byte_end":13892275,"line_start":25,"line_end":25,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":29,"index":49},"to":{"krate":0,"index":4598}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_read\\mod.rs","byte_start":13898565,"byte_end":13898566,"line_start":240,"line_end":240,"column_start":42,"column_end":43},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4606},"to":{"krate":0,"index":4598}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\bytes.rs","byte_start":13917593,"byte_end":13917598,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5577},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13919413,"byte_end":13919418,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":9271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921577,"byte_end":13921582,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":9271},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13921824,"byte_end":13921829,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":9271},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\chain.rs","byte_start":13922974,"byte_end":13922979,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":9271},"to":{"krate":29,"index":49}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read.rs","byte_start":13924680,"byte_end":13924690,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4706},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_exact.rs","byte_start":13925265,"byte_end":13925280,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4739},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_to_end.rs","byte_start":13926202,"byte_end":13926217,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4769},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_to_end.rs","byte_start":13927367,"byte_end":13927372,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4781},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_to_string.rs","byte_start":13928689,"byte_end":13928707,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4817},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\read_vectored.rs","byte_start":13930061,"byte_end":13930079,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4853},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13930899,"byte_end":13930903,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":9231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13934575,"byte_end":13934579,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":9231},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\take.rs","byte_start":13935497,"byte_end":13935501,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":9231},"to":{"krate":29,"index":49}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13905985,"byte_end":13905989,"line_start":31,"line_end":31,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":29,"index":39},"to":{"krate":0,"index":4942}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\read\\mod.rs","byte_start":13915983,"byte_end":13915984,"line_start":376,"line_end":376,"column_start":36,"column_end":37},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4959},"to":{"krate":0,"index":4942}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\seek\\seek.rs","byte_start":13938390,"byte_end":13938400,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4987},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\seek\\mod.rs","byte_start":13937215,"byte_end":13937219,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":29,"index":47},"to":{"krate":0,"index":5005}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\seek\\mod.rs","byte_start":13938054,"byte_end":13938055,"line_start":50,"line_end":50,"column_start":36,"column_end":37},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5008},"to":{"krate":0,"index":5005}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\flush.rs","byte_start":13944191,"byte_end":13944202,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5031},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write.rs","byte_start":13944714,"byte_end":13944725,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5060},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_all.rs","byte_start":13945290,"byte_end":13945304,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5093},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_fmt.rs","byte_start":13946275,"byte_end":13946289,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5123},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\write_vectored.rs","byte_start":13947774,"byte_end":13947793,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5158},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\mod.rs","byte_start":13939031,"byte_end":13939036,"line_start":22,"line_end":22,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":29,"index":42},"to":{"krate":0,"index":5192}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\write\\mod.rs","byte_start":13943892,"byte_end":13943893,"line_start":187,"line_end":187,"column_start":38,"column_end":39},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5205},"to":{"krate":0,"index":5192}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\utils.rs","byte_start":13948260,"byte_end":13948266,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"kind":{"Impl":{"id":268}},"from":{"krate":2,"index":46410},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\utils.rs","byte_start":13948519,"byte_end":13948531,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\utils.rs","byte_start":13948818,"byte_end":13948830,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5583},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\utils.rs","byte_start":13948961,"byte_end":13948973,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5583},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13950954,"byte_end":13950963,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":9186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13952191,"byte_end":13952200,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":9186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13954940,"byte_end":13954949,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":9186},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13956403,"byte_end":13956412,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":9186},"to":{"krate":29,"index":49}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13957334,"byte_end":13957343,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":9186},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_reader.rs","byte_start":13957681,"byte_end":13957690,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":9186},"to":{"krate":29,"index":47}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13964520,"byte_end":13964529,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":9145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13970361,"byte_end":13970370,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":9145},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13971268,"byte_end":13971277,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":9145},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\buf_writer.rs","byte_start":13971523,"byte_end":13971532,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":9145},"to":{"krate":29,"index":47}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\copy.rs","byte_start":13976328,"byte_end":13976338,"line_start":150,"line_end":150,"column_start":27,"column_end":37},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":9096},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13978401,"byte_end":13978407,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981708,"byte_end":13981714,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5596},"to":{"krate":29,"index":47}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13981980,"byte_end":13981986,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5596},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13982502,"byte_end":13982508,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5596},"to":{"krate":29,"index":49}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13982858,"byte_end":13982864,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5596},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13983623,"byte_end":13983629,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5596},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\cursor.rs","byte_start":13984153,"byte_end":13984159,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5596},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985437,"byte_end":13985442,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5509},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985561,"byte_end":13985566,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5509},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\empty.rs","byte_start":13985770,"byte_end":13985775,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5509},"to":{"krate":29,"index":49}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13986960,"byte_end":13986966,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5541},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\repeat.rs","byte_start":13987085,"byte_end":13987091,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5541},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13988076,"byte_end":13988080,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5569},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\sink.rs","byte_start":13988199,"byte_end":13988203,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5569},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\timeout.rs","byte_start":13989951,"byte_end":13989958,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":9047},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13992949,"byte_end":13992955,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5818},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stderr.rs","byte_start":13996644,"byte_end":13996650,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5818},"to":{"krate":1,"index":6011}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":13999294,"byte_end":13999299,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":14001315,"byte_end":14001320,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5856},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdin.rs","byte_start":14003664,"byte_end":14003669,"line_start":214,"line_end":214,"column_start":26,"column_end":31},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5856},"to":{"krate":1,"index":6011}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14006794,"byte_end":14006800,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5895},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\io\\stdout.rs","byte_start":14010489,"byte_end":14010495,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5895},"to":{"krate":1,"index":6011}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14016170,"byte_end":14016187,"line_start":15,"line_end":15,"column_start":6,"column_end":23},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017350,"byte_end":14017357,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6075},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017382,"byte_end":14017389,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6075},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017411,"byte_end":14017418,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6075},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14017485,"byte_end":14017492,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14026266,"byte_end":14026273,"line_start":362,"line_end":362,"column_start":21,"column_end":28},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6075},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14027065,"byte_end":14027076,"line_start":384,"line_end":384,"column_start":28,"column_end":39},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6112},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\condvar.rs","byte_start":14027984,"byte_end":14027995,"line_start":411,"line_end":411,"column_start":26,"column_end":37},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6112},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\waker_set.rs","byte_start":14029637,"byte_end":14029645,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\waker_set.rs","byte_start":14033803,"byte_end":14033807,"line_start":190,"line_end":190,"column_start":15,"column_end":19},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6179},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\waker_set.rs","byte_start":14034373,"byte_end":14034377,"line_start":210,"line_end":210,"column_start":16,"column_end":20},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6179},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\sync\\waker_set.rs","byte_start":14034531,"byte_end":14034535,"line_start":219,"line_end":219,"column_start":19,"column_end":23},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6179},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_builder.rs","byte_start":14042838,"byte_end":14042848,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":7782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14046072,"byte_end":14046080,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14050043,"byte_end":14050051,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6424},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\dir_entry.rs","byte_start":14050204,"byte_end":14050212,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6424},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14052391,"byte_end":14052395,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":7788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14060163,"byte_end":14060167,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":7788},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14060662,"byte_end":14060666,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":7788},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14060780,"byte_end":14060784,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":7788},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14061265,"byte_end":14061269,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":7788},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14062433,"byte_end":14062437,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":7788},"to":{"krate":29,"index":47}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14062926,"byte_end":14062930,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":7788},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14063795,"byte_end":14063799,"line_start":444,"line_end":444,"column_start":26,"column_end":30},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":7788},"to":{"krate":1,"index":6011}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14063931,"byte_end":14063935,"line_start":450,"line_end":450,"column_start":28,"column_end":32},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":7788},"to":{"krate":1,"index":6013}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14064103,"byte_end":14064107,"line_start":456,"line_end":456,"column_start":28,"column_end":32},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":7788},"to":{"krate":1,"index":6015}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14064511,"byte_end":14064515,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6592},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14064552,"byte_end":14064556,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6592},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14064582,"byte_end":14064586,"line_start":473,"line_end":473,"column_start":19,"column_end":23},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6592},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14064938,"byte_end":14064942,"line_start":492,"line_end":492,"column_start":9,"column_end":13},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14066177,"byte_end":14066186,"line_start":529,"line_end":529,"column_start":31,"column_end":40},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6613},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14066223,"byte_end":14066232,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6613},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14066248,"byte_end":14066257,"line_start":532,"line_end":532,"column_start":9,"column_end":18},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14066648,"byte_end":14066657,"line_start":545,"line_end":545,"column_start":18,"column_end":27},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6613},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14066965,"byte_end":14066974,"line_start":557,"line_end":557,"column_start":19,"column_end":28},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6613},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14067100,"byte_end":14067109,"line_start":565,"line_end":565,"column_start":22,"column_end":31},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6613},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\file.rs","byte_start":14068670,"byte_end":14068679,"line_start":618,"line_end":618,"column_start":6,"column_end":15},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14092743,"byte_end":14092754,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":7818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\open_options.rs","byte_start":14099543,"byte_end":14099554,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7818},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14105395,"byte_end":14105402,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\fs\\read_dir.rs","byte_start":14105601,"byte_end":14105608,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7828},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120554,"byte_end":14120563,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7842},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\ancestors.rs","byte_start":14120768,"byte_end":14120777,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7842},"to":{"krate":2,"index":8260}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14121523,"byte_end":14121533,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14122042,"byte_end":14122052,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":7853},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14122145,"byte_end":14122155,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":7853},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14122261,"byte_end":14122271,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":7853},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14122428,"byte_end":14122438,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":7853},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14122563,"byte_end":14122573,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":7853},"to":{"krate":2,"index":8260}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\components.rs","byte_start":14122603,"byte_end":14122612,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":354}},"from":{"krate":1,"index":10793},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123243,"byte_end":14123247,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123720,"byte_end":14123724,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7879},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14123886,"byte_end":14123890,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7879},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14124031,"byte_end":14124042,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7044},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14124339,"byte_end":14124343,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":7879},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14124436,"byte_end":14124440,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":7879},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14124557,"byte_end":14124561,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":7879},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\iter.rs","byte_start":14124708,"byte_end":14124712,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":7879},"to":{"krate":2,"index":8260}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14126312,"byte_end":14126316,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":7885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151478,"byte_end":14151481,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"kind":{"Impl":{"id":364}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14151710,"byte_end":14151713,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"kind":{"Impl":{"id":365}},"from":{"krate":5,"index":5980},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152008,"byte_end":14152010,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"kind":{"Impl":{"id":366}},"from":{"krate":5,"index":4659},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152213,"byte_end":14152217,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":7885},"to":{"krate":5,"index":669}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152341,"byte_end":14152345,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":7885},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152439,"byte_end":14152443,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":7885},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152521,"byte_end":14152526,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"kind":{"Impl":{"id":370}},"from":{"krate":1,"index":3053},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152622,"byte_end":14152625,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"kind":{"Impl":{"id":371}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152751,"byte_end":14152754,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"kind":{"Impl":{"id":372}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14152854,"byte_end":14152862,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"kind":{"Impl":{"id":373}},"from":{"krate":1,"index":3050},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14153043,"byte_end":14153049,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"kind":{"Impl":{"id":375}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14153138,"byte_end":14153145,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14156293,"byte_end":14156297,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":7885},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14156404,"byte_end":14156408,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"kind":{"Impl":{"id":428}},"from":{"krate":1,"index":6741},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\path.rs","byte_start":14156504,"byte_end":14156511,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"kind":{"Impl":{"id":429}},"from":{"krate":1,"index":6632},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14157287,"byte_end":14157294,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":8159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162540,"byte_end":14162547,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162655,"byte_end":14162658,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"kind":{"Impl":{"id":432}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162758,"byte_end":14162761,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"kind":{"Impl":{"id":433}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14162912,"byte_end":14162919,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163036,"byte_end":14163043,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163152,"byte_end":14163160,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":436}},"from":{"krate":1,"index":3050},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163269,"byte_end":14163276,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163382,"byte_end":14163389,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":12324}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163568,"byte_end":14163575,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163770,"byte_end":14163777,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14163934,"byte_end":14163941,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14164062,"byte_end":14164069,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":2654}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14164161,"byte_end":14164164,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"kind":{"Impl":{"id":443}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14164296,"byte_end":14164299,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"kind":{"Impl":{"id":444}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14164450,"byte_end":14164457,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14164569,"byte_end":14164572,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"kind":{"Impl":{"id":446}},"from":{"krate":5,"index":5980},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14164795,"byte_end":14164797,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"kind":{"Impl":{"id":447}},"from":{"krate":5,"index":4659},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14165012,"byte_end":14165019,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14165164,"byte_end":14165171,"line_start":322,"line_end":322,"column_start":44,"column_end":51},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":8159},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14165713,"byte_end":14165720,"line_start":343,"line_end":343,"column_start":56,"column_end":63},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":8159},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14166163,"byte_end":14166170,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14166299,"byte_end":14166306,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":2960}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\path\\pathbuf.rs","byte_start":14166411,"byte_end":14166418,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14171246,"byte_end":14171265,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":7479},"to":{"krate":2,"index":3098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14171433,"byte_end":14171452,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":7479},"to":{"krate":0,"index":23}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14171724,"byte_end":14171743,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":7479},"to":{"krate":2,"index":13098}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14172446,"byte_end":14172456,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"kind":{"Impl":{"id":457}},"from":{"krate":1,"index":10489},"to":{"krate":0,"index":7476}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14172751,"byte_end":14172763,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"kind":{"Impl":{"id":458}},"from":{"krate":1,"index":10513},"to":{"krate":0,"index":7476}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14173128,"byte_end":14173140,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"kind":{"Impl":{"id":459}},"from":{"krate":1,"index":10516},"to":{"krate":0,"index":7476}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\addr.rs","byte_start":14176859,"byte_end":14176865,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"kind":{"Impl":{"id":461}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":7476}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14178798,"byte_end":14178809,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":8182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14184784,"byte_end":14184792,"line_start":231,"line_end":231,"column_start":17,"column_end":25},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":7609},"to":{"krate":21,"index":96}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14185127,"byte_end":14185135,"line_start":240,"line_end":240,"column_start":21,"column_end":29},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":7609},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14185291,"byte_end":14185302,"line_start":246,"line_end":246,"column_start":38,"column_end":49},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":8182},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14186261,"byte_end":14186272,"line_start":282,"line_end":282,"column_start":26,"column_end":37},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":8182},"to":{"krate":1,"index":6039}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14186407,"byte_end":14186418,"line_start":288,"line_end":288,"column_start":28,"column_end":39},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":8182},"to":{"krate":1,"index":6041}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\listener.rs","byte_start":14186601,"byte_end":14186612,"line_start":294,"line_end":294,"column_start":28,"column_end":39},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":8182},"to":{"krate":1,"index":6043}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14188610,"byte_end":14188619,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":8205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14195727,"byte_end":14195736,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":8205},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14196637,"byte_end":14196646,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":8205},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14198130,"byte_end":14198139,"line_start":372,"line_end":372,"column_start":36,"column_end":45},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":8205},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14199324,"byte_end":14199333,"line_start":411,"line_end":411,"column_start":26,"column_end":35},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":8205},"to":{"krate":1,"index":6039}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14199478,"byte_end":14199487,"line_start":417,"line_end":417,"column_start":28,"column_end":37},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":8205},"to":{"krate":1,"index":6041}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\tcp\\stream.rs","byte_start":14199666,"byte_end":14199675,"line_start":423,"line_end":423,"column_start":28,"column_end":37},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":8205},"to":{"krate":1,"index":6043}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14201528,"byte_end":14201537,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":8230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14217432,"byte_end":14217441,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":8230},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14218375,"byte_end":14218384,"line_start":562,"line_end":562,"column_start":26,"column_end":35},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":8230},"to":{"krate":1,"index":6039}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14218529,"byte_end":14218538,"line_start":568,"line_end":568,"column_start":28,"column_end":37},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":8230},"to":{"krate":1,"index":6041}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\net\\udp\\mod.rs","byte_start":14218717,"byte_end":14218726,"line_start":574,"line_end":574,"column_start":28,"column_end":37},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":8230},"to":{"krate":1,"index":6043}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\vec\\extend.rs","byte_start":14225873,"byte_end":14225876,"line_start":6,"line_end":6,"column_start":37,"column_end":40},"kind":{"Impl":{"id":481}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\vec\\from_stream.rs","byte_start":14226435,"byte_end":14226438,"line_start":9,"line_end":9,"column_start":33,"column_end":36},"kind":{"Impl":{"id":482}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\vec\\from_stream.rs","byte_start":14226889,"byte_end":14226892,"line_start":27,"line_end":27,"column_start":45,"column_end":48},"kind":{"Impl":{"id":483}},"from":{"krate":5,"index":678},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\vec\\from_stream.rs","byte_start":14227297,"byte_end":14227300,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"kind":{"Impl":{"id":484}},"from":{"krate":5,"index":321},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\vec\\from_stream.rs","byte_start":14227701,"byte_end":14227703,"line_start":59,"line_end":59,"column_start":33,"column_end":35},"kind":{"Impl":{"id":485}},"from":{"krate":5,"index":4659},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\vec\\from_stream.rs","byte_start":14228092,"byte_end":14228095,"line_start":75,"line_end":75,"column_start":33,"column_end":36},"kind":{"Impl":{"id":486}},"from":{"krate":5,"index":5980},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\result\\from_stream.rs","byte_start":14228830,"byte_end":14228836,"line_start":6,"line_end":6,"column_start":44,"column_end":50},"kind":{"Impl":{"id":487}},"from":{"krate":2,"index":46410},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\result\\product.rs","byte_start":14248986,"byte_end":14248992,"line_start":6,"line_end":6,"column_start":41,"column_end":47},"kind":{"Impl":{"id":488}},"from":{"krate":2,"index":46410},"to":{"krate":0,"index":3569}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\result\\sum.rs","byte_start":14251255,"byte_end":14251261,"line_start":6,"line_end":6,"column_start":37,"column_end":43},"kind":{"Impl":{"id":489}},"from":{"krate":2,"index":46410},"to":{"krate":0,"index":3623}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\option\\from_stream.rs","byte_start":14231291,"byte_end":14231297,"line_start":7,"line_end":7,"column_start":44,"column_end":50},"kind":{"Impl":{"id":490}},"from":{"krate":2,"index":46283},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\option\\product.rs","byte_start":14253520,"byte_end":14253526,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"kind":{"Impl":{"id":491}},"from":{"krate":2,"index":46283},"to":{"krate":0,"index":3569}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\option\\sum.rs","byte_start":14255327,"byte_end":14255333,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"kind":{"Impl":{"id":492}},"from":{"krate":2,"index":46283},"to":{"krate":0,"index":3623}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\extend.rs","byte_start":14232748,"byte_end":14232754,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"kind":{"Impl":{"id":493}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\extend.rs","byte_start":14233289,"byte_end":14233295,"line_start":28,"line_end":28,"column_start":39,"column_end":45},"kind":{"Impl":{"id":494}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\extend.rs","byte_start":14233790,"byte_end":14233796,"line_start":48,"line_end":48,"column_start":38,"column_end":44},"kind":{"Impl":{"id":495}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\extend.rs","byte_start":14234288,"byte_end":14234294,"line_start":68,"line_end":68,"column_start":33,"column_end":39},"kind":{"Impl":{"id":496}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\extend.rs","byte_start":14234795,"byte_end":14234801,"line_start":88,"line_end":88,"column_start":43,"column_end":49},"kind":{"Impl":{"id":497}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\from_stream.rs","byte_start":14235409,"byte_end":14235415,"line_start":7,"line_end":7,"column_start":27,"column_end":33},"kind":{"Impl":{"id":498}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\from_stream.rs","byte_start":14235864,"byte_end":14235870,"line_start":25,"line_end":25,"column_start":35,"column_end":41},"kind":{"Impl":{"id":499}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\from_stream.rs","byte_start":14236322,"byte_end":14236328,"line_start":43,"line_end":43,"column_start":34,"column_end":40},"kind":{"Impl":{"id":500}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\from_stream.rs","byte_start":14236774,"byte_end":14236780,"line_start":61,"line_end":61,"column_start":29,"column_end":35},"kind":{"Impl":{"id":501}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\string\\from_stream.rs","byte_start":14237235,"byte_end":14237241,"line_start":79,"line_end":79,"column_start":39,"column_end":45},"kind":{"Impl":{"id":502}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\binary_heap\\extend.rs","byte_start":14238470,"byte_end":14238480,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"kind":{"Impl":{"id":503}},"from":{"krate":5,"index":806},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\binary_heap\\from_stream.rs","byte_start":14239020,"byte_end":14239030,"line_start":7,"line_end":7,"column_start":39,"column_end":49},"kind":{"Impl":{"id":504}},"from":{"krate":5,"index":806},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\btree_map\\extend.rs","byte_start":14239726,"byte_end":14239734,"line_start":7,"line_end":7,"column_start":57,"column_end":65},"kind":{"Impl":{"id":505}},"from":{"krate":5,"index":1397},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\btree_map\\from_stream.rs","byte_start":14240248,"byte_end":14240256,"line_start":7,"line_end":7,"column_start":53,"column_end":61},"kind":{"Impl":{"id":506}},"from":{"krate":5,"index":1397},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\btree_set\\extend.rs","byte_start":14240945,"byte_end":14240953,"line_start":7,"line_end":7,"column_start":43,"column_end":51},"kind":{"Impl":{"id":507}},"from":{"krate":5,"index":7463},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\btree_set\\from_stream.rs","byte_start":14241443,"byte_end":14241451,"line_start":7,"line_end":7,"column_start":39,"column_end":47},"kind":{"Impl":{"id":508}},"from":{"krate":5,"index":7463},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\hash_map\\extend.rs","byte_start":14242216,"byte_end":14242223,"line_start":8,"line_end":8,"column_start":42,"column_end":49},"kind":{"Impl":{"id":509}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\hash_map\\from_stream.rs","byte_start":14243510,"byte_end":14243517,"line_start":8,"line_end":8,"column_start":38,"column_end":45},"kind":{"Impl":{"id":510}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\hash_set\\extend.rs","byte_start":14244391,"byte_end":14244398,"line_start":8,"line_end":8,"column_start":34,"column_end":41},"kind":{"Impl":{"id":511}},"from":{"krate":1,"index":2011},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\hash_set\\from_stream.rs","byte_start":14245847,"byte_end":14245854,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"kind":{"Impl":{"id":512}},"from":{"krate":1,"index":2011},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\linked_list\\extend.rs","byte_start":14246654,"byte_end":14246664,"line_start":7,"line_end":7,"column_start":37,"column_end":47},"kind":{"Impl":{"id":513}},"from":{"krate":5,"index":3354},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\linked_list\\from_stream.rs","byte_start":14247157,"byte_end":14247167,"line_start":7,"line_end":7,"column_start":33,"column_end":43},"kind":{"Impl":{"id":514}},"from":{"krate":5,"index":3354},"to":{"krate":0,"index":3462}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\vec_deque\\extend.rs","byte_start":14247894,"byte_end":14247902,"line_start":7,"line_end":7,"column_start":37,"column_end":45},"kind":{"Impl":{"id":515}},"from":{"krate":5,"index":4167},"to":{"krate":0,"index":3440}},{"span":{"file_name":"C:\\Users\\tubak\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.11.0\\src\\collections\\vec_deque\\from_stream.rs","byte_start":14248439,"byte_end":14248447,"line_start":7,"line_end":7,"column_start":33,"column_end":41},"kind":{"Impl":{"id":516}},"from":{"krate":5,"index":4167},"to":{"krate":0,"index":3462}}]}